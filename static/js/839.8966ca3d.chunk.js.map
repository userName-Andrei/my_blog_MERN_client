{"version":3,"file":"static/js/839.8966ca3d.chunk.js","mappings":"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","sources":["../node_modules/@mui/icons-material/Comment.js","../node_modules/@mui/icons-material/Delete.js","../node_modules/@mui/icons-material/Edit.js","../node_modules/@mui/icons-material/Visibility.js","../node_modules/@mui/system/esm/createBox.js","../node_modules/@mui/material/Box/Box.js","../node_modules/@mui/material/CardContent/cardContentClasses.js","../node_modules/@mui/material/CardContent/CardContent.js","../node_modules/@mui/material/CardHeader/cardHeaderClasses.js","../node_modules/@mui/material/CardHeader/CardHeader.js","../node_modules/@mui/material/CardMedia/cardMediaClasses.js","../node_modules/@mui/material/CardMedia/CardMedia.js","../node_modules/@mui/material/Card/cardClasses.js","../node_modules/@mui/material/Card/Card.js","../node_modules/@mui/material/Divider/Divider.js","../node_modules/@mui/material/ListItemAvatar/listItemAvatarClasses.js","../node_modules/@mui/material/ListItemAvatar/ListItemAvatar.js","../node_modules/@mui/material/ListItemText/ListItemText.js","../node_modules/@mui/material/ListItem/listItemClasses.js","../node_modules/@mui/material/ListItemButton/listItemButtonClasses.js","../node_modules/@mui/material/ListItemSecondaryAction/listItemSecondaryActionClasses.js","../node_modules/@mui/material/ListItemSecondaryAction/ListItemSecondaryAction.js","../node_modules/@mui/material/ListItem/ListItem.js","../node_modules/@mui/material/styles/cssUtils.js","../node_modules/@mui/material/Skeleton/skeletonClasses.js","../node_modules/@mui/material/Skeleton/Skeleton.js","../node_modules/extend/index.js","../node_modules/inline-style-parser/index.js","../node_modules/is-buffer/index.js","../node_modules/mdurl/encode.js","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js","../node_modules/react-markdown/node_modules/react-is/cjs/react-is.production.min.js","../node_modules/react-markdown/node_modules/react-is/index.js","../node_modules/style-to-object/index.js","../node_modules/unist-util-stringify-position/index.js","../node_modules/vfile-message/index.js","../node_modules/vfile/lib/minpath.browser.js","../node_modules/vfile/lib/minproc.browser.js","../node_modules/vfile/lib/minurl.shared.js","../node_modules/vfile/lib/minurl.browser.js","../node_modules/vfile/lib/index.js","../node_modules/@babel/runtime/helpers/esm/toArray.js","../node_modules/bail/index.js","../node_modules/unified/node_modules/is-plain-obj/index.js","../node_modules/trough/index.js","../node_modules/unified/lib/index.js","../node_modules/mdast-util-to-string/index.js","../node_modules/micromark-util-chunked/index.js","../node_modules/micromark-util-combine-extensions/index.js","../node_modules/micromark-util-character/lib/unicode-punctuation-regex.js","../node_modules/micromark-util-character/index.js","../node_modules/micromark-factory-space/index.js","../node_modules/micromark/lib/initialize/content.js","../node_modules/micromark/lib/initialize/document.js","../node_modules/micromark-core-commonmark/lib/blank-line.js","../node_modules/micromark-util-subtokenize/index.js","../node_modules/micromark-core-commonmark/lib/content.js","../node_modules/micromark/lib/initialize/flow.js","../node_modules/micromark/lib/initialize/text.js","../node_modules/micromark-util-resolve-all/index.js","../node_modules/micromark/lib/create-tokenizer.js","../node_modules/micromark-core-commonmark/lib/thematic-break.js","../node_modules/micromark-core-commonmark/lib/list.js","../node_modules/micromark-core-commonmark/lib/block-quote.js","../node_modules/micromark-factory-destination/index.js","../node_modules/micromark-factory-label/index.js","../node_modules/micromark-factory-title/index.js","../node_modules/micromark-factory-whitespace/index.js","../node_modules/micromark-util-normalize-identifier/index.js","../node_modules/micromark-core-commonmark/lib/definition.js","../node_modules/micromark-core-commonmark/lib/code-indented.js","../node_modules/micromark-core-commonmark/lib/heading-atx.js","../node_modules/micromark-core-commonmark/lib/setext-underline.js","../node_modules/micromark-util-html-tag-name/index.js","../node_modules/micromark-core-commonmark/lib/html-flow.js","../node_modules/micromark-core-commonmark/lib/code-fenced.js","../node_modules/decode-named-character-reference/index.dom.js","../node_modules/micromark-core-commonmark/lib/character-reference.js","../node_modules/micromark-core-commonmark/lib/character-escape.js","../node_modules/micromark-core-commonmark/lib/line-ending.js","../node_modules/micromark-core-commonmark/lib/label-end.js","../node_modules/micromark-core-commonmark/lib/label-start-image.js","../node_modules/micromark-util-classify-character/index.js","../node_modules/micromark-core-commonmark/lib/attention.js","../node_modules/micromark-core-commonmark/lib/autolink.js","../node_modules/micromark-core-commonmark/lib/html-text.js","../node_modules/micromark-core-commonmark/lib/label-start-link.js","../node_modules/micromark-core-commonmark/lib/hard-break-escape.js","../node_modules/micromark-core-commonmark/lib/code-text.js","../node_modules/micromark/lib/constructs.js","../node_modules/micromark/lib/preprocess.js","../node_modules/micromark-util-decode-numeric-character-reference/index.js","../node_modules/micromark-util-decode-string/index.js","../node_modules/mdast-util-from-markdown/lib/index.js","../node_modules/micromark/lib/postprocess.js","../node_modules/micromark/lib/parse.js","../node_modules/remark-parse/index.js","../node_modules/remark-parse/lib/index.js","../node_modules/unist-builder/index.js","../node_modules/unist-util-is/index.js","../node_modules/unist-util-visit-parents/index.js","../node_modules/unist-util-visit/index.js","../node_modules/unist-util-position/index.js","../node_modules/mdast-util-definitions/index.js","../node_modules/mdast-util-to-hast/lib/traverse.js","../node_modules/micromark-util-encode/index.js","../node_modules/micromark-util-sanitize-uri/index.js","../node_modules/mdast-util-to-hast/lib/wrap.js","../node_modules/mdast-util-to-hast/lib/handlers/footnote-reference.js","../node_modules/mdast-util-to-hast/lib/revert.js","../node_modules/mdast-util-to-hast/lib/handlers/list-item.js","../node_modules/trim-lines/index.js","../node_modules/mdast-util-to-hast/lib/handlers/index.js","../node_modules/mdast-util-to-hast/lib/handlers/blockquote.js","../node_modules/mdast-util-to-hast/lib/handlers/break.js","../node_modules/mdast-util-to-hast/lib/handlers/code.js","../node_modules/mdast-util-to-hast/lib/handlers/delete.js","../node_modules/mdast-util-to-hast/lib/handlers/emphasis.js","../node_modules/mdast-util-to-hast/lib/handlers/footnote.js","../node_modules/mdast-util-to-hast/lib/handlers/heading.js","../node_modules/mdast-util-to-hast/lib/handlers/html.js","../node_modules/mdast-util-to-hast/lib/handlers/image-reference.js","../node_modules/mdast-util-to-hast/lib/handlers/image.js","../node_modules/mdast-util-to-hast/lib/handlers/inline-code.js","../node_modules/mdast-util-to-hast/lib/handlers/link-reference.js","../node_modules/mdast-util-to-hast/lib/handlers/link.js","../node_modules/mdast-util-to-hast/lib/handlers/list.js","../node_modules/mdast-util-to-hast/lib/handlers/paragraph.js","../node_modules/mdast-util-to-hast/lib/handlers/root.js","../node_modules/mdast-util-to-hast/lib/handlers/strong.js","../node_modules/mdast-util-to-hast/lib/handlers/table.js","../node_modules/mdast-util-to-hast/lib/handlers/text.js","../node_modules/mdast-util-to-hast/lib/handlers/thematic-break.js","../node_modules/mdast-util-to-hast/lib/index.js","../node_modules/unist-util-generated/index.js","../node_modules/mdast-util-to-hast/lib/footer.js","../node_modules/remark-rehype/lib/index.js","../node_modules/property-information/lib/util/schema.js","../node_modules/property-information/lib/util/merge.js","../node_modules/property-information/lib/normalize.js","../node_modules/property-information/lib/util/info.js","../node_modules/property-information/lib/util/types.js","../node_modules/property-information/lib/util/defined-info.js","../node_modules/property-information/lib/util/create.js","../node_modules/property-information/lib/xlink.js","../node_modules/property-information/lib/xml.js","../node_modules/property-information/lib/util/case-sensitive-transform.js","../node_modules/property-information/lib/util/case-insensitive-transform.js","../node_modules/property-information/lib/xmlns.js","../node_modules/property-information/lib/aria.js","../node_modules/property-information/lib/html.js","../node_modules/property-information/lib/svg.js","../node_modules/property-information/index.js","../node_modules/react-markdown/lib/rehype-filter.js","../node_modules/react-markdown/lib/uri-transformer.js","../node_modules/hast-util-whitespace/index.js","../node_modules/property-information/lib/find.js","../node_modules/property-information/lib/hast-to-react.js","../node_modules/react-markdown/lib/ast-to-react.js","../node_modules/comma-separated-tokens/index.js","../node_modules/space-separated-tokens/index.js","../node_modules/react-markdown/lib/react-markdown.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M21.99 4c0-1.1-.89-2-1.99-2H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h14l4 4-.01-18zM18 14H6v-2h12v2zm0-3H6V9h12v2zm0-3H6V6h12v2z\"\n}), 'Comment');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 0 0-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"\n}), 'Edit');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z\"\n}), 'Visibility');\n\nexports.default = _default;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport styled from '@mui/styled-engine';\nimport defaultStyleFunctionSx, { extendSxProp } from './styleFunctionSx';\nimport useTheme from './useTheme';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function createBox(options = {}) {\n  const {\n    defaultTheme,\n    defaultClassName = 'MuiBox-root',\n    generateClassName,\n    styleFunctionSx = defaultStyleFunctionSx\n  } = options;\n  const BoxRoot = styled('div')(styleFunctionSx);\n  const Box = /*#__PURE__*/React.forwardRef(function Box(inProps, ref) {\n    const theme = useTheme(defaultTheme);\n\n    const _extendSxProp = extendSxProp(inProps),\n          {\n      className,\n      component = 'div'\n    } = _extendSxProp,\n          other = _objectWithoutPropertiesLoose(_extendSxProp, _excluded);\n\n    return /*#__PURE__*/_jsx(BoxRoot, _extends({\n      as: component,\n      ref: ref,\n      className: clsx(className, generateClassName ? generateClassName(defaultClassName) : defaultClassName),\n      theme: theme\n    }, other));\n  });\n  return Box;\n}","import { createBox } from '@mui/system';\nimport PropTypes from 'prop-types';\nimport { unstable_ClassNameGenerator as ClassNameGenerator } from '../className';\nimport { createTheme } from '../styles';\nconst defaultTheme = createTheme();\nconst Box = createBox({\n  defaultTheme,\n  defaultClassName: 'MuiBox-root',\n  generateClassName: ClassNameGenerator.generate\n});\nprocess.env.NODE_ENV !== \"production\" ? Box.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Box;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getCardContentUtilityClass(slot) {\n  return generateUtilityClass('MuiCardContent', slot);\n}\nconst cardContentClasses = generateUtilityClasses('MuiCardContent', ['root']);\nexport default cardContentClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getCardContentUtilityClass } from './cardContentClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardContentUtilityClass, classes);\n};\n\nconst CardContentRoot = styled('div', {\n  name: 'MuiCardContent',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  };\n});\nconst CardContent = /*#__PURE__*/React.forwardRef(function CardContent(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCardContent'\n  });\n\n  const {\n    className,\n    component = 'div'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    component\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardContentRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardContent;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getCardHeaderUtilityClass(slot) {\n  return generateUtilityClass('MuiCardHeader', slot);\n}\nconst cardHeaderClasses = generateUtilityClasses('MuiCardHeader', ['root', 'avatar', 'action', 'content', 'title', 'subheader']);\nexport default cardHeaderClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"action\", \"avatar\", \"className\", \"component\", \"disableTypography\", \"subheader\", \"subheaderTypographyProps\", \"title\", \"titleTypographyProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport Typography from '../Typography';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport cardHeaderClasses, { getCardHeaderUtilityClass } from './cardHeaderClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    avatar: ['avatar'],\n    action: ['action'],\n    content: ['content'],\n    title: ['title'],\n    subheader: ['subheader']\n  };\n  return composeClasses(slots, getCardHeaderUtilityClass, classes);\n};\n\nconst CardHeaderRoot = styled('div', {\n  name: 'MuiCardHeader',\n  slot: 'Root',\n  overridesResolver: (props, styles) => _extends({\n    [`& .${cardHeaderClasses.title}`]: styles.title,\n    [`& .${cardHeaderClasses.subheader}`]: styles.subheader\n  }, styles.root)\n})({\n  display: 'flex',\n  alignItems: 'center',\n  padding: 16\n});\nconst CardHeaderAvatar = styled('div', {\n  name: 'MuiCardHeader',\n  slot: 'Avatar',\n  overridesResolver: (props, styles) => styles.avatar\n})({\n  display: 'flex',\n  flex: '0 0 auto',\n  marginRight: 16\n});\nconst CardHeaderAction = styled('div', {\n  name: 'MuiCardHeader',\n  slot: 'Action',\n  overridesResolver: (props, styles) => styles.action\n})({\n  flex: '0 0 auto',\n  alignSelf: 'flex-start',\n  marginTop: -4,\n  marginRight: -8,\n  marginBottom: -4\n});\nconst CardHeaderContent = styled('div', {\n  name: 'MuiCardHeader',\n  slot: 'Content',\n  overridesResolver: (props, styles) => styles.content\n})({\n  flex: '1 1 auto'\n});\nconst CardHeader = /*#__PURE__*/React.forwardRef(function CardHeader(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCardHeader'\n  });\n\n  const {\n    action,\n    avatar,\n    className,\n    component = 'div',\n    disableTypography = false,\n    subheader: subheaderProp,\n    subheaderTypographyProps,\n    title: titleProp,\n    titleTypographyProps\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    component,\n    disableTypography\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  let title = titleProp;\n\n  if (title != null && title.type !== Typography && !disableTypography) {\n    title = /*#__PURE__*/_jsx(Typography, _extends({\n      variant: avatar ? 'body2' : 'h5',\n      className: classes.title,\n      component: \"span\",\n      display: \"block\"\n    }, titleTypographyProps, {\n      children: title\n    }));\n  }\n\n  let subheader = subheaderProp;\n\n  if (subheader != null && subheader.type !== Typography && !disableTypography) {\n    subheader = /*#__PURE__*/_jsx(Typography, _extends({\n      variant: avatar ? 'body2' : 'body1',\n      className: classes.subheader,\n      color: \"text.secondary\",\n      component: \"span\",\n      display: \"block\"\n    }, subheaderTypographyProps, {\n      children: subheader\n    }));\n  }\n\n  return /*#__PURE__*/_jsxs(CardHeaderRoot, _extends({\n    className: clsx(classes.root, className),\n    as: component,\n    ref: ref,\n    ownerState: ownerState\n  }, other, {\n    children: [avatar && /*#__PURE__*/_jsx(CardHeaderAvatar, {\n      className: classes.avatar,\n      ownerState: ownerState,\n      children: avatar\n    }), /*#__PURE__*/_jsxs(CardHeaderContent, {\n      className: classes.content,\n      ownerState: ownerState,\n      children: [title, subheader]\n    }), action && /*#__PURE__*/_jsx(CardHeaderAction, {\n      className: classes.action,\n      ownerState: ownerState,\n      children: action\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardHeader.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The action to display in the card header.\n   */\n  action: PropTypes.node,\n\n  /**\n   * The Avatar element to display.\n   */\n  avatar: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, `subheader` and `title` won't be wrapped by a Typography component.\n   * This can be useful to render an alternative Typography variant by wrapping\n   * the `title` text, and optional `subheader` text\n   * with the Typography component.\n   * @default false\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\n   * The content of the component.\n   */\n  subheader: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the subheader\n   * (as long as disableTypography is not `true`).\n   */\n  subheaderTypographyProps: PropTypes.object,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The content of the component.\n   */\n  title: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the title\n   * (as long as disableTypography is not `true`).\n   */\n  titleTypographyProps: PropTypes.object\n} : void 0;\nexport default CardHeader;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getCardMediaUtilityClass(slot) {\n  return generateUtilityClass('MuiCardMedia', slot);\n}\nconst cardMediaClasses = generateUtilityClasses('MuiCardMedia', ['root', 'media', 'img']);\nexport default cardMediaClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"className\", \"component\", \"image\", \"src\", \"style\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport { getCardMediaUtilityClass } from './cardMediaClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    isMediaComponent,\n    isImageComponent\n  } = ownerState;\n  const slots = {\n    root: ['root', isMediaComponent && 'media', isImageComponent && 'img']\n  };\n  return composeClasses(slots, getCardMediaUtilityClass, classes);\n};\n\nconst CardMediaRoot = styled('div', {\n  name: 'MuiCardMedia',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    const {\n      isMediaComponent,\n      isImageComponent\n    } = ownerState;\n    return [styles.root, isMediaComponent && styles.media, isImageComponent && styles.img];\n  }\n})(({\n  ownerState\n}) => _extends({\n  display: 'block',\n  backgroundSize: 'cover',\n  backgroundRepeat: 'no-repeat',\n  backgroundPosition: 'center'\n}, ownerState.isMediaComponent && {\n  width: '100%'\n}, ownerState.isImageComponent && {\n  // ⚠️ object-fit is not supported by IE11.\n  objectFit: 'cover'\n}));\nconst MEDIA_COMPONENTS = ['video', 'audio', 'picture', 'iframe', 'img'];\nconst IMAGE_COMPONENTS = ['picture', 'img'];\nconst CardMedia = /*#__PURE__*/React.forwardRef(function CardMedia(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCardMedia'\n  });\n\n  const {\n    children,\n    className,\n    component = 'div',\n    image,\n    src,\n    style\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const isMediaComponent = MEDIA_COMPONENTS.indexOf(component) !== -1;\n  const composedStyle = !isMediaComponent && image ? _extends({\n    backgroundImage: `url(\"${image}\")`\n  }, style) : style;\n\n  const ownerState = _extends({}, props, {\n    component,\n    isMediaComponent,\n    isImageComponent: IMAGE_COMPONENTS.indexOf(component) !== -1\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardMediaRoot, _extends({\n    className: clsx(classes.root, className),\n    as: component,\n    role: !isMediaComponent && image ? 'img' : undefined,\n    ref: ref,\n    style: composedStyle,\n    ownerState: ownerState,\n    src: isMediaComponent ? image || src : undefined\n  }, other, {\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardMedia.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: chainPropTypes(PropTypes.node, props => {\n    if (!props.children && !props.image && !props.src && !props.component) {\n      return new Error('MUI: Either `children`, `image`, `src` or `component` prop must be specified.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Image to be displayed as a background image.\n   * Either `image` or `src` prop must be specified.\n   * Note that caller must specify height otherwise the image will not be visible.\n   */\n  image: PropTypes.string,\n\n  /**\n   * An alias for `image` property.\n   * Available only with media components.\n   * Media components: `video`, `audio`, `picture`, `iframe`, `img`.\n   */\n  src: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardMedia;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getCardUtilityClass(slot) {\n  return generateUtilityClass('MuiCard', slot);\n}\nconst cardClasses = generateUtilityClasses('MuiCard', ['root']);\nexport default cardClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"raised\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Paper from '../Paper';\nimport { getCardUtilityClass } from './cardClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardUtilityClass, classes);\n};\n\nconst CardRoot = styled(Paper, {\n  name: 'MuiCard',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    overflow: 'hidden'\n  };\n});\nconst Card = /*#__PURE__*/React.forwardRef(function Card(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCard'\n  });\n\n  const {\n    className,\n    raised = false\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    raised\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardRoot, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : undefined,\n    ref: ref,\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the card will use raised styling.\n   * @default false\n   */\n  raised: chainPropTypes(PropTypes.bool, props => {\n    if (props.raised && props.variant === 'outlined') {\n      return new Error('MUI: Combining `raised={true}` with `variant=\"outlined\"` has no effect.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Card;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"absolute\", \"children\", \"className\", \"component\", \"flexItem\", \"light\", \"orientation\", \"role\", \"textAlign\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { alpha } from '@mui/system';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getDividerUtilityClass } from './dividerClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    absolute,\n    children,\n    classes,\n    flexItem,\n    light,\n    orientation,\n    textAlign,\n    variant\n  } = ownerState;\n  const slots = {\n    root: ['root', absolute && 'absolute', variant, light && 'light', orientation === 'vertical' && 'vertical', flexItem && 'flexItem', children && 'withChildren', children && orientation === 'vertical' && 'withChildrenVertical', textAlign === 'right' && orientation !== 'vertical' && 'textAlignRight', textAlign === 'left' && orientation !== 'vertical' && 'textAlignLeft'],\n    wrapper: ['wrapper', orientation === 'vertical' && 'wrapperVertical']\n  };\n  return composeClasses(slots, getDividerUtilityClass, classes);\n};\n\nconst DividerRoot = styled('div', {\n  name: 'MuiDivider',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.absolute && styles.absolute, styles[ownerState.variant], ownerState.light && styles.light, ownerState.orientation === 'vertical' && styles.vertical, ownerState.flexItem && styles.flexItem, ownerState.children && styles.withChildren, ownerState.children && ownerState.orientation === 'vertical' && styles.withChildrenVertical, ownerState.textAlign === 'right' && ownerState.orientation !== 'vertical' && styles.textAlignRight, ownerState.textAlign === 'left' && ownerState.orientation !== 'vertical' && styles.textAlignLeft];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  margin: 0,\n  // Reset browser default style.\n  flexShrink: 0,\n  borderWidth: 0,\n  borderStyle: 'solid',\n  borderColor: (theme.vars || theme).palette.divider,\n  borderBottomWidth: 'thin'\n}, ownerState.absolute && {\n  position: 'absolute',\n  bottom: 0,\n  left: 0,\n  width: '100%'\n}, ownerState.light && {\n  borderColor: theme.vars ? `rgba(${theme.vars.palette.dividerChannel} / 0.08)` : alpha(theme.palette.divider, 0.08)\n}, ownerState.variant === 'inset' && {\n  marginLeft: 72\n}, ownerState.variant === 'middle' && ownerState.orientation === 'horizontal' && {\n  marginLeft: theme.spacing(2),\n  marginRight: theme.spacing(2)\n}, ownerState.variant === 'middle' && ownerState.orientation === 'vertical' && {\n  marginTop: theme.spacing(1),\n  marginBottom: theme.spacing(1)\n}, ownerState.orientation === 'vertical' && {\n  height: '100%',\n  borderBottomWidth: 0,\n  borderRightWidth: 'thin'\n}, ownerState.flexItem && {\n  alignSelf: 'stretch',\n  height: 'auto'\n}), ({\n  theme,\n  ownerState\n}) => _extends({}, ownerState.children && {\n  display: 'flex',\n  whiteSpace: 'nowrap',\n  textAlign: 'center',\n  border: 0,\n  '&::before, &::after': {\n    position: 'relative',\n    width: '100%',\n    borderTop: `thin solid ${(theme.vars || theme).palette.divider}`,\n    top: '50%',\n    content: '\"\"',\n    transform: 'translateY(50%)'\n  }\n}), ({\n  theme,\n  ownerState\n}) => _extends({}, ownerState.children && ownerState.orientation === 'vertical' && {\n  flexDirection: 'column',\n  '&::before, &::after': {\n    height: '100%',\n    top: '0%',\n    left: '50%',\n    borderTop: 0,\n    borderLeft: `thin solid ${(theme.vars || theme).palette.divider}`,\n    transform: 'translateX(0%)'\n  }\n}), ({\n  ownerState\n}) => _extends({}, ownerState.textAlign === 'right' && ownerState.orientation !== 'vertical' && {\n  '&::before': {\n    width: '90%'\n  },\n  '&::after': {\n    width: '10%'\n  }\n}, ownerState.textAlign === 'left' && ownerState.orientation !== 'vertical' && {\n  '&::before': {\n    width: '10%'\n  },\n  '&::after': {\n    width: '90%'\n  }\n}));\nconst DividerWrapper = styled('span', {\n  name: 'MuiDivider',\n  slot: 'Wrapper',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.wrapper, ownerState.orientation === 'vertical' && styles.wrapperVertical];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  display: 'inline-block',\n  paddingLeft: `calc(${theme.spacing(1)} * 1.2)`,\n  paddingRight: `calc(${theme.spacing(1)} * 1.2)`\n}, ownerState.orientation === 'vertical' && {\n  paddingTop: `calc(${theme.spacing(1)} * 1.2)`,\n  paddingBottom: `calc(${theme.spacing(1)} * 1.2)`\n}));\nconst Divider = /*#__PURE__*/React.forwardRef(function Divider(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiDivider'\n  });\n\n  const {\n    absolute = false,\n    children,\n    className,\n    component = children ? 'div' : 'hr',\n    flexItem = false,\n    light = false,\n    orientation = 'horizontal',\n    role = component !== 'hr' ? 'separator' : undefined,\n    textAlign = 'center',\n    variant = 'fullWidth'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    absolute,\n    component,\n    flexItem,\n    light,\n    orientation,\n    role,\n    textAlign,\n    variant\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(DividerRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    role: role,\n    ref: ref,\n    ownerState: ownerState\n  }, other, {\n    children: children ? /*#__PURE__*/_jsx(DividerWrapper, {\n      className: classes.wrapper,\n      ownerState: ownerState,\n      children: children\n    }) : null\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Divider.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Absolutely position the element.\n   * @default false\n   */\n  absolute: PropTypes.bool,\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, a vertical divider will have the correct height when used in flex container.\n   * (By default, a vertical divider will have a calculated height of `0px` if it is the child of a flex container.)\n   * @default false\n   */\n  flexItem: PropTypes.bool,\n\n  /**\n   * If `true`, the divider will have a lighter color.\n   * @default false\n   */\n  light: PropTypes.bool,\n\n  /**\n   * The component orientation.\n   * @default 'horizontal'\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']),\n\n  /**\n   * @ignore\n   */\n  role: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .string,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The text alignment.\n   * @default 'center'\n   */\n  textAlign: PropTypes.oneOf(['center', 'left', 'right']),\n\n  /**\n   * The variant to use.\n   * @default 'fullWidth'\n   */\n  variant: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['fullWidth', 'inset', 'middle']), PropTypes.string])\n} : void 0;\nexport default Divider;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getListItemAvatarUtilityClass(slot) {\n  return generateUtilityClass('MuiListItemAvatar', slot);\n}\nconst listItemAvatarClasses = generateUtilityClasses('MuiListItemAvatar', ['root', 'alignItemsFlexStart']);\nexport default listItemAvatarClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport ListContext from '../List/ListContext';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getListItemAvatarUtilityClass } from './listItemAvatarClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    alignItems,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', alignItems === 'flex-start' && 'alignItemsFlexStart']\n  };\n  return composeClasses(slots, getListItemAvatarUtilityClass, classes);\n};\n\nconst ListItemAvatarRoot = styled('div', {\n  name: 'MuiListItemAvatar',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.alignItems === 'flex-start' && styles.alignItemsFlexStart];\n  }\n})(({\n  ownerState\n}) => _extends({\n  minWidth: 56,\n  flexShrink: 0\n}, ownerState.alignItems === 'flex-start' && {\n  marginTop: 8\n}));\n/**\n * A simple wrapper to apply `List` styles to an `Avatar`.\n */\n\nconst ListItemAvatar = /*#__PURE__*/React.forwardRef(function ListItemAvatar(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiListItemAvatar'\n  });\n\n  const {\n    className\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const context = React.useContext(ListContext);\n\n  const ownerState = _extends({}, props, {\n    alignItems: context.alignItems\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(ListItemAvatarRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemAvatar.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component, normally an `Avatar`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default ListItemAvatar;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"className\", \"disableTypography\", \"inset\", \"primary\", \"primaryTypographyProps\", \"secondary\", \"secondaryTypographyProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport Typography from '../Typography';\nimport ListContext from '../List/ListContext';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport listItemTextClasses, { getListItemTextUtilityClass } from './listItemTextClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    inset,\n    primary,\n    secondary,\n    dense\n  } = ownerState;\n  const slots = {\n    root: ['root', inset && 'inset', dense && 'dense', primary && secondary && 'multiline'],\n    primary: ['primary'],\n    secondary: ['secondary']\n  };\n  return composeClasses(slots, getListItemTextUtilityClass, classes);\n};\n\nconst ListItemTextRoot = styled('div', {\n  name: 'MuiListItemText',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [{\n      [`& .${listItemTextClasses.primary}`]: styles.primary\n    }, {\n      [`& .${listItemTextClasses.secondary}`]: styles.secondary\n    }, styles.root, ownerState.inset && styles.inset, ownerState.primary && ownerState.secondary && styles.multiline, ownerState.dense && styles.dense];\n  }\n})(({\n  ownerState\n}) => _extends({\n  flex: '1 1 auto',\n  minWidth: 0,\n  marginTop: 4,\n  marginBottom: 4\n}, ownerState.primary && ownerState.secondary && {\n  marginTop: 6,\n  marginBottom: 6\n}, ownerState.inset && {\n  paddingLeft: 56\n}));\nconst ListItemText = /*#__PURE__*/React.forwardRef(function ListItemText(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiListItemText'\n  });\n\n  const {\n    children,\n    className,\n    disableTypography = false,\n    inset = false,\n    primary: primaryProp,\n    primaryTypographyProps,\n    secondary: secondaryProp,\n    secondaryTypographyProps\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const {\n    dense\n  } = React.useContext(ListContext);\n  let primary = primaryProp != null ? primaryProp : children;\n  let secondary = secondaryProp;\n\n  const ownerState = _extends({}, props, {\n    disableTypography,\n    inset,\n    primary: !!primary,\n    secondary: !!secondary,\n    dense\n  });\n\n  const classes = useUtilityClasses(ownerState);\n\n  if (primary != null && primary.type !== Typography && !disableTypography) {\n    primary = /*#__PURE__*/_jsx(Typography, _extends({\n      variant: dense ? 'body2' : 'body1',\n      className: classes.primary,\n      component: \"span\",\n      display: \"block\"\n    }, primaryTypographyProps, {\n      children: primary\n    }));\n  }\n\n  if (secondary != null && secondary.type !== Typography && !disableTypography) {\n    secondary = /*#__PURE__*/_jsx(Typography, _extends({\n      variant: \"body2\",\n      className: classes.secondary,\n      color: \"text.secondary\",\n      display: \"block\"\n    }, secondaryTypographyProps, {\n      children: secondary\n    }));\n  }\n\n  return /*#__PURE__*/_jsxs(ListItemTextRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other, {\n    children: [primary, secondary]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemText.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Alias for the `primary` prop.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the children won't be wrapped by a Typography component.\n   * This can be useful to render an alternative Typography variant by wrapping\n   * the `children` (or `primary`) text, and optional `secondary` text\n   * with the Typography component.\n   * @default false\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\n   * If `true`, the children are indented.\n   * This should be used if there is no left avatar or left icon.\n   * @default false\n   */\n  inset: PropTypes.bool,\n\n  /**\n   * The main content element.\n   */\n  primary: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the primary typography component\n   * (as long as disableTypography is not `true`).\n   */\n  primaryTypographyProps: PropTypes.object,\n\n  /**\n   * The secondary content element.\n   */\n  secondary: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the secondary typography component\n   * (as long as disableTypography is not `true`).\n   */\n  secondaryTypographyProps: PropTypes.object,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default ListItemText;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getListItemUtilityClass(slot) {\n  return generateUtilityClass('MuiListItem', slot);\n}\nconst listItemClasses = generateUtilityClasses('MuiListItem', ['root', 'container', 'focusVisible', 'dense', 'alignItemsFlexStart', 'disabled', 'divider', 'gutters', 'padding', 'button', 'secondaryAction', 'selected']);\nexport default listItemClasses;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getListItemButtonUtilityClass(slot) {\n  return generateUtilityClass('MuiListItemButton', slot);\n}\nconst listItemButtonClasses = generateUtilityClasses('MuiListItemButton', ['root', 'focusVisible', 'dense', 'alignItemsFlexStart', 'disabled', 'divider', 'gutters', 'selected']);\nexport default listItemButtonClasses;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getListItemSecondaryActionClassesUtilityClass(slot) {\n  return generateUtilityClass('MuiListItemSecondaryAction', slot);\n}\nconst listItemSecondaryActionClasses = generateUtilityClasses('MuiListItemSecondaryAction', ['root', 'disableGutters']);\nexport default listItemSecondaryActionClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport ListContext from '../List/ListContext';\nimport { getListItemSecondaryActionClassesUtilityClass } from './listItemSecondaryActionClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    disableGutters,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', disableGutters && 'disableGutters']\n  };\n  return composeClasses(slots, getListItemSecondaryActionClassesUtilityClass, classes);\n};\n\nconst ListItemSecondaryActionRoot = styled('div', {\n  name: 'MuiListItemSecondaryAction',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.disableGutters && styles.disableGutters];\n  }\n})(({\n  ownerState\n}) => _extends({\n  position: 'absolute',\n  right: 16,\n  top: '50%',\n  transform: 'translateY(-50%)'\n}, ownerState.disableGutters && {\n  right: 0\n}));\n/**\n * Must be used as the last child of ListItem to function properly.\n */\n\nconst ListItemSecondaryAction = /*#__PURE__*/React.forwardRef(function ListItemSecondaryAction(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiListItemSecondaryAction'\n  });\n\n  const {\n    className\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const context = React.useContext(ListContext);\n\n  const ownerState = _extends({}, props, {\n    disableGutters: context.disableGutters\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(ListItemSecondaryActionRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemSecondaryAction.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component, normally an `IconButton` or selection control.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nListItemSecondaryAction.muiName = 'ListItemSecondaryAction';\nexport default ListItemSecondaryAction;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\"],\n      _excluded2 = [\"alignItems\", \"autoFocus\", \"button\", \"children\", \"className\", \"component\", \"components\", \"componentsProps\", \"ContainerComponent\", \"ContainerProps\", \"dense\", \"disabled\", \"disableGutters\", \"disablePadding\", \"divider\", \"focusVisibleClassName\", \"secondaryAction\", \"selected\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses, isHostComponent } from '@mui/base';\nimport { chainPropTypes, elementTypeAcceptingRef } from '@mui/utils';\nimport { alpha } from '@mui/system';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport ButtonBase from '../ButtonBase';\nimport isMuiElement from '../utils/isMuiElement';\nimport useEnhancedEffect from '../utils/useEnhancedEffect';\nimport useForkRef from '../utils/useForkRef';\nimport ListContext from '../List/ListContext';\nimport listItemClasses, { getListItemUtilityClass } from './listItemClasses';\nimport { listItemButtonClasses } from '../ListItemButton';\nimport ListItemSecondaryAction from '../ListItemSecondaryAction';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const overridesResolver = (props, styles) => {\n  const {\n    ownerState\n  } = props;\n  return [styles.root, ownerState.dense && styles.dense, ownerState.alignItems === 'flex-start' && styles.alignItemsFlexStart, ownerState.divider && styles.divider, !ownerState.disableGutters && styles.gutters, !ownerState.disablePadding && styles.padding, ownerState.button && styles.button, ownerState.hasSecondaryAction && styles.secondaryAction];\n};\n\nconst useUtilityClasses = ownerState => {\n  const {\n    alignItems,\n    button,\n    classes,\n    dense,\n    disabled,\n    disableGutters,\n    disablePadding,\n    divider,\n    hasSecondaryAction,\n    selected\n  } = ownerState;\n  const slots = {\n    root: ['root', dense && 'dense', !disableGutters && 'gutters', !disablePadding && 'padding', divider && 'divider', disabled && 'disabled', button && 'button', alignItems === 'flex-start' && 'alignItemsFlexStart', hasSecondaryAction && 'secondaryAction', selected && 'selected'],\n    container: ['container']\n  };\n  return composeClasses(slots, getListItemUtilityClass, classes);\n};\n\nexport const ListItemRoot = styled('div', {\n  name: 'MuiListItem',\n  slot: 'Root',\n  overridesResolver\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  display: 'flex',\n  justifyContent: 'flex-start',\n  alignItems: 'center',\n  position: 'relative',\n  textDecoration: 'none',\n  width: '100%',\n  boxSizing: 'border-box',\n  textAlign: 'left'\n}, !ownerState.disablePadding && _extends({\n  paddingTop: 8,\n  paddingBottom: 8\n}, ownerState.dense && {\n  paddingTop: 4,\n  paddingBottom: 4\n}, !ownerState.disableGutters && {\n  paddingLeft: 16,\n  paddingRight: 16\n}, !!ownerState.secondaryAction && {\n  // Add some space to avoid collision as `ListItemSecondaryAction`\n  // is absolutely positioned.\n  paddingRight: 48\n}), !!ownerState.secondaryAction && {\n  [`& > .${listItemButtonClasses.root}`]: {\n    paddingRight: 48\n  }\n}, {\n  [`&.${listItemClasses.focusVisible}`]: {\n    backgroundColor: (theme.vars || theme).palette.action.focus\n  },\n  [`&.${listItemClasses.selected}`]: {\n    backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / ${theme.vars.palette.action.selectedOpacity})` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity),\n    [`&.${listItemClasses.focusVisible}`]: {\n      backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.focusOpacity}))` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.focusOpacity)\n    }\n  },\n  [`&.${listItemClasses.disabled}`]: {\n    opacity: (theme.vars || theme).palette.action.disabledOpacity\n  }\n}, ownerState.alignItems === 'flex-start' && {\n  alignItems: 'flex-start'\n}, ownerState.divider && {\n  borderBottom: `1px solid ${(theme.vars || theme).palette.divider}`,\n  backgroundClip: 'padding-box'\n}, ownerState.button && {\n  transition: theme.transitions.create('background-color', {\n    duration: theme.transitions.duration.shortest\n  }),\n  '&:hover': {\n    textDecoration: 'none',\n    backgroundColor: (theme.vars || theme).palette.action.hover,\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  },\n  [`&.${listItemClasses.selected}:hover`]: {\n    backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.hoverOpacity}))` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity),\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / ${theme.vars.palette.action.selectedOpacity})` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity)\n    }\n  }\n}, ownerState.hasSecondaryAction && {\n  // Add some space to avoid collision as `ListItemSecondaryAction`\n  // is absolutely positioned.\n  paddingRight: 48\n}));\nconst ListItemContainer = styled('li', {\n  name: 'MuiListItem',\n  slot: 'Container',\n  overridesResolver: (props, styles) => styles.container\n})({\n  position: 'relative'\n});\n/**\n * Uses an additional container component if `ListItemSecondaryAction` is the last child.\n */\n\nconst ListItem = /*#__PURE__*/React.forwardRef(function ListItem(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiListItem'\n  });\n\n  const {\n    alignItems = 'center',\n    autoFocus = false,\n    button = false,\n    children: childrenProp,\n    className,\n    component: componentProp,\n    components = {},\n    componentsProps = {},\n    ContainerComponent = 'li',\n    ContainerProps: {\n      className: ContainerClassName\n    } = {},\n    dense = false,\n    disabled = false,\n    disableGutters = false,\n    disablePadding = false,\n    divider = false,\n    focusVisibleClassName,\n    secondaryAction,\n    selected = false\n  } = props,\n        ContainerProps = _objectWithoutPropertiesLoose(props.ContainerProps, _excluded),\n        other = _objectWithoutPropertiesLoose(props, _excluded2);\n\n  const context = React.useContext(ListContext);\n  const childContext = {\n    dense: dense || context.dense || false,\n    alignItems,\n    disableGutters\n  };\n  const listItemRef = React.useRef(null);\n  useEnhancedEffect(() => {\n    if (autoFocus) {\n      if (listItemRef.current) {\n        listItemRef.current.focus();\n      } else if (process.env.NODE_ENV !== 'production') {\n        console.error('MUI: Unable to set focus to a ListItem whose component has not been rendered.');\n      }\n    }\n  }, [autoFocus]);\n  const children = React.Children.toArray(childrenProp); // v4 implementation, deprecated in v5, will be removed in v6\n\n  const hasSecondaryAction = children.length && isMuiElement(children[children.length - 1], ['ListItemSecondaryAction']);\n\n  const ownerState = _extends({}, props, {\n    alignItems,\n    autoFocus,\n    button,\n    dense: childContext.dense,\n    disabled,\n    disableGutters,\n    disablePadding,\n    divider,\n    hasSecondaryAction,\n    selected\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  const handleRef = useForkRef(listItemRef, ref);\n  const Root = components.Root || ListItemRoot;\n  const rootProps = componentsProps.root || {};\n\n  const componentProps = _extends({\n    className: clsx(classes.root, rootProps.className, className),\n    disabled\n  }, other);\n\n  let Component = componentProp || 'li';\n\n  if (button) {\n    componentProps.component = componentProp || 'div';\n    componentProps.focusVisibleClassName = clsx(listItemClasses.focusVisible, focusVisibleClassName);\n    Component = ButtonBase;\n  } // v4 implementation, deprecated in v5, will be removed in v6\n\n\n  if (hasSecondaryAction) {\n    // Use div by default.\n    Component = !componentProps.component && !componentProp ? 'div' : Component; // Avoid nesting of li > li.\n\n    if (ContainerComponent === 'li') {\n      if (Component === 'li') {\n        Component = 'div';\n      } else if (componentProps.component === 'li') {\n        componentProps.component = 'div';\n      }\n    }\n\n    return /*#__PURE__*/_jsx(ListContext.Provider, {\n      value: childContext,\n      children: /*#__PURE__*/_jsxs(ListItemContainer, _extends({\n        as: ContainerComponent,\n        className: clsx(classes.container, ContainerClassName),\n        ref: handleRef,\n        ownerState: ownerState\n      }, ContainerProps, {\n        children: [/*#__PURE__*/_jsx(Root, _extends({}, rootProps, !isHostComponent(Root) && {\n          as: Component,\n          ownerState: _extends({}, ownerState, rootProps.ownerState)\n        }, componentProps, {\n          children: children\n        })), children.pop()]\n      }))\n    });\n  }\n\n  return /*#__PURE__*/_jsx(ListContext.Provider, {\n    value: childContext,\n    children: /*#__PURE__*/_jsxs(Root, _extends({}, rootProps, {\n      as: Component,\n      ref: handleRef,\n      ownerState: ownerState\n    }, !isHostComponent(Root) && {\n      ownerState: _extends({}, ownerState, rootProps.ownerState)\n    }, componentProps, {\n      children: [children, secondaryAction && /*#__PURE__*/_jsx(ListItemSecondaryAction, {\n        children: secondaryAction\n      })]\n    }))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItem.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Defines the `align-items` style property.\n   * @default 'center'\n   */\n  alignItems: PropTypes.oneOf(['center', 'flex-start']),\n\n  /**\n   * If `true`, the list item is focused during the first mount.\n   * Focus will also be triggered if the value changes from false to true.\n   * @default false\n   * @deprecated checkout [ListItemButton](/material-ui/api/list-item-button/) instead\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the list item is a button (using `ButtonBase`). Props intended\n   * for `ButtonBase` can then be applied to `ListItem`.\n   * @default false\n   * @deprecated checkout [ListItemButton](/material-ui/api/list-item-button/) instead\n   */\n  button: PropTypes.bool,\n\n  /**\n   * The content of the component if a `ListItemSecondaryAction` is used it must\n   * be the last child.\n   */\n  children: chainPropTypes(PropTypes.node, props => {\n    const children = React.Children.toArray(props.children); // React.Children.toArray(props.children).findLastIndex(isListItemSecondaryAction)\n\n    let secondaryActionIndex = -1;\n\n    for (let i = children.length - 1; i >= 0; i -= 1) {\n      const child = children[i];\n\n      if (isMuiElement(child, ['ListItemSecondaryAction'])) {\n        secondaryActionIndex = i;\n        break;\n      }\n    } //  is ListItemSecondaryAction the last child of ListItem\n\n\n    if (secondaryActionIndex !== -1 && secondaryActionIndex !== children.length - 1) {\n      return new Error('MUI: You used an element after ListItemSecondaryAction. ' + 'For ListItem to detect that it has a secondary action ' + 'you must pass it as the last child to ListItem.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The components used for each slot inside the InputBase.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  components: PropTypes.shape({\n    Root: PropTypes.elementType\n  }),\n\n  /**\n   * The props used for each slot inside the Input.\n   * @default {}\n   */\n  componentsProps: PropTypes.shape({\n    root: PropTypes.object\n  }),\n\n  /**\n   * The container component used when a `ListItemSecondaryAction` is the last child.\n   * @default 'li'\n   * @deprecated\n   */\n  ContainerComponent: elementTypeAcceptingRef,\n\n  /**\n   * Props applied to the container component if used.\n   * @default {}\n   * @deprecated\n   */\n  ContainerProps: PropTypes.object,\n\n  /**\n   * If `true`, compact vertical padding designed for keyboard and mouse input is used.\n   * The prop defaults to the value inherited from the parent List component.\n   * @default false\n   */\n  dense: PropTypes.bool,\n\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   * @deprecated checkout [ListItemButton](/material-ui/api/list-item-button/) instead\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the left and right padding is removed.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * If `true`, all padding is removed.\n   * @default false\n   */\n  disablePadding: PropTypes.bool,\n\n  /**\n   * If `true`, a 1px light border is added to the bottom of the list item.\n   * @default false\n   */\n  divider: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  focusVisibleClassName: PropTypes.string,\n\n  /**\n   * The element to display at the end of ListItem.\n   */\n  secondaryAction: PropTypes.node,\n\n  /**\n   * Use to apply selected styling.\n   * @default false\n   * @deprecated checkout [ListItemButton](/material-ui/api/list-item-button/) instead\n   */\n  selected: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default ListItem;","export function isUnitless(value) {\n  return String(parseFloat(value)).length === String(value).length;\n} // Ported from Compass\n// https://github.com/Compass/compass/blob/master/core/stylesheets/compass/typography/_units.scss\n// Emulate the sass function \"unit\"\n\nexport function getUnit(input) {\n  return String(input).match(/[\\d.\\-+]*\\s*(.*)/)[1] || '';\n} // Emulate the sass function \"unitless\"\n\nexport function toUnitless(length) {\n  return parseFloat(length);\n} // Convert any CSS <length> or <percentage> value to any another.\n// From https://github.com/KyleAMathews/convert-css-length\n\nexport function convertLength(baseFontSize) {\n  return (length, toUnit) => {\n    const fromUnit = getUnit(length); // Optimize for cases where `from` and `to` units are accidentally the same.\n\n    if (fromUnit === toUnit) {\n      return length;\n    } // Convert input length to pixels.\n\n\n    let pxLength = toUnitless(length);\n\n    if (fromUnit !== 'px') {\n      if (fromUnit === 'em') {\n        pxLength = toUnitless(length) * toUnitless(baseFontSize);\n      } else if (fromUnit === 'rem') {\n        pxLength = toUnitless(length) * toUnitless(baseFontSize);\n      }\n    } // Convert length in pixels to the output unit\n\n\n    let outputLength = pxLength;\n\n    if (toUnit !== 'px') {\n      if (toUnit === 'em') {\n        outputLength = pxLength / toUnitless(baseFontSize);\n      } else if (toUnit === 'rem') {\n        outputLength = pxLength / toUnitless(baseFontSize);\n      } else {\n        return length;\n      }\n    }\n\n    return parseFloat(outputLength.toFixed(5)) + toUnit;\n  };\n}\nexport function alignProperty({\n  size,\n  grid\n}) {\n  const sizeBelow = size - size % grid;\n  const sizeAbove = sizeBelow + grid;\n  return size - sizeBelow < sizeAbove - size ? sizeBelow : sizeAbove;\n} // fontGrid finds a minimal grid (in rem) for the fontSize values so that the\n// lineHeight falls under a x pixels grid, 4px in the case of Material Design,\n// without changing the relative line height\n\nexport function fontGrid({\n  lineHeight,\n  pixels,\n  htmlFontSize\n}) {\n  return pixels / (lineHeight * htmlFontSize);\n}\n/**\n * generate a responsive version of a given CSS property\n * @example\n * responsiveProperty({\n *   cssProperty: 'fontSize',\n *   min: 15,\n *   max: 20,\n *   unit: 'px',\n *   breakpoints: [300, 600],\n * })\n *\n * // this returns\n *\n * {\n *   fontSize: '15px',\n *   '@media (min-width:300px)': {\n *     fontSize: '17.5px',\n *   },\n *   '@media (min-width:600px)': {\n *     fontSize: '20px',\n *   },\n * }\n * @param {Object} params\n * @param {string} params.cssProperty - The CSS property to be made responsive\n * @param {number} params.min - The smallest value of the CSS property\n * @param {number} params.max - The largest value of the CSS property\n * @param {string} [params.unit] - The unit to be used for the CSS property\n * @param {Array.number} [params.breakpoints]  - An array of breakpoints\n * @param {number} [params.alignStep] - Round scaled value to fall under this grid\n * @returns {Object} responsive styles for {params.cssProperty}\n */\n\nexport function responsiveProperty({\n  cssProperty,\n  min,\n  max,\n  unit = 'rem',\n  breakpoints = [600, 900, 1200],\n  transform = null\n}) {\n  const output = {\n    [cssProperty]: `${min}${unit}`\n  };\n  const factor = (max - min) / breakpoints[breakpoints.length - 1];\n  breakpoints.forEach(breakpoint => {\n    let value = min + factor * breakpoint;\n\n    if (transform !== null) {\n      value = transform(value);\n    }\n\n    output[`@media (min-width:${breakpoint}px)`] = {\n      [cssProperty]: `${Math.round(value * 10000) / 10000}${unit}`\n    };\n  });\n  return output;\n}","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getSkeletonUtilityClass(slot) {\n  return generateUtilityClass('MuiSkeleton', slot);\n}\nconst skeletonClasses = generateUtilityClasses('MuiSkeleton', ['root', 'text', 'rectangular', 'circular', 'pulse', 'wave', 'withChildren', 'fitContent', 'heightAuto']);\nexport default skeletonClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"animation\", \"className\", \"component\", \"height\", \"style\", \"variant\", \"width\"];\n\nlet _ = t => t,\n    _t,\n    _t2,\n    _t3,\n    _t4;\n\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { keyframes, css } from '@mui/system';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { alpha, unstable_getUnit as getUnit, unstable_toUnitless as toUnitless } from '../styles';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getSkeletonUtilityClass } from './skeletonClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    variant,\n    animation,\n    hasChildren,\n    width,\n    height\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, animation, hasChildren && 'withChildren', hasChildren && !width && 'fitContent', hasChildren && !height && 'heightAuto']\n  };\n  return composeClasses(slots, getSkeletonUtilityClass, classes);\n};\n\nconst pulseKeyframe = keyframes(_t || (_t = _`\n  0% {\n    opacity: 1;\n  }\n\n  50% {\n    opacity: 0.4;\n  }\n\n  100% {\n    opacity: 1;\n  }\n`));\nconst waveKeyframe = keyframes(_t2 || (_t2 = _`\n  0% {\n    transform: translateX(-100%);\n  }\n\n  50% {\n    /* +0.5s of delay between each loop */\n    transform: translateX(100%);\n  }\n\n  100% {\n    transform: translateX(100%);\n  }\n`));\nconst SkeletonRoot = styled('span', {\n  name: 'MuiSkeleton',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], ownerState.animation !== false && styles[ownerState.animation], ownerState.hasChildren && styles.withChildren, ownerState.hasChildren && !ownerState.width && styles.fitContent, ownerState.hasChildren && !ownerState.height && styles.heightAuto];\n  }\n})(({\n  theme,\n  ownerState\n}) => {\n  const radiusUnit = getUnit(theme.shape.borderRadius) || 'px';\n  const radiusValue = toUnitless(theme.shape.borderRadius);\n  return _extends({\n    display: 'block',\n    // Create a \"on paper\" color with sufficient contrast retaining the color\n    backgroundColor: theme.vars ? theme.vars.palette.Skeleton.bg : alpha(theme.palette.text.primary, theme.palette.mode === 'light' ? 0.11 : 0.13),\n    height: '1.2em'\n  }, ownerState.variant === 'text' && {\n    marginTop: 0,\n    marginBottom: 0,\n    height: 'auto',\n    transformOrigin: '0 55%',\n    transform: 'scale(1, 0.60)',\n    borderRadius: `${radiusValue}${radiusUnit}/${Math.round(radiusValue / 0.6 * 10) / 10}${radiusUnit}`,\n    '&:empty:before': {\n      content: '\"\\\\00a0\"'\n    }\n  }, ownerState.variant === 'circular' && {\n    borderRadius: '50%'\n  }, ownerState.hasChildren && {\n    '& > *': {\n      visibility: 'hidden'\n    }\n  }, ownerState.hasChildren && !ownerState.width && {\n    maxWidth: 'fit-content'\n  }, ownerState.hasChildren && !ownerState.height && {\n    height: 'auto'\n  });\n}, ({\n  ownerState\n}) => ownerState.animation === 'pulse' && css(_t3 || (_t3 = _`\n      animation: ${0} 1.5s ease-in-out 0.5s infinite;\n    `), pulseKeyframe), ({\n  ownerState,\n  theme\n}) => ownerState.animation === 'wave' && css(_t4 || (_t4 = _`\n      position: relative;\n      overflow: hidden;\n\n      /* Fix bug in Safari https://bugs.webkit.org/show_bug.cgi?id=68196 */\n      -webkit-mask-image: -webkit-radial-gradient(white, black);\n\n      &::after {\n        animation: ${0} 1.6s linear 0.5s infinite;\n        background: linear-gradient(\n          90deg,\n          transparent,\n          ${0},\n          transparent\n        );\n        content: '';\n        position: absolute;\n        transform: translateX(-100%); /* Avoid flash during server-side hydration */\n        bottom: 0;\n        left: 0;\n        right: 0;\n        top: 0;\n      }\n    `), waveKeyframe, (theme.vars || theme).palette.action.hover));\nconst Skeleton = /*#__PURE__*/React.forwardRef(function Skeleton(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiSkeleton'\n  });\n\n  const {\n    animation = 'pulse',\n    className,\n    component = 'span',\n    height,\n    style,\n    variant = 'text',\n    width\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    animation,\n    component,\n    variant,\n    hasChildren: Boolean(other.children)\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(SkeletonRoot, _extends({\n    as: component,\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: ownerState\n  }, other, {\n    style: _extends({\n      width,\n      height\n    }, style)\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Skeleton.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The animation.\n   * If `false` the animation effect is disabled.\n   * @default 'pulse'\n   */\n  animation: PropTypes.oneOf(['pulse', 'wave', false]),\n\n  /**\n   * Optional children to infer width and height from.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Height of the skeleton.\n   * Useful when you don't want to adapt the skeleton to a text element but for instance a card.\n   */\n  height: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The type of content that will be rendered.\n   * @default 'text'\n   */\n  variant: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['circular', 'rectangular', 'text']), PropTypes.string]),\n\n  /**\n   * Width of the skeleton.\n   * Useful when the skeleton is inside an inline element with no width of its own.\n   */\n  width: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n} : void 0;\nexport default Skeleton;","'use strict';\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toStr = Object.prototype.toString;\nvar defineProperty = Object.defineProperty;\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nvar isArray = function isArray(arr) {\n\tif (typeof Array.isArray === 'function') {\n\t\treturn Array.isArray(arr);\n\t}\n\n\treturn toStr.call(arr) === '[object Array]';\n};\n\nvar isPlainObject = function isPlainObject(obj) {\n\tif (!obj || toStr.call(obj) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tvar hasOwnConstructor = hasOwn.call(obj, 'constructor');\n\tvar hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n\t// Not own constructor property must be Object\n\tif (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n\t\treturn false;\n\t}\n\n\t// Own properties are enumerated firstly, so to speed up,\n\t// if last one is own, then all properties are own.\n\tvar key;\n\tfor (key in obj) { /**/ }\n\n\treturn typeof key === 'undefined' || hasOwn.call(obj, key);\n};\n\n// If name is '__proto__', and Object.defineProperty is available, define __proto__ as an own property on target\nvar setProperty = function setProperty(target, options) {\n\tif (defineProperty && options.name === '__proto__') {\n\t\tdefineProperty(target, options.name, {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true,\n\t\t\tvalue: options.newValue,\n\t\t\twritable: true\n\t\t});\n\t} else {\n\t\ttarget[options.name] = options.newValue;\n\t}\n};\n\n// Return undefined instead of __proto__ if '__proto__' is not an own property\nvar getProperty = function getProperty(obj, name) {\n\tif (name === '__proto__') {\n\t\tif (!hasOwn.call(obj, name)) {\n\t\t\treturn void 0;\n\t\t} else if (gOPD) {\n\t\t\t// In early versions of node, obj['__proto__'] is buggy when obj has\n\t\t\t// __proto__ as an own property. Object.getOwnPropertyDescriptor() works.\n\t\t\treturn gOPD(obj, name).value;\n\t\t}\n\t}\n\n\treturn obj[name];\n};\n\nmodule.exports = function extend() {\n\tvar options, name, src, copy, copyIsArray, clone;\n\tvar target = arguments[0];\n\tvar i = 1;\n\tvar length = arguments.length;\n\tvar deep = false;\n\n\t// Handle a deep copy situation\n\tif (typeof target === 'boolean') {\n\t\tdeep = target;\n\t\ttarget = arguments[1] || {};\n\t\t// skip the boolean and the target\n\t\ti = 2;\n\t}\n\tif (target == null || (typeof target !== 'object' && typeof target !== 'function')) {\n\t\ttarget = {};\n\t}\n\n\tfor (; i < length; ++i) {\n\t\toptions = arguments[i];\n\t\t// Only deal with non-null/undefined values\n\t\tif (options != null) {\n\t\t\t// Extend the base object\n\t\t\tfor (name in options) {\n\t\t\t\tsrc = getProperty(target, name);\n\t\t\t\tcopy = getProperty(options, name);\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif (target !== copy) {\n\t\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\t\tif (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n\t\t\t\t\t\tif (copyIsArray) {\n\t\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\t\tclone = src && isArray(src) ? src : [];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tclone = src && isPlainObject(src) ? src : {};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: extend(deep, clone, copy) });\n\n\t\t\t\t\t// Don't bring in undefined values\n\t\t\t\t\t} else if (typeof copy !== 'undefined') {\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: copy });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n","// http://www.w3.org/TR/CSS21/grammar.html\n// https://github.com/visionmedia/css-parse/pull/49#issuecomment-30088027\nvar COMMENT_REGEX = /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//g;\n\nvar NEWLINE_REGEX = /\\n/g;\nvar WHITESPACE_REGEX = /^\\s*/;\n\n// declaration\nvar PROPERTY_REGEX = /^(\\*?[-#/*\\\\\\w]+(\\[[0-9a-z_-]+\\])?)\\s*/;\nvar COLON_REGEX = /^:\\s*/;\nvar VALUE_REGEX = /^((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^)]*?\\)|[^};])+)/;\nvar SEMICOLON_REGEX = /^[;\\s]*/;\n\n// https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String/Trim#Polyfill\nvar TRIM_REGEX = /^\\s+|\\s+$/g;\n\n// strings\nvar NEWLINE = '\\n';\nvar FORWARD_SLASH = '/';\nvar ASTERISK = '*';\nvar EMPTY_STRING = '';\n\n// types\nvar TYPE_COMMENT = 'comment';\nvar TYPE_DECLARATION = 'declaration';\n\n/**\n * @param {String} style\n * @param {Object} [options]\n * @return {Object[]}\n * @throws {TypeError}\n * @throws {Error}\n */\nmodule.exports = function(style, options) {\n  if (typeof style !== 'string') {\n    throw new TypeError('First argument must be a string');\n  }\n\n  if (!style) return [];\n\n  options = options || {};\n\n  /**\n   * Positional.\n   */\n  var lineno = 1;\n  var column = 1;\n\n  /**\n   * Update lineno and column based on `str`.\n   *\n   * @param {String} str\n   */\n  function updatePosition(str) {\n    var lines = str.match(NEWLINE_REGEX);\n    if (lines) lineno += lines.length;\n    var i = str.lastIndexOf(NEWLINE);\n    column = ~i ? str.length - i : column + str.length;\n  }\n\n  /**\n   * Mark position and patch `node.position`.\n   *\n   * @return {Function}\n   */\n  function position() {\n    var start = { line: lineno, column: column };\n    return function(node) {\n      node.position = new Position(start);\n      whitespace();\n      return node;\n    };\n  }\n\n  /**\n   * Store position information for a node.\n   *\n   * @constructor\n   * @property {Object} start\n   * @property {Object} end\n   * @property {undefined|String} source\n   */\n  function Position(start) {\n    this.start = start;\n    this.end = { line: lineno, column: column };\n    this.source = options.source;\n  }\n\n  /**\n   * Non-enumerable source string.\n   */\n  Position.prototype.content = style;\n\n  var errorsList = [];\n\n  /**\n   * Error `msg`.\n   *\n   * @param {String} msg\n   * @throws {Error}\n   */\n  function error(msg) {\n    var err = new Error(\n      options.source + ':' + lineno + ':' + column + ': ' + msg\n    );\n    err.reason = msg;\n    err.filename = options.source;\n    err.line = lineno;\n    err.column = column;\n    err.source = style;\n\n    if (options.silent) {\n      errorsList.push(err);\n    } else {\n      throw err;\n    }\n  }\n\n  /**\n   * Match `re` and return captures.\n   *\n   * @param {RegExp} re\n   * @return {undefined|Array}\n   */\n  function match(re) {\n    var m = re.exec(style);\n    if (!m) return;\n    var str = m[0];\n    updatePosition(str);\n    style = style.slice(str.length);\n    return m;\n  }\n\n  /**\n   * Parse whitespace.\n   */\n  function whitespace() {\n    match(WHITESPACE_REGEX);\n  }\n\n  /**\n   * Parse comments.\n   *\n   * @param {Object[]} [rules]\n   * @return {Object[]}\n   */\n  function comments(rules) {\n    var c;\n    rules = rules || [];\n    while ((c = comment())) {\n      if (c !== false) {\n        rules.push(c);\n      }\n    }\n    return rules;\n  }\n\n  /**\n   * Parse comment.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function comment() {\n    var pos = position();\n    if (FORWARD_SLASH != style.charAt(0) || ASTERISK != style.charAt(1)) return;\n\n    var i = 2;\n    while (\n      EMPTY_STRING != style.charAt(i) &&\n      (ASTERISK != style.charAt(i) || FORWARD_SLASH != style.charAt(i + 1))\n    ) {\n      ++i;\n    }\n    i += 2;\n\n    if (EMPTY_STRING === style.charAt(i - 1)) {\n      return error('End of comment missing');\n    }\n\n    var str = style.slice(2, i - 2);\n    column += 2;\n    updatePosition(str);\n    style = style.slice(i);\n    column += 2;\n\n    return pos({\n      type: TYPE_COMMENT,\n      comment: str\n    });\n  }\n\n  /**\n   * Parse declaration.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function declaration() {\n    var pos = position();\n\n    // prop\n    var prop = match(PROPERTY_REGEX);\n    if (!prop) return;\n    comment();\n\n    // :\n    if (!match(COLON_REGEX)) return error(\"property missing ':'\");\n\n    // val\n    var val = match(VALUE_REGEX);\n\n    var ret = pos({\n      type: TYPE_DECLARATION,\n      property: trim(prop[0].replace(COMMENT_REGEX, EMPTY_STRING)),\n      value: val\n        ? trim(val[0].replace(COMMENT_REGEX, EMPTY_STRING))\n        : EMPTY_STRING\n    });\n\n    // ;\n    match(SEMICOLON_REGEX);\n\n    return ret;\n  }\n\n  /**\n   * Parse declarations.\n   *\n   * @return {Object[]}\n   */\n  function declarations() {\n    var decls = [];\n\n    comments(decls);\n\n    // declarations\n    var decl;\n    while ((decl = declaration())) {\n      if (decl !== false) {\n        decls.push(decl);\n        comments(decls);\n      }\n    }\n\n    return decls;\n  }\n\n  whitespace();\n  return declarations();\n};\n\n/**\n * Trim `str`.\n *\n * @param {String} str\n * @return {String}\n */\nfunction trim(str) {\n  return str ? str.replace(TRIM_REGEX, EMPTY_STRING) : EMPTY_STRING;\n}\n","/*!\n * Determine if an object is a Buffer\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n\nmodule.exports = function isBuffer (obj) {\n  return obj != null && obj.constructor != null &&\n    typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n","\n'use strict';\n\n\nvar encodeCache = {};\n\n\n// Create a lookup array where anything but characters in `chars` string\n// and alphanumeric chars is percent-encoded.\n//\nfunction getEncodeCache(exclude) {\n  var i, ch, cache = encodeCache[exclude];\n  if (cache) { return cache; }\n\n  cache = encodeCache[exclude] = [];\n\n  for (i = 0; i < 128; i++) {\n    ch = String.fromCharCode(i);\n\n    if (/^[0-9a-z]$/i.test(ch)) {\n      // always allow unencoded alphanumeric characters\n      cache.push(ch);\n    } else {\n      cache.push('%' + ('0' + i.toString(16).toUpperCase()).slice(-2));\n    }\n  }\n\n  for (i = 0; i < exclude.length; i++) {\n    cache[exclude.charCodeAt(i)] = exclude[i];\n  }\n\n  return cache;\n}\n\n\n// Encode unsafe characters with percent-encoding, skipping already\n// encoded sequences.\n//\n//  - string       - string to encode\n//  - exclude      - list of characters to ignore (in addition to a-zA-Z0-9)\n//  - keepEscaped  - don't encode '%' in a correct escape sequence (default: true)\n//\nfunction encode(string, exclude, keepEscaped) {\n  var i, l, code, nextCode, cache,\n      result = '';\n\n  if (typeof exclude !== 'string') {\n    // encode(string, keepEscaped)\n    keepEscaped  = exclude;\n    exclude = encode.defaultChars;\n  }\n\n  if (typeof keepEscaped === 'undefined') {\n    keepEscaped = true;\n  }\n\n  cache = getEncodeCache(exclude);\n\n  for (i = 0, l = string.length; i < l; i++) {\n    code = string.charCodeAt(i);\n\n    if (keepEscaped && code === 0x25 /* % */ && i + 2 < l) {\n      if (/^[0-9a-f]{2}$/i.test(string.slice(i + 1, i + 3))) {\n        result += string.slice(i, i + 3);\n        i += 2;\n        continue;\n      }\n    }\n\n    if (code < 128) {\n      result += cache[code];\n      continue;\n    }\n\n    if (code >= 0xD800 && code <= 0xDFFF) {\n      if (code >= 0xD800 && code <= 0xDBFF && i + 1 < l) {\n        nextCode = string.charCodeAt(i + 1);\n        if (nextCode >= 0xDC00 && nextCode <= 0xDFFF) {\n          result += encodeURIComponent(string[i] + string[i + 1]);\n          i++;\n          continue;\n        }\n      }\n      result += '%EF%BF%BD';\n      continue;\n    }\n\n    result += encodeURIComponent(string[i]);\n  }\n\n  return result;\n}\n\nencode.defaultChars   = \";/?:@&=+$,-_.!~*'()#\";\nencode.componentChars = \"-_.!~*'()\";\n\n\nmodule.exports = encode;\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","/**\n * @license React\n * react-is.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var b=Symbol.for(\"react.element\"),c=Symbol.for(\"react.portal\"),d=Symbol.for(\"react.fragment\"),e=Symbol.for(\"react.strict_mode\"),f=Symbol.for(\"react.profiler\"),g=Symbol.for(\"react.provider\"),h=Symbol.for(\"react.context\"),k=Symbol.for(\"react.server_context\"),l=Symbol.for(\"react.forward_ref\"),m=Symbol.for(\"react.suspense\"),n=Symbol.for(\"react.suspense_list\"),p=Symbol.for(\"react.memo\"),q=Symbol.for(\"react.lazy\"),t=Symbol.for(\"react.offscreen\"),u;u=Symbol.for(\"react.module.reference\");\nfunction v(a){if(\"object\"===typeof a&&null!==a){var r=a.$$typeof;switch(r){case b:switch(a=a.type,a){case d:case f:case e:case m:case n:return a;default:switch(a=a&&a.$$typeof,a){case k:case h:case l:case q:case p:case g:return a;default:return r}}case c:return r}}}exports.ContextConsumer=h;exports.ContextProvider=g;exports.Element=b;exports.ForwardRef=l;exports.Fragment=d;exports.Lazy=q;exports.Memo=p;exports.Portal=c;exports.Profiler=f;exports.StrictMode=e;exports.Suspense=m;\nexports.SuspenseList=n;exports.isAsyncMode=function(){return!1};exports.isConcurrentMode=function(){return!1};exports.isContextConsumer=function(a){return v(a)===h};exports.isContextProvider=function(a){return v(a)===g};exports.isElement=function(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===b};exports.isForwardRef=function(a){return v(a)===l};exports.isFragment=function(a){return v(a)===d};exports.isLazy=function(a){return v(a)===q};exports.isMemo=function(a){return v(a)===p};\nexports.isPortal=function(a){return v(a)===c};exports.isProfiler=function(a){return v(a)===f};exports.isStrictMode=function(a){return v(a)===e};exports.isSuspense=function(a){return v(a)===m};exports.isSuspenseList=function(a){return v(a)===n};\nexports.isValidElementType=function(a){return\"string\"===typeof a||\"function\"===typeof a||a===d||a===f||a===e||a===m||a===n||a===t||\"object\"===typeof a&&null!==a&&(a.$$typeof===q||a.$$typeof===p||a.$$typeof===g||a.$$typeof===h||a.$$typeof===l||a.$$typeof===u||void 0!==a.getModuleId)?!0:!1};exports.typeOf=v;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-is.production.min.js');\n} else {\n  module.exports = require('./cjs/react-is.development.js');\n}\n","var parse = require('inline-style-parser');\n\n/**\n * Parses inline style to object.\n *\n * @example\n * // returns { 'line-height': '42' }\n * StyleToObject('line-height: 42;');\n *\n * @param  {String}      style      - The inline style.\n * @param  {Function}    [iterator] - The iterator function.\n * @return {null|Object}\n */\nfunction StyleToObject(style, iterator) {\n  var output = null;\n  if (!style || typeof style !== 'string') {\n    return output;\n  }\n\n  var declaration;\n  var declarations = parse(style);\n  var hasIterator = typeof iterator === 'function';\n  var property;\n  var value;\n\n  for (var i = 0, len = declarations.length; i < len; i++) {\n    declaration = declarations[i];\n    property = declaration.property;\n    value = declaration.value;\n\n    if (hasIterator) {\n      iterator(property, value, declaration);\n    } else if (value) {\n      output || (output = {});\n      output[property] = value;\n    }\n  }\n\n  return output;\n}\n\nmodule.exports = StyleToObject;\n","/**\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {object & {type: string, position?: Position|undefined}} NodeLike\n */\n\n/**\n * Stringify one point, a position (start and end points), or a node’s\n * positional information.\n *\n * @param {Node|NodeLike|Position|Point|null} [value]\n * @returns {string}\n */\nexport function stringifyPosition(value) {\n  // Nothing.\n  if (!value || typeof value !== 'object') {\n    return ''\n  }\n\n  // Node.\n  if ('position' in value || 'type' in value) {\n    return position(value.position)\n  }\n\n  // Position.\n  if ('start' in value || 'end' in value) {\n    return position(value)\n  }\n\n  // Point.\n  if ('line' in value || 'column' in value) {\n    return point(value)\n  }\n\n  // ?\n  return ''\n}\n\n/**\n * @param {Point|undefined} point\n * @returns {string}\n */\nfunction point(point) {\n  return index(point && point.line) + ':' + index(point && point.column)\n}\n\n/**\n * @param {Position|undefined} pos\n * @returns {string}\n */\nfunction position(pos) {\n  return point(pos && pos.start) + '-' + point(pos && pos.end)\n}\n\n/**\n * @param {number|undefined} value\n * @returns {number}\n */\nfunction index(value) {\n  return value && typeof value === 'number' ? value : 1\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Point} Point\n * @typedef {object & {type: string, position?: Position|undefined}} NodeLike\n */\n\nimport {stringifyPosition} from 'unist-util-stringify-position'\n\nexport class VFileMessage extends Error {\n  /**\n   * Constructor of a message for `reason` at `place` from `origin`.\n   * When an error is passed in as `reason`, copies the `stack`.\n   *\n   * @param {string|Error} reason Reason for message (`string` or `Error`). Uses the stack and message of the error if given.\n   * @param {Node|NodeLike|Position|Point} [place] Place at which the message occurred in a file (`Node`, `Position`, or `Point`, optional).\n   * @param {string} [origin] Place in code the message originates from (`string`, optional).\n   */\n  constructor(reason, place, origin) {\n    /** @type {[string|null, string|null]} */\n    const parts = [null, null]\n    /** @type {Position} */\n    let position = {\n      // @ts-expect-error: we always follows the structure of `position`.\n      start: {line: null, column: null},\n      // @ts-expect-error: \"\n      end: {line: null, column: null}\n    }\n\n    super()\n\n    if (typeof place === 'string') {\n      origin = place\n      place = undefined\n    }\n\n    if (typeof origin === 'string') {\n      const index = origin.indexOf(':')\n\n      if (index === -1) {\n        parts[1] = origin\n      } else {\n        parts[0] = origin.slice(0, index)\n        parts[1] = origin.slice(index + 1)\n      }\n    }\n\n    if (place) {\n      // Node.\n      if ('type' in place || 'position' in place) {\n        if (place.position) {\n          position = place.position\n        }\n      }\n      // Position.\n      else if ('start' in place || 'end' in place) {\n        position = place\n      }\n      // Point.\n      else if ('line' in place || 'column' in place) {\n        position.start = place\n      }\n    }\n\n    // Fields from `Error`\n    this.name = stringifyPosition(place) || '1:1'\n    this.message = typeof reason === 'object' ? reason.message : reason\n    this.stack = typeof reason === 'object' ? reason.stack : ''\n\n    /**\n     * Reason for message.\n     * @type {string}\n     */\n    this.reason = this.message\n    /**\n     * If true, marks associated file as no longer processable.\n     * @type {boolean?}\n     */\n    // eslint-disable-next-line no-unused-expressions\n    this.fatal\n    /**\n     * Starting line of error.\n     * @type {number?}\n     */\n    this.line = position.start.line\n    /**\n     * Starting column of error.\n     * @type {number?}\n     */\n    this.column = position.start.column\n    /**\n     * Namespace of warning.\n     * @type {string?}\n     */\n    this.source = parts[0]\n    /**\n     * Category of message.\n     * @type {string?}\n     */\n    this.ruleId = parts[1]\n    /**\n     * Full range information, when available.\n     * Has start and end properties, both set to an object with line and column, set to number?.\n     * @type {Position?}\n     */\n    this.position = position\n\n    // The following fields are “well known”.\n    // Not standard.\n    // Feel free to add other non-standard fields to your messages.\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * You can use this to specify the source value that’s being reported, which\n     * is deemed incorrect.\n     * @type {string?}\n     */\n    this.actual\n    /**\n     * You can use this to suggest values that should be used instead of\n     * `actual`, one or more values that are deemed as acceptable.\n     * @type {Array<string>?}\n     */\n    this.expected\n    /**\n     * You may add a file property with a path of a file (used throughout the VFile ecosystem).\n     * @type {string?}\n     */\n    this.file\n    /**\n     * You may add a url property with a link to documentation for the message.\n     * @type {string?}\n     */\n    this.url\n    /**\n     * You may add a note property with a long form description of the message (supported by vfile-reporter).\n     * @type {string?}\n     */\n    this.note\n    /* eslint-enable no-unused-expressions */\n  }\n}\n\nVFileMessage.prototype.file = ''\nVFileMessage.prototype.name = ''\nVFileMessage.prototype.reason = ''\nVFileMessage.prototype.message = ''\nVFileMessage.prototype.stack = ''\nVFileMessage.prototype.fatal = null\nVFileMessage.prototype.column = null\nVFileMessage.prototype.line = null\nVFileMessage.prototype.source = null\nVFileMessage.prototype.ruleId = null\nVFileMessage.prototype.position = null\n","// A derivative work based on:\n// <https://github.com/browserify/path-browserify>.\n// Which is licensed:\n//\n// MIT License\n//\n// Copyright (c) 2013 James Halliday\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of\n// this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to\n// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n// the Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n// A derivative work based on:\n//\n// Parts of that are extracted from Node’s internal `path` module:\n// <https://github.com/nodejs/node/blob/master/lib/path.js>.\n// Which is licensed:\n//\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nexport const path = {basename, dirname, extname, join, sep: '/'}\n\n/* eslint-disable max-depth, complexity */\n\n/**\n * @param {string} path\n * @param {string} [ext]\n * @returns {string}\n */\nfunction basename(path, ext) {\n  if (ext !== undefined && typeof ext !== 'string') {\n    throw new TypeError('\"ext\" argument must be a string')\n  }\n\n  assertPath(path)\n  let start = 0\n  let end = -1\n  let index = path.length\n  /** @type {boolean|undefined} */\n  let seenNonSlash\n\n  if (ext === undefined || ext.length === 0 || ext.length > path.length) {\n    while (index--) {\n      if (path.charCodeAt(index) === 47 /* `/` */) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now.\n        if (seenNonSlash) {\n          start = index + 1\n          break\n        }\n      } else if (end < 0) {\n        // We saw the first non-path separator, mark this as the end of our\n        // path component.\n        seenNonSlash = true\n        end = index + 1\n      }\n    }\n\n    return end < 0 ? '' : path.slice(start, end)\n  }\n\n  if (ext === path) {\n    return ''\n  }\n\n  let firstNonSlashEnd = -1\n  let extIndex = ext.length - 1\n\n  while (index--) {\n    if (path.charCodeAt(index) === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (seenNonSlash) {\n        start = index + 1\n        break\n      }\n    } else {\n      if (firstNonSlashEnd < 0) {\n        // We saw the first non-path separator, remember this index in case\n        // we need it if the extension ends up not matching.\n        seenNonSlash = true\n        firstNonSlashEnd = index + 1\n      }\n\n      if (extIndex > -1) {\n        // Try to match the explicit extension.\n        if (path.charCodeAt(index) === ext.charCodeAt(extIndex--)) {\n          if (extIndex < 0) {\n            // We matched the extension, so mark this as the end of our path\n            // component\n            end = index\n          }\n        } else {\n          // Extension does not match, so our result is the entire path\n          // component\n          extIndex = -1\n          end = firstNonSlashEnd\n        }\n      }\n    }\n  }\n\n  if (start === end) {\n    end = firstNonSlashEnd\n  } else if (end < 0) {\n    end = path.length\n  }\n\n  return path.slice(start, end)\n}\n\n/**\n * @param {string} path\n * @returns {string}\n */\nfunction dirname(path) {\n  assertPath(path)\n\n  if (path.length === 0) {\n    return '.'\n  }\n\n  let end = -1\n  let index = path.length\n  /** @type {boolean|undefined} */\n  let unmatchedSlash\n\n  // Prefix `--` is important to not run on `0`.\n  while (--index) {\n    if (path.charCodeAt(index) === 47 /* `/` */) {\n      if (unmatchedSlash) {\n        end = index\n        break\n      }\n    } else if (!unmatchedSlash) {\n      // We saw the first non-path separator\n      unmatchedSlash = true\n    }\n  }\n\n  return end < 0\n    ? path.charCodeAt(0) === 47 /* `/` */\n      ? '/'\n      : '.'\n    : end === 1 && path.charCodeAt(0) === 47 /* `/` */\n    ? '//'\n    : path.slice(0, end)\n}\n\n/**\n * @param {string} path\n * @returns {string}\n */\nfunction extname(path) {\n  assertPath(path)\n\n  let index = path.length\n\n  let end = -1\n  let startPart = 0\n  let startDot = -1\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find.\n  let preDotState = 0\n  /** @type {boolean|undefined} */\n  let unmatchedSlash\n\n  while (index--) {\n    const code = path.charCodeAt(index)\n\n    if (code === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (unmatchedSlash) {\n        startPart = index + 1\n        break\n      }\n\n      continue\n    }\n\n    if (end < 0) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension.\n      unmatchedSlash = true\n      end = index + 1\n    }\n\n    if (code === 46 /* `.` */) {\n      // If this is our first dot, mark it as the start of our extension.\n      if (startDot < 0) {\n        startDot = index\n      } else if (preDotState !== 1) {\n        preDotState = 1\n      }\n    } else if (startDot > -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension.\n      preDotState = -1\n    }\n  }\n\n  if (\n    startDot < 0 ||\n    end < 0 ||\n    // We saw a non-dot character immediately before the dot.\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly `..`.\n    (preDotState === 1 && startDot === end - 1 && startDot === startPart + 1)\n  ) {\n    return ''\n  }\n\n  return path.slice(startDot, end)\n}\n\n/**\n * @param {Array<string>} segments\n * @returns {string}\n */\nfunction join(...segments) {\n  let index = -1\n  /** @type {string|undefined} */\n  let joined\n\n  while (++index < segments.length) {\n    assertPath(segments[index])\n\n    if (segments[index]) {\n      joined =\n        joined === undefined ? segments[index] : joined + '/' + segments[index]\n    }\n  }\n\n  return joined === undefined ? '.' : normalize(joined)\n}\n\n/**\n * Note: `normalize` is not exposed as `path.normalize`, so some code is\n * manually removed from it.\n *\n * @param {string} path\n * @returns {string}\n */\nfunction normalize(path) {\n  assertPath(path)\n\n  const absolute = path.charCodeAt(0) === 47 /* `/` */\n\n  // Normalize the path according to POSIX rules.\n  let value = normalizeString(path, !absolute)\n\n  if (value.length === 0 && !absolute) {\n    value = '.'\n  }\n\n  if (value.length > 0 && path.charCodeAt(path.length - 1) === 47 /* / */) {\n    value += '/'\n  }\n\n  return absolute ? '/' + value : value\n}\n\n/**\n * Resolve `.` and `..` elements in a path with directory names.\n *\n * @param {string} path\n * @param {boolean} allowAboveRoot\n * @returns {string}\n */\nfunction normalizeString(path, allowAboveRoot) {\n  let result = ''\n  let lastSegmentLength = 0\n  let lastSlash = -1\n  let dots = 0\n  let index = -1\n  /** @type {number|undefined} */\n  let code\n  /** @type {number} */\n  let lastSlashIndex\n\n  while (++index <= path.length) {\n    if (index < path.length) {\n      code = path.charCodeAt(index)\n    } else if (code === 47 /* `/` */) {\n      break\n    } else {\n      code = 47 /* `/` */\n    }\n\n    if (code === 47 /* `/` */) {\n      if (lastSlash === index - 1 || dots === 1) {\n        // Empty.\n      } else if (lastSlash !== index - 1 && dots === 2) {\n        if (\n          result.length < 2 ||\n          lastSegmentLength !== 2 ||\n          result.charCodeAt(result.length - 1) !== 46 /* `.` */ ||\n          result.charCodeAt(result.length - 2) !== 46 /* `.` */\n        ) {\n          if (result.length > 2) {\n            lastSlashIndex = result.lastIndexOf('/')\n\n            if (lastSlashIndex !== result.length - 1) {\n              if (lastSlashIndex < 0) {\n                result = ''\n                lastSegmentLength = 0\n              } else {\n                result = result.slice(0, lastSlashIndex)\n                lastSegmentLength = result.length - 1 - result.lastIndexOf('/')\n              }\n\n              lastSlash = index\n              dots = 0\n              continue\n            }\n          } else if (result.length > 0) {\n            result = ''\n            lastSegmentLength = 0\n            lastSlash = index\n            dots = 0\n            continue\n          }\n        }\n\n        if (allowAboveRoot) {\n          result = result.length > 0 ? result + '/..' : '..'\n          lastSegmentLength = 2\n        }\n      } else {\n        if (result.length > 0) {\n          result += '/' + path.slice(lastSlash + 1, index)\n        } else {\n          result = path.slice(lastSlash + 1, index)\n        }\n\n        lastSegmentLength = index - lastSlash - 1\n      }\n\n      lastSlash = index\n      dots = 0\n    } else if (code === 46 /* `.` */ && dots > -1) {\n      dots++\n    } else {\n      dots = -1\n    }\n  }\n\n  return result\n}\n\n/**\n * @param {string} path\n */\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError(\n      'Path must be a string. Received ' + JSON.stringify(path)\n    )\n  }\n}\n\n/* eslint-enable max-depth, complexity */\n","// Somewhat based on:\n// <https://github.com/defunctzombie/node-process/blob/master/browser.js>.\n// But I don’t think one tiny line of code can be copyrighted. 😅\nexport const proc = {cwd}\n\nfunction cwd() {\n  return '/'\n}\n","/**\n * @typedef URL\n * @property {string} hash\n * @property {string} host\n * @property {string} hostname\n * @property {string} href\n * @property {string} origin\n * @property {string} password\n * @property {string} pathname\n * @property {string} port\n * @property {string} protocol\n * @property {string} search\n * @property {any} searchParams\n * @property {string} username\n * @property {() => string} toString\n * @property {() => string} toJSON\n */\n\n/**\n * @param {unknown} fileURLOrPath\n * @returns {fileURLOrPath is URL}\n */\n// From: <https://github.com/nodejs/node/blob/fcf8ba4/lib/internal/url.js#L1501>\nexport function isUrl(fileURLOrPath) {\n  return (\n    fileURLOrPath !== null &&\n    typeof fileURLOrPath === 'object' &&\n    // @ts-expect-error: indexable.\n    fileURLOrPath.href &&\n    // @ts-expect-error: indexable.\n    fileURLOrPath.origin\n  )\n}\n","/// <reference lib=\"dom\" />\n\nimport {isUrl} from './minurl.shared.js'\n\n// See: <https://github.com/nodejs/node/blob/fcf8ba4/lib/internal/url.js>\n\n/**\n * @param {string|URL} path\n */\nexport function urlToPath(path) {\n  if (typeof path === 'string') {\n    path = new URL(path)\n  } else if (!isUrl(path)) {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'The \"path\" argument must be of type string or an instance of URL. Received `' +\n        path +\n        '`'\n    )\n    error.code = 'ERR_INVALID_ARG_TYPE'\n    throw error\n  }\n\n  if (path.protocol !== 'file:') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError('The URL must be of scheme file')\n    error.code = 'ERR_INVALID_URL_SCHEME'\n    throw error\n  }\n\n  return getPathFromURLPosix(path)\n}\n\n/**\n * @param {URL} url\n */\nfunction getPathFromURLPosix(url) {\n  if (url.hostname !== '') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'File URL host must be \"localhost\" or empty on darwin'\n    )\n    error.code = 'ERR_INVALID_FILE_URL_HOST'\n    throw error\n  }\n\n  const pathname = url.pathname\n  let index = -1\n\n  while (++index < pathname.length) {\n    if (\n      pathname.charCodeAt(index) === 37 /* `%` */ &&\n      pathname.charCodeAt(index + 1) === 50 /* `2` */\n    ) {\n      const third = pathname.charCodeAt(index + 2)\n      if (third === 70 /* `F` */ || third === 102 /* `f` */) {\n        /** @type {NodeJS.ErrnoException} */\n        const error = new TypeError(\n          'File URL path must not include encoded / characters'\n        )\n        error.code = 'ERR_INVALID_FILE_URL_PATH'\n        throw error\n      }\n    }\n  }\n\n  return decodeURIComponent(pathname)\n}\n\nexport {isUrl} from './minurl.shared.js'\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Point} Point\n * @typedef {Record<string, unknown> & {type: string, position?: Position|undefined}} NodeLike\n * @typedef {import('./minurl.shared.js').URL} URL\n * @typedef {import('../index.js').Data} Data\n * @typedef {import('../index.js').Value} Value\n *\n * @typedef {'ascii'|'utf8'|'utf-8'|'utf16le'|'ucs2'|'ucs-2'|'base64'|'base64url'|'latin1'|'binary'|'hex'} BufferEncoding\n *   Encodings supported by the buffer class.\n *   This is a copy of the typing from Node, copied to prevent Node globals from\n *   being needed.\n *   Copied from: <https://github.com/DefinitelyTyped/DefinitelyTyped/blob/90a4ec8/types/node/buffer.d.ts#L170>\n *\n * @typedef {Value|Options|VFile|URL} Compatible\n *   Things that can be passed to the constructor.\n *\n * @typedef VFileCoreOptions\n * @property {Value} [value]\n * @property {string} [cwd]\n * @property {Array<string>} [history]\n * @property {string|URL} [path]\n * @property {string} [basename]\n * @property {string} [stem]\n * @property {string} [extname]\n * @property {string} [dirname]\n * @property {Data} [data]\n *\n * @typedef Map\n *   Raw source map, see:\n *   <https://github.com/mozilla/source-map/blob/58819f0/source-map.d.ts#L15-L23>.\n * @property {number} version\n * @property {Array<string>} sources\n * @property {Array<string>} names\n * @property {string|undefined} [sourceRoot]\n * @property {Array<string>|undefined} [sourcesContent]\n * @property {string} mappings\n * @property {string} file\n *\n * @typedef {{[key: string]: unknown} & VFileCoreOptions} Options\n *   Configuration: a bunch of keys that will be shallow copied over to the new\n *   file.\n *\n * @typedef {Record<string, unknown>} ReporterSettings\n * @typedef {<T = ReporterSettings>(files: Array<VFile>, options: T) => string} Reporter\n */\n\nimport buffer from 'is-buffer'\nimport {VFileMessage} from 'vfile-message'\nimport {path} from './minpath.js'\nimport {proc} from './minproc.js'\nimport {urlToPath, isUrl} from './minurl.js'\n\n// Order of setting (least specific to most), we need this because otherwise\n// `{stem: 'a', path: '~/b.js'}` would throw, as a path is needed before a\n// stem can be set.\nconst order = ['history', 'path', 'basename', 'stem', 'extname', 'dirname']\n\nexport class VFile {\n  /**\n   * Create a new virtual file.\n   *\n   * If `options` is `string` or `Buffer`, it’s treated as `{value: options}`.\n   * If `options` is a `URL`, it’s treated as `{path: options}`.\n   * If `options` is a `VFile`, shallow copies its data over to the new file.\n   * All fields in `options` are set on the newly created `VFile`.\n   *\n   * Path related fields are set in the following order (least specific to\n   * most specific): `history`, `path`, `basename`, `stem`, `extname`,\n   * `dirname`.\n   *\n   * It’s not possible to set either `dirname` or `extname` without setting\n   * either `history`, `path`, `basename`, or `stem` as well.\n   *\n   * @param {Compatible} [value]\n   */\n  constructor(value) {\n    /** @type {Options} */\n    let options\n\n    if (!value) {\n      options = {}\n    } else if (typeof value === 'string' || buffer(value)) {\n      // @ts-expect-error Looks like a buffer.\n      options = {value}\n    } else if (isUrl(value)) {\n      options = {path: value}\n    } else {\n      // @ts-expect-error Looks like file or options.\n      options = value\n    }\n\n    /**\n     * Place to store custom information (default: `{}`).\n     * It’s OK to store custom data directly on the file but moving it to\n     * `data` is recommended.\n     * @type {Data}\n     */\n    this.data = {}\n\n    /**\n     * List of messages associated with the file.\n     * @type {Array<VFileMessage>}\n     */\n    this.messages = []\n\n    /**\n     * List of filepaths the file moved between.\n     * The first is the original path and the last is the current path.\n     * @type {Array<string>}\n     */\n    this.history = []\n\n    /**\n     * Base of `path` (default: `process.cwd()` or `'/'` in browsers).\n     * @type {string}\n     */\n    this.cwd = proc.cwd()\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * Raw value.\n     * @type {Value}\n     */\n    this.value\n\n    // The below are non-standard, they are “well-known”.\n    // As in, used in several tools.\n\n    /**\n     * Whether a file was saved to disk.\n     * This is used by vfile reporters.\n     * @type {boolean}\n     */\n    this.stored\n\n    /**\n     * Sometimes files have a non-string, compiled, representation.\n     * This can be stored in the `result` field.\n     * One example is when turning markdown into React nodes.\n     * This is used by unified to store non-string results.\n     * @type {unknown}\n     */\n    this.result\n\n    /**\n     * Sometimes files have a source map associated with them.\n     * This can be stored in the `map` field.\n     * This should be a `Map` type, which is equivalent to the `RawSourceMap`\n     * type from the `source-map` module.\n     * @type {Map|undefined}\n     */\n    this.map\n    /* eslint-enable no-unused-expressions */\n\n    // Set path related properties in the correct order.\n    let index = -1\n\n    while (++index < order.length) {\n      const prop = order[index]\n\n      // Note: we specifically use `in` instead of `hasOwnProperty` to accept\n      // `vfile`s too.\n      if (prop in options && options[prop] !== undefined) {\n        // @ts-expect-error: TS is confused by the different types for `history`.\n        this[prop] = prop === 'history' ? [...options[prop]] : options[prop]\n      }\n    }\n\n    /** @type {string} */\n    let prop\n\n    // Set non-path related properties.\n    for (prop in options) {\n      // @ts-expect-error: fine to set other things.\n      if (!order.includes(prop)) this[prop] = options[prop]\n    }\n  }\n\n  /**\n   * Get the full path (example: `'~/index.min.js'`).\n   * @returns {string}\n   */\n  get path() {\n    return this.history[this.history.length - 1]\n  }\n\n  /**\n   * Set the full path (example: `'~/index.min.js'`).\n   * Cannot be nullified.\n   * You can set a file URL (a `URL` object with a `file:` protocol) which will\n   * be turned into a path with `url.fileURLToPath`.\n   * @param {string|URL} path\n   */\n  set path(path) {\n    if (isUrl(path)) {\n      path = urlToPath(path)\n    }\n\n    assertNonEmpty(path, 'path')\n\n    if (this.path !== path) {\n      this.history.push(path)\n    }\n  }\n\n  /**\n   * Get the parent path (example: `'~'`).\n   */\n  get dirname() {\n    return typeof this.path === 'string' ? path.dirname(this.path) : undefined\n  }\n\n  /**\n   * Set the parent path (example: `'~'`).\n   * Cannot be set if there’s no `path` yet.\n   */\n  set dirname(dirname) {\n    assertPath(this.basename, 'dirname')\n    this.path = path.join(dirname || '', this.basename)\n  }\n\n  /**\n   * Get the basename (including extname) (example: `'index.min.js'`).\n   */\n  get basename() {\n    return typeof this.path === 'string' ? path.basename(this.path) : undefined\n  }\n\n  /**\n   * Set basename (including extname) (`'index.min.js'`).\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   */\n  set basename(basename) {\n    assertNonEmpty(basename, 'basename')\n    assertPart(basename, 'basename')\n    this.path = path.join(this.dirname || '', basename)\n  }\n\n  /**\n   * Get the extname (including dot) (example: `'.js'`).\n   */\n  get extname() {\n    return typeof this.path === 'string' ? path.extname(this.path) : undefined\n  }\n\n  /**\n   * Set the extname (including dot) (example: `'.js'`).\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be set if there’s no `path` yet.\n   */\n  set extname(extname) {\n    assertPart(extname, 'extname')\n    assertPath(this.dirname, 'extname')\n\n    if (extname) {\n      if (extname.charCodeAt(0) !== 46 /* `.` */) {\n        throw new Error('`extname` must start with `.`')\n      }\n\n      if (extname.includes('.', 1)) {\n        throw new Error('`extname` cannot contain multiple dots')\n      }\n    }\n\n    this.path = path.join(this.dirname, this.stem + (extname || ''))\n  }\n\n  /**\n   * Get the stem (basename w/o extname) (example: `'index.min'`).\n   */\n  get stem() {\n    return typeof this.path === 'string'\n      ? path.basename(this.path, this.extname)\n      : undefined\n  }\n\n  /**\n   * Set the stem (basename w/o extname) (example: `'index.min'`).\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   */\n  set stem(stem) {\n    assertNonEmpty(stem, 'stem')\n    assertPart(stem, 'stem')\n    this.path = path.join(this.dirname || '', stem + (this.extname || ''))\n  }\n\n  /**\n   * Serialize the file.\n   *\n   * @param {BufferEncoding} [encoding='utf8']\n   *   When `value` is a `Buffer`, `encoding` is a character encoding to\n   *   understand it as (default: `'utf8'`).\n   * @returns {string}\n   *   Serialized file.\n   */\n  toString(encoding) {\n    return (this.value || '').toString(encoding)\n  }\n\n  /**\n   * Constructs a new `VFileMessage`, where `fatal` is set to `false`, and\n   * associates it with the file by adding it to `vfile.messages` and setting\n   * `message.file` to the current filepath.\n   *\n   * @param {string|Error} reason\n   *   Human readable reason for the message, uses the stack and message of the error if given.\n   * @param {Node|NodeLike|Position|Point} [place]\n   *   Place where the message occurred in the file.\n   * @param {string} [origin]\n   *   Computer readable reason for the message\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  message(reason, place, origin) {\n    const message = new VFileMessage(reason, place, origin)\n\n    if (this.path) {\n      message.name = this.path + ':' + message.name\n      message.file = this.path\n    }\n\n    message.fatal = false\n\n    this.messages.push(message)\n\n    return message\n  }\n\n  /**\n   * Like `VFile#message()`, but associates an informational message where\n   * `fatal` is set to `null`.\n   *\n   * @param {string|Error} reason\n   *   Human readable reason for the message, uses the stack and message of the error if given.\n   * @param {Node|NodeLike|Position|Point} [place]\n   *   Place where the message occurred in the file.\n   * @param {string} [origin]\n   *   Computer readable reason for the message\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  info(reason, place, origin) {\n    const message = this.message(reason, place, origin)\n\n    message.fatal = null\n\n    return message\n  }\n\n  /**\n   * Like `VFile#message()`, but associates a fatal message where `fatal` is\n   * set to `true`, and then immediately throws it.\n   *\n   * > 👉 **Note**: a fatal error means that a file is no longer processable.\n   *\n   * @param {string|Error} reason\n   *   Human readable reason for the message, uses the stack and message of the error if given.\n   * @param {Node|NodeLike|Position|Point} [place]\n   *   Place where the message occurred in the file.\n   * @param {string} [origin]\n   *   Computer readable reason for the message\n   * @returns {never}\n   *   Message.\n   */\n  fail(reason, place, origin) {\n    const message = this.message(reason, place, origin)\n\n    message.fatal = true\n\n    throw message\n  }\n}\n\n/**\n * Assert that `part` is not a path (as in, does not contain `path.sep`).\n *\n * @param {string|undefined} part\n * @param {string} name\n * @returns {void}\n */\nfunction assertPart(part, name) {\n  if (part && part.includes(path.sep)) {\n    throw new Error(\n      '`' + name + '` cannot be a path: did not expect `' + path.sep + '`'\n    )\n  }\n}\n\n/**\n * Assert that `part` is not empty.\n *\n * @param {string|undefined} part\n * @param {string} name\n * @returns {asserts part is string}\n */\nfunction assertNonEmpty(part, name) {\n  if (!part) {\n    throw new Error('`' + name + '` cannot be empty')\n  }\n}\n\n/**\n * Assert `path` exists.\n *\n * @param {string|undefined} path\n * @param {string} name\n * @returns {asserts path is string}\n */\nfunction assertPath(path, name) {\n  if (!path) {\n    throw new Error('Setting `' + name + '` requires `path` to be set too')\n  }\n}\n","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _toArray(arr) {\n  return arrayWithHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableRest();\n}","/**\n * Throw a given error.\n *\n * @param {Error|null|undefined} [error]\n *   Maybe error.\n * @returns {asserts error is null|undefined}\n */\nexport function bail(error) {\n  if (error) {\n    throw error\n  }\n}\n","export default function isPlainObject(value) {\n\tif (typeof value !== 'object' || value === null) {\n\t\treturn false;\n\t}\n\n\tconst prototype = Object.getPrototypeOf(value);\n\treturn (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in value) && !(Symbol.iterator in value);\n}\n","/**\n * @typedef {(error?: Error|null|undefined, ...output: Array<any>) => void} Callback\n * @typedef {(...input: Array<any>) => any} Middleware\n *\n * @typedef {(...input: Array<any>) => void} Run\n *   Call all middleware.\n * @typedef {(fn: Middleware) => Pipeline} Use\n *   Add `fn` (middleware) to the list.\n * @typedef {{run: Run, use: Use}} Pipeline\n *   Middleware.\n */\n\n/**\n * Create new middleware.\n *\n * @returns {Pipeline}\n */\nexport function trough() {\n  /** @type {Array<Middleware>} */\n  const fns = []\n  /** @type {Pipeline} */\n  const pipeline = {run, use}\n\n  return pipeline\n\n  /** @type {Run} */\n  function run(...values) {\n    let middlewareIndex = -1\n    /** @type {Callback} */\n    const callback = values.pop()\n\n    if (typeof callback !== 'function') {\n      throw new TypeError('Expected function as last argument, not ' + callback)\n    }\n\n    next(null, ...values)\n\n    /**\n     * Run the next `fn`, or we’re done.\n     *\n     * @param {Error|null|undefined} error\n     * @param {Array<any>} output\n     */\n    function next(error, ...output) {\n      const fn = fns[++middlewareIndex]\n      let index = -1\n\n      if (error) {\n        callback(error)\n        return\n      }\n\n      // Copy non-nullish input into values.\n      while (++index < values.length) {\n        if (output[index] === null || output[index] === undefined) {\n          output[index] = values[index]\n        }\n      }\n\n      // Save the newly created `output` for the next call.\n      values = output\n\n      // Next or done.\n      if (fn) {\n        wrap(fn, next)(...output)\n      } else {\n        callback(null, ...output)\n      }\n    }\n  }\n\n  /** @type {Use} */\n  function use(middelware) {\n    if (typeof middelware !== 'function') {\n      throw new TypeError(\n        'Expected `middelware` to be a function, not ' + middelware\n      )\n    }\n\n    fns.push(middelware)\n    return pipeline\n  }\n}\n\n/**\n * Wrap `middleware`.\n * Can be sync or async; return a promise, receive a callback, or return new\n * values and errors.\n *\n * @param {Middleware} middleware\n * @param {Callback} callback\n */\nexport function wrap(middleware, callback) {\n  /** @type {boolean} */\n  let called\n\n  return wrapped\n\n  /**\n   * Call `middleware`.\n   * @this {any}\n   * @param {Array<any>} parameters\n   * @returns {void}\n   */\n  function wrapped(...parameters) {\n    const fnExpectsCallback = middleware.length > parameters.length\n    /** @type {any} */\n    let result\n\n    if (fnExpectsCallback) {\n      parameters.push(done)\n    }\n\n    try {\n      result = middleware.apply(this, parameters)\n    } catch (error) {\n      const exception = /** @type {Error} */ (error)\n\n      // Well, this is quite the pickle.\n      // `middleware` received a callback and called it synchronously, but that\n      // threw an error.\n      // The only thing left to do is to throw the thing instead.\n      if (fnExpectsCallback && called) {\n        throw exception\n      }\n\n      return done(exception)\n    }\n\n    if (!fnExpectsCallback) {\n      if (result instanceof Promise) {\n        result.then(then, done)\n      } else if (result instanceof Error) {\n        done(result)\n      } else {\n        then(result)\n      }\n    }\n  }\n\n  /**\n   * Call `callback`, only once.\n   * @type {Callback}\n   */\n  function done(error, ...output) {\n    if (!called) {\n      called = true\n      callback(error, ...output)\n    }\n  }\n\n  /**\n   * Call `done` with one value.\n   *\n   * @param {any} [value]\n   */\n  function then(value) {\n    done(null, value)\n  }\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('vfile').VFileCompatible} VFileCompatible\n * @typedef {import('vfile').VFileValue} VFileValue\n * @typedef {import('..').Processor} Processor\n * @typedef {import('..').Plugin} Plugin\n * @typedef {import('..').Preset} Preset\n * @typedef {import('..').Pluggable} Pluggable\n * @typedef {import('..').PluggableList} PluggableList\n * @typedef {import('..').Transformer} Transformer\n * @typedef {import('..').Parser} Parser\n * @typedef {import('..').Compiler} Compiler\n * @typedef {import('..').RunCallback} RunCallback\n * @typedef {import('..').ProcessCallback} ProcessCallback\n *\n * @typedef Context\n * @property {Node} tree\n * @property {VFile} file\n */\n\nimport {bail} from 'bail'\nimport isBuffer from 'is-buffer'\nimport extend from 'extend'\nimport isPlainObj from 'is-plain-obj'\nimport {trough} from 'trough'\nimport {VFile} from 'vfile'\n\n// Expose a frozen processor.\nexport const unified = base().freeze()\n\nconst own = {}.hasOwnProperty\n\n// Function to create the first processor.\n/**\n * @returns {Processor}\n */\nfunction base() {\n  const transformers = trough()\n  /** @type {Processor['attachers']} */\n  const attachers = []\n  /** @type {Record<string, unknown>} */\n  let namespace = {}\n  /** @type {boolean|undefined} */\n  let frozen\n  let freezeIndex = -1\n\n  // Data management.\n  // @ts-expect-error: overloads are handled.\n  processor.data = data\n  processor.Parser = undefined\n  processor.Compiler = undefined\n\n  // Lock.\n  processor.freeze = freeze\n\n  // Plugins.\n  processor.attachers = attachers\n  // @ts-expect-error: overloads are handled.\n  processor.use = use\n\n  // API.\n  processor.parse = parse\n  processor.stringify = stringify\n  // @ts-expect-error: overloads are handled.\n  processor.run = run\n  processor.runSync = runSync\n  // @ts-expect-error: overloads are handled.\n  processor.process = process\n  processor.processSync = processSync\n\n  // Expose.\n  return processor\n\n  // Create a new processor based on the processor in the current scope.\n  /** @type {Processor} */\n  function processor() {\n    const destination = base()\n    let index = -1\n\n    while (++index < attachers.length) {\n      destination.use(...attachers[index])\n    }\n\n    destination.data(extend(true, {}, namespace))\n\n    return destination\n  }\n\n  /**\n   * @param {string|Record<string, unknown>} [key]\n   * @param {unknown} [value]\n   * @returns {unknown}\n   */\n  function data(key, value) {\n    if (typeof key === 'string') {\n      // Set `key`.\n      if (arguments.length === 2) {\n        assertUnfrozen('data', frozen)\n        namespace[key] = value\n        return processor\n      }\n\n      // Get `key`.\n      return (own.call(namespace, key) && namespace[key]) || null\n    }\n\n    // Set space.\n    if (key) {\n      assertUnfrozen('data', frozen)\n      namespace = key\n      return processor\n    }\n\n    // Get space.\n    return namespace\n  }\n\n  /** @type {Processor['freeze']} */\n  function freeze() {\n    if (frozen) {\n      return processor\n    }\n\n    while (++freezeIndex < attachers.length) {\n      const [attacher, ...options] = attachers[freezeIndex]\n\n      if (options[0] === false) {\n        continue\n      }\n\n      if (options[0] === true) {\n        options[0] = undefined\n      }\n\n      /** @type {Transformer|void} */\n      const transformer = attacher.call(processor, ...options)\n\n      if (typeof transformer === 'function') {\n        transformers.use(transformer)\n      }\n    }\n\n    frozen = true\n    freezeIndex = Number.POSITIVE_INFINITY\n\n    return processor\n  }\n\n  /**\n   * @param {Pluggable|null|undefined} [value]\n   * @param {...unknown} options\n   * @returns {Processor}\n   */\n  function use(value, ...options) {\n    /** @type {Record<string, unknown>|undefined} */\n    let settings\n\n    assertUnfrozen('use', frozen)\n\n    if (value === null || value === undefined) {\n      // Empty.\n    } else if (typeof value === 'function') {\n      addPlugin(value, ...options)\n    } else if (typeof value === 'object') {\n      if (Array.isArray(value)) {\n        addList(value)\n      } else {\n        addPreset(value)\n      }\n    } else {\n      throw new TypeError('Expected usable value, not `' + value + '`')\n    }\n\n    if (settings) {\n      namespace.settings = Object.assign(namespace.settings || {}, settings)\n    }\n\n    return processor\n\n    /**\n     * @param {import('..').Pluggable<unknown[]>} value\n     * @returns {void}\n     */\n    function add(value) {\n      if (typeof value === 'function') {\n        addPlugin(value)\n      } else if (typeof value === 'object') {\n        if (Array.isArray(value)) {\n          const [plugin, ...options] = value\n          addPlugin(plugin, ...options)\n        } else {\n          addPreset(value)\n        }\n      } else {\n        throw new TypeError('Expected usable value, not `' + value + '`')\n      }\n    }\n\n    /**\n     * @param {Preset} result\n     * @returns {void}\n     */\n    function addPreset(result) {\n      addList(result.plugins)\n\n      if (result.settings) {\n        settings = Object.assign(settings || {}, result.settings)\n      }\n    }\n\n    /**\n     * @param {PluggableList|null|undefined} [plugins]\n     * @returns {void}\n     */\n    function addList(plugins) {\n      let index = -1\n\n      if (plugins === null || plugins === undefined) {\n        // Empty.\n      } else if (Array.isArray(plugins)) {\n        while (++index < plugins.length) {\n          const thing = plugins[index]\n          add(thing)\n        }\n      } else {\n        throw new TypeError('Expected a list of plugins, not `' + plugins + '`')\n      }\n    }\n\n    /**\n     * @param {Plugin} plugin\n     * @param {...unknown} [value]\n     * @returns {void}\n     */\n    function addPlugin(plugin, value) {\n      let index = -1\n      /** @type {Processor['attachers'][number]|undefined} */\n      let entry\n\n      while (++index < attachers.length) {\n        if (attachers[index][0] === plugin) {\n          entry = attachers[index]\n          break\n        }\n      }\n\n      if (entry) {\n        if (isPlainObj(entry[1]) && isPlainObj(value)) {\n          value = extend(true, entry[1], value)\n        }\n\n        entry[1] = value\n      } else {\n        // @ts-expect-error: fine.\n        attachers.push([...arguments])\n      }\n    }\n  }\n\n  /** @type {Processor['parse']} */\n  function parse(doc) {\n    processor.freeze()\n    const file = vfile(doc)\n    const Parser = processor.Parser\n    assertParser('parse', Parser)\n\n    if (newable(Parser, 'parse')) {\n      // @ts-expect-error: `newable` checks this.\n      return new Parser(String(file), file).parse()\n    }\n\n    // @ts-expect-error: `newable` checks this.\n    return Parser(String(file), file) // eslint-disable-line new-cap\n  }\n\n  /** @type {Processor['stringify']} */\n  function stringify(node, doc) {\n    processor.freeze()\n    const file = vfile(doc)\n    const Compiler = processor.Compiler\n    assertCompiler('stringify', Compiler)\n    assertNode(node)\n\n    if (newable(Compiler, 'compile')) {\n      // @ts-expect-error: `newable` checks this.\n      return new Compiler(node, file).compile()\n    }\n\n    // @ts-expect-error: `newable` checks this.\n    return Compiler(node, file) // eslint-disable-line new-cap\n  }\n\n  /**\n   * @param {Node} node\n   * @param {VFileCompatible|RunCallback} [doc]\n   * @param {RunCallback} [callback]\n   * @returns {Promise<Node>|void}\n   */\n  function run(node, doc, callback) {\n    assertNode(node)\n    processor.freeze()\n\n    if (!callback && typeof doc === 'function') {\n      callback = doc\n      doc = undefined\n    }\n\n    if (!callback) {\n      return new Promise(executor)\n    }\n\n    executor(null, callback)\n\n    /**\n     * @param {null|((node: Node) => void)} resolve\n     * @param {(error: Error) => void} reject\n     * @returns {void}\n     */\n    function executor(resolve, reject) {\n      // @ts-expect-error: `doc` can’t be a callback anymore, we checked.\n      transformers.run(node, vfile(doc), done)\n\n      /**\n       * @param {Error|null} error\n       * @param {Node} tree\n       * @param {VFile} file\n       * @returns {void}\n       */\n      function done(error, tree, file) {\n        tree = tree || node\n        if (error) {\n          reject(error)\n        } else if (resolve) {\n          resolve(tree)\n        } else {\n          // @ts-expect-error: `callback` is defined if `resolve` is not.\n          callback(null, tree, file)\n        }\n      }\n    }\n  }\n\n  /** @type {Processor['runSync']} */\n  function runSync(node, file) {\n    /** @type {Node|undefined} */\n    let result\n    /** @type {boolean|undefined} */\n    let complete\n\n    processor.run(node, file, done)\n\n    assertDone('runSync', 'run', complete)\n\n    // @ts-expect-error: we either bailed on an error or have a tree.\n    return result\n\n    /**\n     * @param {Error|null} [error]\n     * @param {Node} [tree]\n     * @returns {void}\n     */\n    function done(error, tree) {\n      bail(error)\n      result = tree\n      complete = true\n    }\n  }\n\n  /**\n   * @param {VFileCompatible} doc\n   * @param {ProcessCallback} [callback]\n   * @returns {Promise<VFile>|undefined}\n   */\n  function process(doc, callback) {\n    processor.freeze()\n    assertParser('process', processor.Parser)\n    assertCompiler('process', processor.Compiler)\n\n    if (!callback) {\n      return new Promise(executor)\n    }\n\n    executor(null, callback)\n\n    /**\n     * @param {null|((file: VFile) => void)} resolve\n     * @param {(error?: Error|null|undefined) => void} reject\n     * @returns {void}\n     */\n    function executor(resolve, reject) {\n      const file = vfile(doc)\n\n      processor.run(processor.parse(file), file, (error, tree, file) => {\n        if (error || !tree || !file) {\n          done(error)\n        } else {\n          /** @type {unknown} */\n          const result = processor.stringify(tree, file)\n\n          if (result === undefined || result === null) {\n            // Empty.\n          } else if (looksLikeAVFileValue(result)) {\n            file.value = result\n          } else {\n            file.result = result\n          }\n\n          done(error, file)\n        }\n      })\n\n      /**\n       * @param {Error|null|undefined} [error]\n       * @param {VFile|undefined} [file]\n       * @returns {void}\n       */\n      function done(error, file) {\n        if (error || !file) {\n          reject(error)\n        } else if (resolve) {\n          resolve(file)\n        } else {\n          // @ts-expect-error: `callback` is defined if `resolve` is not.\n          callback(null, file)\n        }\n      }\n    }\n  }\n\n  /** @type {Processor['processSync']} */\n  function processSync(doc) {\n    /** @type {boolean|undefined} */\n    let complete\n\n    processor.freeze()\n    assertParser('processSync', processor.Parser)\n    assertCompiler('processSync', processor.Compiler)\n\n    const file = vfile(doc)\n\n    processor.process(file, done)\n\n    assertDone('processSync', 'process', complete)\n\n    return file\n\n    /**\n     * @param {Error|null|undefined} [error]\n     * @returns {void}\n     */\n    function done(error) {\n      complete = true\n      bail(error)\n    }\n  }\n}\n\n/**\n * Check if `value` is a constructor.\n *\n * @param {unknown} value\n * @param {string} name\n * @returns {boolean}\n */\nfunction newable(value, name) {\n  return (\n    typeof value === 'function' &&\n    // Prototypes do exist.\n    // type-coverage:ignore-next-line\n    value.prototype &&\n    // A function with keys in its prototype is probably a constructor.\n    // Classes’ prototype methods are not enumerable, so we check if some value\n    // exists in the prototype.\n    // type-coverage:ignore-next-line\n    (keys(value.prototype) || name in value.prototype)\n  )\n}\n\n/**\n * Check if `value` is an object with keys.\n *\n * @param {Record<string, unknown>} value\n * @returns {boolean}\n */\nfunction keys(value) {\n  /** @type {string} */\n  let key\n\n  for (key in value) {\n    if (own.call(value, key)) {\n      return true\n    }\n  }\n\n  return false\n}\n\n/**\n * Assert a parser is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Parser}\n */\nfunction assertParser(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `Parser`')\n  }\n}\n\n/**\n * Assert a compiler is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Compiler}\n */\nfunction assertCompiler(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `Compiler`')\n  }\n}\n\n/**\n * Assert the processor is not frozen.\n *\n * @param {string} name\n * @param {unknown} frozen\n * @returns {asserts frozen is false}\n */\nfunction assertUnfrozen(name, frozen) {\n  if (frozen) {\n    throw new Error(\n      'Cannot call `' +\n        name +\n        '` on a frozen processor.\\nCreate a new processor first, by calling it: use `processor()` instead of `processor`.'\n    )\n  }\n}\n\n/**\n * Assert `node` is a unist node.\n *\n * @param {unknown} node\n * @returns {asserts node is Node}\n */\nfunction assertNode(node) {\n  // `isPlainObj` unfortunately uses `any` instead of `unknown`.\n  // type-coverage:ignore-next-line\n  if (!isPlainObj(node) || typeof node.type !== 'string') {\n    throw new TypeError('Expected node, got `' + node + '`')\n    // Fine.\n  }\n}\n\n/**\n * Assert that `complete` is `true`.\n *\n * @param {string} name\n * @param {string} asyncName\n * @param {unknown} complete\n * @returns {asserts complete is true}\n */\nfunction assertDone(name, asyncName, complete) {\n  if (!complete) {\n    throw new Error(\n      '`' + name + '` finished async. Use `' + asyncName + '` instead'\n    )\n  }\n}\n\n/**\n * @param {VFileCompatible} [value]\n * @returns {VFile}\n */\nfunction vfile(value) {\n  return looksLikeAVFile(value) ? value : new VFile(value)\n}\n\n/**\n * @param {VFileCompatible} [value]\n * @returns {value is VFile}\n */\nfunction looksLikeAVFile(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'message' in value &&\n      'messages' in value\n  )\n}\n\n/**\n * @param {unknown} [value]\n * @returns {value is VFileValue}\n */\nfunction looksLikeAVFileValue(value) {\n  return typeof value === 'string' || isBuffer(value)\n}\n","/**\n * @typedef Options\n * @property {boolean} [includeImageAlt=true]\n */\n\n/**\n * Get the text content of a node.\n * Prefer the node’s plain-text fields, otherwise serialize its children,\n * and if the given value is an array, serialize the nodes in it.\n *\n * @param {unknown} node\n * @param {Options} [options]\n * @returns {string}\n */\nexport function toString(node, options) {\n  var {includeImageAlt = true} = options || {}\n  return one(node, includeImageAlt)\n}\n\n/**\n * @param {unknown} node\n * @param {boolean} includeImageAlt\n * @returns {string}\n */\nfunction one(node, includeImageAlt) {\n  return (\n    (node &&\n      typeof node === 'object' &&\n      // @ts-ignore looks like a literal.\n      (node.value ||\n        // @ts-ignore looks like an image.\n        (includeImageAlt ? node.alt : '') ||\n        // @ts-ignore looks like a parent.\n        ('children' in node && all(node.children, includeImageAlt)) ||\n        (Array.isArray(node) && all(node, includeImageAlt)))) ||\n    ''\n  )\n}\n\n/**\n * @param {Array.<unknown>} values\n * @param {boolean} includeImageAlt\n * @returns {string}\n */\nfunction all(values, includeImageAlt) {\n  /** @type {Array.<string>} */\n  var result = []\n  var index = -1\n\n  while (++index < values.length) {\n    result[index] = one(values[index], includeImageAlt)\n  }\n\n  return result.join('')\n}\n","/**\n * Like `Array#splice`, but smarter for giant arrays.\n *\n * `Array#splice` takes all items to be inserted as individual argument which\n * causes a stack overflow in V8 when trying to insert 100k items for instance.\n *\n * Otherwise, this does not return the removed items, and takes `items` as an\n * array instead of rest parameters.\n *\n * @template {unknown} T\n * @param {T[]} list\n * @param {number} start\n * @param {number} remove\n * @param {T[]} items\n * @returns {void}\n */\nexport function splice(list, start, remove, items) {\n  const end = list.length\n  let chunkStart = 0\n  /** @type {unknown[]} */\n\n  let parameters // Make start between zero and `end` (included).\n\n  if (start < 0) {\n    start = -start > end ? 0 : end + start\n  } else {\n    start = start > end ? end : start\n  }\n\n  remove = remove > 0 ? remove : 0 // No need to chunk the items if there’s only a couple (10k) items.\n\n  if (items.length < 10000) {\n    parameters = Array.from(items)\n    parameters.unshift(start, remove) // @ts-expect-error Hush, it’s fine.\n    ;[].splice.apply(list, parameters)\n  } else {\n    // Delete `remove` items starting from `start`\n    if (remove) [].splice.apply(list, [start, remove]) // Insert the items in chunks to not cause stack overflows.\n\n    while (chunkStart < items.length) {\n      parameters = items.slice(chunkStart, chunkStart + 10000)\n      parameters.unshift(start, 0) // @ts-expect-error Hush, it’s fine.\n      ;[].splice.apply(list, parameters)\n      chunkStart += 10000\n      start += 10000\n    }\n  }\n}\n/**\n * Append `items` (an array) at the end of `list` (another array).\n * When `list` was empty, returns `items` instead.\n *\n * This prevents a potentially expensive operation when `list` is empty,\n * and adds items in batches to prevent V8 from hanging.\n *\n * @template {unknown} T\n * @param {T[]} list\n * @param {T[]} items\n * @returns {T[]}\n */\n\nexport function push(list, items) {\n  if (list.length > 0) {\n    splice(list, list.length, 0, items)\n    return list\n  }\n\n  return items\n}\n","/**\n * @typedef {import('micromark-util-types').NormalizedExtension} NormalizedExtension\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').HtmlExtension} HtmlExtension\n */\n\nimport {splice} from 'micromark-util-chunked'\n\nconst hasOwnProperty = {}.hasOwnProperty\n\n/**\n * Combine several syntax extensions into one.\n *\n * @param {Extension[]} extensions List of syntax extensions.\n * @returns {NormalizedExtension} A single combined extension.\n */\nexport function combineExtensions(extensions) {\n  /** @type {NormalizedExtension} */\n  const all = {}\n  let index = -1\n\n  while (++index < extensions.length) {\n    syntaxExtension(all, extensions[index])\n  }\n\n  return all\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {NormalizedExtension} all Extension to merge into.\n * @param {Extension} extension Extension to merge.\n * @returns {void}\n */\nfunction syntaxExtension(all, extension) {\n  /** @type {string} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    const left = maybe || (all[hook] = {})\n    const right = extension[hook]\n    /** @type {string} */\n    let code\n\n    for (code in right) {\n      if (!hasOwnProperty.call(left, code)) left[code] = []\n      const value = right[code]\n      constructs(\n        // @ts-expect-error Looks like a list.\n        left[code],\n        Array.isArray(value) ? value : value ? [value] : []\n      )\n    }\n  }\n}\n\n/**\n * Merge `list` into `existing` (both lists of constructs).\n * Mutates `existing`.\n *\n * @param {unknown[]} existing\n * @param {unknown[]} list\n * @returns {void}\n */\nfunction constructs(existing, list) {\n  let index = -1\n  /** @type {unknown[]} */\n  const before = []\n\n  while (++index < list.length) {\n    // @ts-expect-error Looks like an object.\n    ;(list[index].add === 'after' ? existing : before).push(list[index])\n  }\n\n  splice(existing, 0, 0, before)\n}\n\n/**\n * Combine several HTML extensions into one.\n *\n * @param {HtmlExtension[]} htmlExtensions List of HTML extensions.\n * @returns {HtmlExtension} A single combined extension.\n */\nexport function combineHtmlExtensions(htmlExtensions) {\n  /** @type {HtmlExtension} */\n  const handlers = {}\n  let index = -1\n\n  while (++index < htmlExtensions.length) {\n    htmlExtension(handlers, htmlExtensions[index])\n  }\n\n  return handlers\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {HtmlExtension} all Extension to merge into.\n * @param {HtmlExtension} extension Extension to merge.\n * @returns {void}\n */\nfunction htmlExtension(all, extension) {\n  /** @type {string} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    const left = maybe || (all[hook] = {})\n    const right = extension[hook]\n    /** @type {string} */\n    let type\n\n    if (right) {\n      for (type in right) {\n        left[type] = right[type]\n      }\n    }\n  }\n}\n","// This module is generated by `script/`.\n//\n// CommonMark handles attention (emphasis, strong) markers based on what comes\n// before or after them.\n// One such difference is if those characters are Unicode punctuation.\n// This script is generated from the Unicode data.\nexport const unicodePunctuationRegex =\n  /[!-/:-@[-`{-~\\u00A1\\u00A7\\u00AB\\u00B6\\u00B7\\u00BB\\u00BF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061E\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C77\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4F\\u2E52\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]/\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {unicodePunctuationRegex} from './lib/unicode-punctuation-regex.js'\n/**\n * Check whether the character code represents an ASCII alpha (`a` through `z`,\n * case insensitive).\n *\n * An **ASCII alpha** is an ASCII upper alpha or ASCII lower alpha.\n *\n * An **ASCII upper alpha** is a character in the inclusive range U+0041 (`A`)\n * to U+005A (`Z`).\n *\n * An **ASCII lower alpha** is a character in the inclusive range U+0061 (`a`)\n * to U+007A (`z`).\n */\n\nexport const asciiAlpha = regexCheck(/[A-Za-z]/)\n/**\n * Check whether the character code represents an ASCII digit (`0` through `9`).\n *\n * An **ASCII digit** is a character in the inclusive range U+0030 (`0`) to\n * U+0039 (`9`).\n */\n\nexport const asciiDigit = regexCheck(/\\d/)\n/**\n * Check whether the character code represents an ASCII hex digit (`a` through\n * `f`, case insensitive, or `0` through `9`).\n *\n * An **ASCII hex digit** is an ASCII digit (see `asciiDigit`), ASCII upper hex\n * digit, or an ASCII lower hex digit.\n *\n * An **ASCII upper hex digit** is a character in the inclusive range U+0041\n * (`A`) to U+0046 (`F`).\n *\n * An **ASCII lower hex digit** is a character in the inclusive range U+0061\n * (`a`) to U+0066 (`f`).\n */\n\nexport const asciiHexDigit = regexCheck(/[\\dA-Fa-f]/)\n/**\n * Check whether the character code represents an ASCII alphanumeric (`a`\n * through `z`, case insensitive, or `0` through `9`).\n *\n * An **ASCII alphanumeric** is an ASCII digit (see `asciiDigit`) or ASCII alpha\n * (see `asciiAlpha`).\n */\n\nexport const asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/)\n/**\n * Check whether the character code represents ASCII punctuation.\n *\n * An **ASCII punctuation** is a character in the inclusive ranges U+0021\n * EXCLAMATION MARK (`!`) to U+002F SLASH (`/`), U+003A COLON (`:`) to U+0040 AT\n * SIGN (`@`), U+005B LEFT SQUARE BRACKET (`[`) to U+0060 GRAVE ACCENT\n * (`` ` ``), or U+007B LEFT CURLY BRACE (`{`) to U+007E TILDE (`~`).\n */\n\nexport const asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/)\n/**\n * Check whether the character code represents an ASCII atext.\n *\n * atext is an ASCII alphanumeric (see `asciiAlphanumeric`), or a character in\n * the inclusive ranges U+0023 NUMBER SIGN (`#`) to U+0027 APOSTROPHE (`'`),\n * U+002A ASTERISK (`*`), U+002B PLUS SIGN (`+`), U+002D DASH (`-`), U+002F\n * SLASH (`/`), U+003D EQUALS TO (`=`), U+003F QUESTION MARK (`?`), U+005E\n * CARET (`^`) to U+0060 GRAVE ACCENT (`` ` ``), or U+007B LEFT CURLY BRACE\n * (`{`) to U+007E TILDE (`~`).\n *\n * See:\n * **\\[RFC5322]**:\n * [Internet Message Format](https://tools.ietf.org/html/rfc5322).\n * P. Resnick.\n * IETF.\n */\n\nexport const asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/)\n/**\n * Check whether a character code is an ASCII control character.\n *\n * An **ASCII control** is a character in the inclusive range U+0000 NULL (NUL)\n * to U+001F (US), or U+007F (DEL).\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code !== null && (code < 32 || code === 127)\n  )\n}\n/**\n * Check whether a character code is a markdown line ending (see\n * `markdownLineEnding`) or markdown space (see `markdownSpace`).\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function markdownLineEndingOrSpace(code) {\n  return code !== null && (code < 0 || code === 32)\n}\n/**\n * Check whether a character code is a markdown line ending.\n *\n * A **markdown line ending** is the virtual characters M-0003 CARRIAGE RETURN\n * LINE FEED (CRLF), M-0004 LINE FEED (LF) and M-0005 CARRIAGE RETURN (CR).\n *\n * In micromark, the actual character U+000A LINE FEED (LF) and U+000D CARRIAGE\n * RETURN (CR) are replaced by these virtual characters depending on whether\n * they occurred together.\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function markdownLineEnding(code) {\n  return code !== null && code < -2\n}\n/**\n * Check whether a character code is a markdown space.\n *\n * A **markdown space** is the concrete character U+0020 SPACE (SP) and the\n * virtual characters M-0001 VIRTUAL SPACE (VS) and M-0002 HORIZONTAL TAB (HT).\n *\n * In micromark, the actual character U+0009 CHARACTER TABULATION (HT) is\n * replaced by one M-0002 HORIZONTAL TAB (HT) and between 0 and 3 M-0001 VIRTUAL\n * SPACE (VS) characters, depending on the column at which the tab occurred.\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function markdownSpace(code) {\n  return code === -2 || code === -1 || code === 32\n}\n/**\n * Check whether the character code represents Unicode whitespace.\n *\n * Note that this does handle micromark specific markdown whitespace characters.\n * See `markdownLineEndingOrSpace` to check that.\n *\n * A **Unicode whitespace** is a character in the Unicode `Zs` (Separator,\n * Space) category, or U+0009 CHARACTER TABULATION (HT), U+000A LINE FEED (LF),\n * U+000C (FF), or U+000D CARRIAGE RETURN (CR) (**\\[UNICODE]**).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n */\n\nexport const unicodeWhitespace = regexCheck(/\\s/)\n/**\n * Check whether the character code represents Unicode punctuation.\n *\n * A **Unicode punctuation** is a character in the Unicode `Pc` (Punctuation,\n * Connector), `Pd` (Punctuation, Dash), `Pe` (Punctuation, Close), `Pf`\n * (Punctuation, Final quote), `Pi` (Punctuation, Initial quote), `Po`\n * (Punctuation, Other), or `Ps` (Punctuation, Open) categories, or an ASCII\n * punctuation (see `asciiPunctuation`).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n */\n// Size note: removing ASCII from the regex and using `asciiPunctuation` here\n// In fact adds to the bundle size.\n\nexport const unicodePunctuation = regexCheck(unicodePunctuationRegex)\n/**\n * Create a code check from a regex.\n *\n * @param {RegExp} regex\n * @returns {(code: Code) => code is number}\n */\n\nfunction regexCheck(regex) {\n  return check\n  /**\n   * Check whether a code matches the bound regex.\n   *\n   * @param {Code} code Character code\n   * @returns {code is number} Whether the character code matches the bound regex\n   */\n\n  function check(code) {\n    return code !== null && regex.test(String.fromCharCode(code))\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownSpace} from 'micromark-util-character'\n/**\n * @param {Effects} effects\n * @param {State} ok\n * @param {string} type\n * @param {number} [max=Infinity]\n * @returns {State}\n */\n\nexport function factorySpace(effects, ok, type, max) {\n  const limit = max ? max - 1 : Number.POSITIVE_INFINITY\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (markdownSpace(code)) {\n      effects.enter(type)\n      return prefix(code)\n    }\n\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function prefix(code) {\n    if (markdownSpace(code) && size++ < limit) {\n      effects.consume(code)\n      return prefix\n    }\n\n    effects.exit(type)\n    return ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {InitialConstruct} */\nexport const content = {\n  tokenize: initializeContent\n}\n/** @type {Initializer} */\n\nfunction initializeContent(effects) {\n  const contentStart = effects.attempt(\n    this.parser.constructs.contentInitial,\n    afterContentStartConstruct,\n    paragraphInitial\n  )\n  /** @type {Token} */\n\n  let previous\n  return contentStart\n  /** @type {State} */\n\n  function afterContentStartConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, contentStart, 'linePrefix')\n  }\n  /** @type {State} */\n\n  function paragraphInitial(code) {\n    effects.enter('paragraph')\n    return lineStart(code)\n  }\n  /** @type {State} */\n\n  function lineStart(code) {\n    const token = effects.enter('chunkText', {\n      contentType: 'text',\n      previous\n    })\n\n    if (previous) {\n      previous.next = token\n    }\n\n    previous = token\n    return data(code)\n  }\n  /** @type {State} */\n\n  function data(code) {\n    if (code === null) {\n      effects.exit('chunkText')\n      effects.exit('paragraph')\n      effects.consume(code)\n      return\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      effects.exit('chunkText')\n      return lineStart\n    } // Data.\n\n    effects.consume(code)\n    return data\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Point} Point\n */\n\n/**\n * @typedef {Record<string, unknown>} StackState\n * @typedef {[Construct, StackState]} StackItem\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {splice} from 'micromark-util-chunked'\n/** @type {InitialConstruct} */\n\nexport const document = {\n  tokenize: initializeDocument\n}\n/** @type {Construct} */\n\nconst containerConstruct = {\n  tokenize: tokenizeContainer\n}\n/** @type {Initializer} */\n\nfunction initializeDocument(effects) {\n  const self = this\n  /** @type {StackItem[]} */\n\n  const stack = []\n  let continued = 0\n  /** @type {TokenizeContext|undefined} */\n\n  let childFlow\n  /** @type {Token|undefined} */\n\n  let childToken\n  /** @type {number} */\n\n  let lineStartOffset\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    // First we iterate through the open blocks, starting with the root\n    // document, and descending through last children down to the last open\n    // block.\n    // Each block imposes a condition that the line must satisfy if the block is\n    // to remain open.\n    // For example, a block quote requires a `>` character.\n    // A paragraph requires a non-blank line.\n    // In this phase we may match all or just some of the open blocks.\n    // But we cannot close unmatched blocks yet, because we may have a lazy\n    // continuation line.\n    if (continued < stack.length) {\n      const item = stack[continued]\n      self.containerState = item[1]\n      return effects.attempt(\n        item[0].continuation,\n        documentContinue,\n        checkNewContainers\n      )(code)\n    } // Done.\n\n    return checkNewContainers(code)\n  }\n  /** @type {State} */\n\n  function documentContinue(code) {\n    continued++ // Note: this field is called `_closeFlow` but it also closes containers.\n    // Perhaps a good idea to rename it but it’s already used in the wild by\n    // extensions.\n\n    if (self.containerState._closeFlow) {\n      self.containerState._closeFlow = undefined\n\n      if (childFlow) {\n        closeFlow()\n      } // Note: this algorithm for moving events around is similar to the\n      // algorithm when dealing with lazy lines in `writeToChild`.\n\n      const indexBeforeExits = self.events.length\n      let indexBeforeFlow = indexBeforeExits\n      /** @type {Point|undefined} */\n\n      let point // Find the flow chunk.\n\n      while (indexBeforeFlow--) {\n        if (\n          self.events[indexBeforeFlow][0] === 'exit' &&\n          self.events[indexBeforeFlow][1].type === 'chunkFlow'\n        ) {\n          point = self.events[indexBeforeFlow][1].end\n          break\n        }\n      }\n\n      exitContainers(continued) // Fix positions.\n\n      let index = indexBeforeExits\n\n      while (index < self.events.length) {\n        self.events[index][1].end = Object.assign({}, point)\n        index++\n      } // Inject the exits earlier (they’re still also at the end).\n\n      splice(\n        self.events,\n        indexBeforeFlow + 1,\n        0,\n        self.events.slice(indexBeforeExits)\n      ) // Discard the duplicate exits.\n\n      self.events.length = index\n      return checkNewContainers(code)\n    }\n\n    return start(code)\n  }\n  /** @type {State} */\n\n  function checkNewContainers(code) {\n    // Next, after consuming the continuation markers for existing blocks, we\n    // look for new block starts (e.g. `>` for a block quote).\n    // If we encounter a new block start, we close any blocks unmatched in\n    // step 1 before creating the new block as a child of the last matched\n    // block.\n    if (continued === stack.length) {\n      // No need to `check` whether there’s a container, of `exitContainers`\n      // would be moot.\n      // We can instead immediately `attempt` to parse one.\n      if (!childFlow) {\n        return documentContinued(code)\n      } // If we have concrete content, such as block HTML or fenced code,\n      // we can’t have containers “pierce” into them, so we can immediately\n      // start.\n\n      if (childFlow.currentConstruct && childFlow.currentConstruct.concrete) {\n        return flowStart(code)\n      } // If we do have flow, it could still be a blank line,\n      // but we’d be interrupting it w/ a new container if there’s a current\n      // construct.\n\n      self.interrupt = Boolean(\n        childFlow.currentConstruct && !childFlow._gfmTableDynamicInterruptHack\n      )\n    } // Check if there is a new container.\n\n    self.containerState = {}\n    return effects.check(\n      containerConstruct,\n      thereIsANewContainer,\n      thereIsNoNewContainer\n    )(code)\n  }\n  /** @type {State} */\n\n  function thereIsANewContainer(code) {\n    if (childFlow) closeFlow()\n    exitContainers(continued)\n    return documentContinued(code)\n  }\n  /** @type {State} */\n\n  function thereIsNoNewContainer(code) {\n    self.parser.lazy[self.now().line] = continued !== stack.length\n    lineStartOffset = self.now().offset\n    return flowStart(code)\n  }\n  /** @type {State} */\n\n  function documentContinued(code) {\n    // Try new containers.\n    self.containerState = {}\n    return effects.attempt(\n      containerConstruct,\n      containerContinue,\n      flowStart\n    )(code)\n  }\n  /** @type {State} */\n\n  function containerContinue(code) {\n    continued++\n    stack.push([self.currentConstruct, self.containerState]) // Try another.\n\n    return documentContinued(code)\n  }\n  /** @type {State} */\n\n  function flowStart(code) {\n    if (code === null) {\n      if (childFlow) closeFlow()\n      exitContainers(0)\n      effects.consume(code)\n      return\n    }\n\n    childFlow = childFlow || self.parser.flow(self.now())\n    effects.enter('chunkFlow', {\n      contentType: 'flow',\n      previous: childToken,\n      _tokenizer: childFlow\n    })\n    return flowContinue(code)\n  }\n  /** @type {State} */\n\n  function flowContinue(code) {\n    if (code === null) {\n      writeToChild(effects.exit('chunkFlow'), true)\n      exitContainers(0)\n      effects.consume(code)\n      return\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      writeToChild(effects.exit('chunkFlow')) // Get ready for the next line.\n\n      continued = 0\n      self.interrupt = undefined\n      return start\n    }\n\n    effects.consume(code)\n    return flowContinue\n  }\n  /**\n   * @param {Token} token\n   * @param {boolean} [eof]\n   * @returns {void}\n   */\n\n  function writeToChild(token, eof) {\n    const stream = self.sliceStream(token)\n    if (eof) stream.push(null)\n    token.previous = childToken\n    if (childToken) childToken.next = token\n    childToken = token\n    childFlow.defineSkip(token.start)\n    childFlow.write(stream) // Alright, so we just added a lazy line:\n    //\n    // ```markdown\n    // > a\n    // b.\n    //\n    // Or:\n    //\n    // > ~~~c\n    // d\n    //\n    // Or:\n    //\n    // > | e |\n    // f\n    // ```\n    //\n    // The construct in the second example (fenced code) does not accept lazy\n    // lines, so it marked itself as done at the end of its first line, and\n    // then the content construct parses `d`.\n    // Most constructs in markdown match on the first line: if the first line\n    // forms a construct, a non-lazy line can’t “unmake” it.\n    //\n    // The construct in the third example is potentially a GFM table, and\n    // those are *weird*.\n    // It *could* be a table, from the first line, if the following line\n    // matches a condition.\n    // In this case, that second line is lazy, which “unmakes” the first line\n    // and turns the whole into one content block.\n    //\n    // We’ve now parsed the non-lazy and the lazy line, and can figure out\n    // whether the lazy line started a new flow block.\n    // If it did, we exit the current containers between the two flow blocks.\n\n    if (self.parser.lazy[token.start.line]) {\n      let index = childFlow.events.length\n\n      while (index--) {\n        if (\n          // The token starts before the line ending…\n          childFlow.events[index][1].start.offset < lineStartOffset && // …and either is not ended yet…\n          (!childFlow.events[index][1].end || // …or ends after it.\n            childFlow.events[index][1].end.offset > lineStartOffset)\n        ) {\n          // Exit: there’s still something open, which means it’s a lazy line\n          // part of something.\n          return\n        }\n      } // Note: this algorithm for moving events around is similar to the\n      // algorithm when closing flow in `documentContinue`.\n\n      const indexBeforeExits = self.events.length\n      let indexBeforeFlow = indexBeforeExits\n      /** @type {boolean|undefined} */\n\n      let seen\n      /** @type {Point|undefined} */\n\n      let point // Find the previous chunk (the one before the lazy line).\n\n      while (indexBeforeFlow--) {\n        if (\n          self.events[indexBeforeFlow][0] === 'exit' &&\n          self.events[indexBeforeFlow][1].type === 'chunkFlow'\n        ) {\n          if (seen) {\n            point = self.events[indexBeforeFlow][1].end\n            break\n          }\n\n          seen = true\n        }\n      }\n\n      exitContainers(continued) // Fix positions.\n\n      index = indexBeforeExits\n\n      while (index < self.events.length) {\n        self.events[index][1].end = Object.assign({}, point)\n        index++\n      } // Inject the exits earlier (they’re still also at the end).\n\n      splice(\n        self.events,\n        indexBeforeFlow + 1,\n        0,\n        self.events.slice(indexBeforeExits)\n      ) // Discard the duplicate exits.\n\n      self.events.length = index\n    }\n  }\n  /**\n   * @param {number} size\n   * @returns {void}\n   */\n\n  function exitContainers(size) {\n    let index = stack.length // Exit open containers.\n\n    while (index-- > size) {\n      const entry = stack[index]\n      self.containerState = entry[1]\n      entry[0].exit.call(self, effects)\n    }\n\n    stack.length = size\n  }\n\n  function closeFlow() {\n    childFlow.write([null])\n    childToken = undefined\n    childFlow = undefined\n    self.containerState._closeFlow = undefined\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeContainer(effects, ok, nok) {\n  return factorySpace(\n    effects,\n    effects.attempt(this.parser.constructs.document, ok, nok),\n    'linePrefix',\n    this.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4\n  )\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const blankLine = {\n  tokenize: tokenizeBlankLine,\n  partial: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeBlankLine(effects, ok, nok) {\n  return factorySpace(effects, afterWhitespace, 'linePrefix')\n  /** @type {State} */\n\n  function afterWhitespace(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Event} Event\n */\nimport {splice} from 'micromark-util-chunked'\n\n/**\n * Tokenize subcontent.\n *\n * @param {Event[]} events\n * @returns {boolean}\n */\nexport function subtokenize(events) {\n  /** @type {Record<string, number>} */\n  const jumps = {}\n  let index = -1\n  /** @type {Event} */\n\n  let event\n  /** @type {number|undefined} */\n\n  let lineIndex\n  /** @type {number} */\n\n  let otherIndex\n  /** @type {Event} */\n\n  let otherEvent\n  /** @type {Event[]} */\n\n  let parameters\n  /** @type {Event[]} */\n\n  let subevents\n  /** @type {boolean|undefined} */\n\n  let more\n\n  while (++index < events.length) {\n    while (index in jumps) {\n      index = jumps[index]\n    }\n\n    event = events[index] // Add a hook for the GFM tasklist extension, which needs to know if text\n    // is in the first content of a list item.\n\n    if (\n      index &&\n      event[1].type === 'chunkFlow' &&\n      events[index - 1][1].type === 'listItemPrefix'\n    ) {\n      subevents = event[1]._tokenizer.events\n      otherIndex = 0\n\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'lineEndingBlank'\n      ) {\n        otherIndex += 2\n      }\n\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'content'\n      ) {\n        while (++otherIndex < subevents.length) {\n          if (subevents[otherIndex][1].type === 'content') {\n            break\n          }\n\n          if (subevents[otherIndex][1].type === 'chunkText') {\n            subevents[otherIndex][1]._isInFirstContentOfListItem = true\n            otherIndex++\n          }\n        }\n      }\n    } // Enter.\n\n    if (event[0] === 'enter') {\n      if (event[1].contentType) {\n        Object.assign(jumps, subcontent(events, index))\n        index = jumps[index]\n        more = true\n      }\n    } // Exit.\n    else if (event[1]._container) {\n      otherIndex = index\n      lineIndex = undefined\n\n      while (otherIndex--) {\n        otherEvent = events[otherIndex]\n\n        if (\n          otherEvent[1].type === 'lineEnding' ||\n          otherEvent[1].type === 'lineEndingBlank'\n        ) {\n          if (otherEvent[0] === 'enter') {\n            if (lineIndex) {\n              events[lineIndex][1].type = 'lineEndingBlank'\n            }\n\n            otherEvent[1].type = 'lineEnding'\n            lineIndex = otherIndex\n          }\n        } else {\n          break\n        }\n      }\n\n      if (lineIndex) {\n        // Fix position.\n        event[1].end = Object.assign({}, events[lineIndex][1].start) // Switch container exit w/ line endings.\n\n        parameters = events.slice(lineIndex, index)\n        parameters.unshift(event)\n        splice(events, lineIndex, index - lineIndex + 1, parameters)\n      }\n    }\n  }\n\n  return !more\n}\n/**\n * Tokenize embedded tokens.\n *\n * @param {Event[]} events\n * @param {number} eventIndex\n * @returns {Record<string, number>}\n */\n\nfunction subcontent(events, eventIndex) {\n  const token = events[eventIndex][1]\n  const context = events[eventIndex][2]\n  let startPosition = eventIndex - 1\n  /** @type {number[]} */\n\n  const startPositions = []\n  const tokenizer =\n    token._tokenizer || context.parser[token.contentType](token.start)\n  const childEvents = tokenizer.events\n  /** @type {[number, number][]} */\n\n  const jumps = []\n  /** @type {Record<string, number>} */\n\n  const gaps = {}\n  /** @type {Chunk[]} */\n\n  let stream\n  /** @type {Token|undefined} */\n\n  let previous\n  let index = -1\n  /** @type {Token|undefined} */\n\n  let current = token\n  let adjust = 0\n  let start = 0\n  const breaks = [start] // Loop forward through the linked tokens to pass them in order to the\n  // subtokenizer.\n\n  while (current) {\n    // Find the position of the event for this token.\n    while (events[++startPosition][1] !== current) {\n      // Empty.\n    }\n\n    startPositions.push(startPosition)\n\n    if (!current._tokenizer) {\n      stream = context.sliceStream(current)\n\n      if (!current.next) {\n        stream.push(null)\n      }\n\n      if (previous) {\n        tokenizer.defineSkip(current.start)\n      }\n\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = true\n      }\n\n      tokenizer.write(stream)\n\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = undefined\n      }\n    } // Unravel the next token.\n\n    previous = current\n    current = current.next\n  } // Now, loop back through all events (and linked tokens), to figure out which\n  // parts belong where.\n\n  current = token\n\n  while (++index < childEvents.length) {\n    if (\n      // Find a void token that includes a break.\n      childEvents[index][0] === 'exit' &&\n      childEvents[index - 1][0] === 'enter' &&\n      childEvents[index][1].type === childEvents[index - 1][1].type &&\n      childEvents[index][1].start.line !== childEvents[index][1].end.line\n    ) {\n      start = index + 1\n      breaks.push(start) // Help GC.\n\n      current._tokenizer = undefined\n      current.previous = undefined\n      current = current.next\n    }\n  } // Help GC.\n\n  tokenizer.events = [] // If there’s one more token (which is the cases for lines that end in an\n  // EOF), that’s perfect: the last point we found starts it.\n  // If there isn’t then make sure any remaining content is added to it.\n\n  if (current) {\n    // Help GC.\n    current._tokenizer = undefined\n    current.previous = undefined\n  } else {\n    breaks.pop()\n  } // Now splice the events from the subtokenizer into the current events,\n  // moving back to front so that splice indices aren’t affected.\n\n  index = breaks.length\n\n  while (index--) {\n    const slice = childEvents.slice(breaks[index], breaks[index + 1])\n    const start = startPositions.pop()\n    jumps.unshift([start, start + slice.length - 1])\n    splice(events, start, 2, slice)\n  }\n\n  index = -1\n\n  while (++index < jumps.length) {\n    gaps[adjust + jumps[index][0]] = adjust + jumps[index][1]\n    adjust += jumps[index][1] - jumps[index][0] - 1\n  }\n\n  return gaps\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {subtokenize} from 'micromark-util-subtokenize'\n\n/**\n * No name because it must not be turned off.\n * @type {Construct}\n */\nexport const content = {\n  tokenize: tokenizeContent,\n  resolve: resolveContent\n}\n/** @type {Construct} */\n\nconst continuationConstruct = {\n  tokenize: tokenizeContinuation,\n  partial: true\n}\n/**\n * Content is transparent: it’s parsed right now. That way, definitions are also\n * parsed right now: before text in paragraphs (specifically, media) are parsed.\n *\n * @type {Resolver}\n */\n\nfunction resolveContent(events) {\n  subtokenize(events)\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeContent(effects, ok) {\n  /** @type {Token} */\n  let previous\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('content')\n    previous = effects.enter('chunkContent', {\n      contentType: 'content'\n    })\n    return data(code)\n  }\n  /** @type {State} */\n\n  function data(code) {\n    if (code === null) {\n      return contentEnd(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.check(\n        continuationConstruct,\n        contentContinue,\n        contentEnd\n      )(code)\n    } // Data.\n\n    effects.consume(code)\n    return data\n  }\n  /** @type {State} */\n\n  function contentEnd(code) {\n    effects.exit('chunkContent')\n    effects.exit('content')\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function contentContinue(code) {\n    effects.consume(code)\n    effects.exit('chunkContent')\n    previous.next = effects.enter('chunkContent', {\n      contentType: 'content',\n      previous\n    })\n    previous = previous.next\n    return data\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeContinuation(effects, ok, nok) {\n  const self = this\n  return startLookahead\n  /** @type {State} */\n\n  function startLookahead(code) {\n    effects.exit('chunkContent')\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, prefixed, 'linePrefix')\n  }\n  /** @type {State} */\n\n  function prefixed(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    const tail = self.events[self.events.length - 1]\n\n    if (\n      !self.parser.constructs.disable.null.includes('codeIndented') &&\n      tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n    ) {\n      return ok(code)\n    }\n\n    return effects.interrupt(self.parser.constructs.flow, nok, ok)(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {blankLine, content} from 'micromark-core-commonmark'\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {InitialConstruct} */\nexport const flow = {\n  tokenize: initializeFlow\n}\n/** @type {Initializer} */\n\nfunction initializeFlow(effects) {\n  const self = this\n  const initial = effects.attempt(\n    // Try to parse a blank line.\n    blankLine,\n    atBlankEnding, // Try to parse initial flow (essentially, only code).\n    effects.attempt(\n      this.parser.constructs.flowInitial,\n      afterConstruct,\n      factorySpace(\n        effects,\n        effects.attempt(\n          this.parser.constructs.flow,\n          afterConstruct,\n          effects.attempt(content, afterConstruct)\n        ),\n        'linePrefix'\n      )\n    )\n  )\n  return initial\n  /** @type {State} */\n\n  function atBlankEnding(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEndingBlank')\n    effects.consume(code)\n    effects.exit('lineEndingBlank')\n    self.currentConstruct = undefined\n    return initial\n  }\n  /** @type {State} */\n\n  function afterConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    self.currentConstruct = undefined\n    return initial\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nexport const resolver = {\n  resolveAll: createResolver()\n}\nexport const string = initializeFactory('string')\nexport const text = initializeFactory('text')\n/**\n * @param {'string'|'text'} field\n * @returns {InitialConstruct}\n */\n\nfunction initializeFactory(field) {\n  return {\n    tokenize: initializeText,\n    resolveAll: createResolver(\n      field === 'text' ? resolveAllLineSuffixes : undefined\n    )\n  }\n  /** @type {Initializer} */\n\n  function initializeText(effects) {\n    const self = this\n    const constructs = this.parser.constructs[field]\n    const text = effects.attempt(constructs, start, notText)\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      return atBreak(code) ? text(code) : notText(code)\n    }\n    /** @type {State} */\n\n    function notText(code) {\n      if (code === null) {\n        effects.consume(code)\n        return\n      }\n\n      effects.enter('data')\n      effects.consume(code)\n      return data\n    }\n    /** @type {State} */\n\n    function data(code) {\n      if (atBreak(code)) {\n        effects.exit('data')\n        return text(code)\n      } // Data.\n\n      effects.consume(code)\n      return data\n    }\n    /**\n     * @param {Code} code\n     * @returns {boolean}\n     */\n\n    function atBreak(code) {\n      if (code === null) {\n        return true\n      }\n\n      const list = constructs[code]\n      let index = -1\n\n      if (list) {\n        while (++index < list.length) {\n          const item = list[index]\n\n          if (!item.previous || item.previous.call(self, self.previous)) {\n            return true\n          }\n        }\n      }\n\n      return false\n    }\n  }\n}\n/**\n * @param {Resolver} [extraResolver]\n * @returns {Resolver}\n */\n\nfunction createResolver(extraResolver) {\n  return resolveAllText\n  /** @type {Resolver} */\n\n  function resolveAllText(events, context) {\n    let index = -1\n    /** @type {number|undefined} */\n\n    let enter // A rather boring computation (to merge adjacent `data` events) which\n    // improves mm performance by 29%.\n\n    while (++index <= events.length) {\n      if (enter === undefined) {\n        if (events[index] && events[index][1].type === 'data') {\n          enter = index\n          index++\n        }\n      } else if (!events[index] || events[index][1].type !== 'data') {\n        // Don’t do anything if there is one data token.\n        if (index !== enter + 2) {\n          events[enter][1].end = events[index - 1][1].end\n          events.splice(enter + 2, index - enter - 2)\n          index = enter + 2\n        }\n\n        enter = undefined\n      }\n    }\n\n    return extraResolver ? extraResolver(events, context) : events\n  }\n}\n/**\n * A rather ugly set of instructions which again looks at chunks in the input\n * stream.\n * The reason to do this here is that it is *much* faster to parse in reverse.\n * And that we can’t hook into `null` to split the line suffix before an EOF.\n * To do: figure out if we can make this into a clean utility, or even in core.\n * As it will be useful for GFMs literal autolink extension (and maybe even\n * tables?)\n *\n * @type {Resolver}\n */\n\nfunction resolveAllLineSuffixes(events, context) {\n  let eventIndex = 0 // Skip first.\n\n  while (++eventIndex <= events.length) {\n    if (\n      (eventIndex === events.length ||\n        events[eventIndex][1].type === 'lineEnding') &&\n      events[eventIndex - 1][1].type === 'data'\n    ) {\n      const data = events[eventIndex - 1][1]\n      const chunks = context.sliceStream(data)\n      let index = chunks.length\n      let bufferIndex = -1\n      let size = 0\n      /** @type {boolean|undefined} */\n\n      let tabs\n\n      while (index--) {\n        const chunk = chunks[index]\n\n        if (typeof chunk === 'string') {\n          bufferIndex = chunk.length\n\n          while (chunk.charCodeAt(bufferIndex - 1) === 32) {\n            size++\n            bufferIndex--\n          }\n\n          if (bufferIndex) break\n          bufferIndex = -1\n        } // Number\n        else if (chunk === -2) {\n          tabs = true\n          size++\n        } else if (chunk === -1) {\n          // Empty\n        } else {\n          // Replacement character, exit.\n          index++\n          break\n        }\n      }\n\n      if (size) {\n        const token = {\n          type:\n            eventIndex === events.length || tabs || size < 2\n              ? 'lineSuffix'\n              : 'hardBreakTrailing',\n          start: {\n            line: data.end.line,\n            column: data.end.column - size,\n            offset: data.end.offset - size,\n            _index: data.start._index + index,\n            _bufferIndex: index\n              ? bufferIndex\n              : data.start._bufferIndex + bufferIndex\n          },\n          end: Object.assign({}, data.end)\n        }\n        data.end = Object.assign({}, token.start)\n\n        if (data.start.offset === data.end.offset) {\n          Object.assign(data, token)\n        } else {\n          events.splice(\n            eventIndex,\n            0,\n            ['enter', token, context],\n            ['exit', token, context]\n          )\n          eventIndex += 2\n        }\n      }\n\n      eventIndex++\n    }\n  }\n\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Resolver} Resolver\n */\n\n/**\n * Call all `resolveAll`s.\n *\n * @param {{resolveAll?: Resolver}[]} constructs\n * @param {Event[]} events\n * @param {TokenizeContext} context\n * @returns {Event[]}\n */\nexport function resolveAll(constructs, events, context) {\n  /** @type {Resolver[]} */\n  const called = []\n  let index = -1\n\n  while (++index < constructs.length) {\n    const resolve = constructs[index].resolveAll\n\n    if (resolve && !called.includes(resolve)) {\n      events = resolve(events, context)\n      called.push(resolve)\n    }\n  }\n\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Point} Point\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').ConstructRecord} ConstructRecord\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\n */\n\n/**\n * @typedef Info\n * @property {() => void} restore\n * @property {number} from\n *\n * @callback ReturnHandle\n *   Handle a successful run.\n * @param {Construct} construct\n * @param {Info} info\n * @returns {void}\n */\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {push, splice} from 'micromark-util-chunked'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/**\n * Create a tokenizer.\n * Tokenizers deal with one type of data (e.g., containers, flow, text).\n * The parser is the object dealing with it all.\n * `initialize` works like other constructs, except that only its `tokenize`\n * function is used, in which case it doesn’t receive an `ok` or `nok`.\n * `from` can be given to set the point before the first character, although\n * when further lines are indented, they must be set with `defineSkip`.\n *\n * @param {ParseContext} parser\n * @param {InitialConstruct} initialize\n * @param {Omit<Point, '_index'|'_bufferIndex'>} [from]\n * @returns {TokenizeContext}\n */\nexport function createTokenizer(parser, initialize, from) {\n  /** @type {Point} */\n  let point = Object.assign(\n    from\n      ? Object.assign({}, from)\n      : {\n          line: 1,\n          column: 1,\n          offset: 0\n        },\n    {\n      _index: 0,\n      _bufferIndex: -1\n    }\n  )\n  /** @type {Record<string, number>} */\n\n  const columnStart = {}\n  /** @type {Construct[]} */\n\n  const resolveAllConstructs = []\n  /** @type {Chunk[]} */\n\n  let chunks = []\n  /** @type {Token[]} */\n\n  let stack = []\n  /** @type {boolean|undefined} */\n\n  let consumed = true\n  /**\n   * Tools used for tokenizing.\n   *\n   * @type {Effects}\n   */\n\n  const effects = {\n    consume,\n    enter,\n    exit,\n    attempt: constructFactory(onsuccessfulconstruct),\n    check: constructFactory(onsuccessfulcheck),\n    interrupt: constructFactory(onsuccessfulcheck, {\n      interrupt: true\n    })\n  }\n  /**\n   * State and tools for resolving and serializing.\n   *\n   * @type {TokenizeContext}\n   */\n\n  const context = {\n    previous: null,\n    code: null,\n    containerState: {},\n    events: [],\n    parser,\n    sliceStream,\n    sliceSerialize,\n    now,\n    defineSkip,\n    write\n  }\n  /**\n   * The state function.\n   *\n   * @type {State|void}\n   */\n\n  let state = initialize.tokenize.call(context, effects)\n  /**\n   * Track which character we expect to be consumed, to catch bugs.\n   *\n   * @type {Code}\n   */\n\n  let expectedCode\n\n  if (initialize.resolveAll) {\n    resolveAllConstructs.push(initialize)\n  }\n\n  return context\n  /** @type {TokenizeContext['write']} */\n\n  function write(slice) {\n    chunks = push(chunks, slice)\n    main() // Exit if we’re not done, resolve might change stuff.\n\n    if (chunks[chunks.length - 1] !== null) {\n      return []\n    }\n\n    addResult(initialize, 0) // Otherwise, resolve, and exit.\n\n    context.events = resolveAll(resolveAllConstructs, context.events, context)\n    return context.events\n  } //\n  // Tools.\n  //\n\n  /** @type {TokenizeContext['sliceSerialize']} */\n\n  function sliceSerialize(token, expandTabs) {\n    return serializeChunks(sliceStream(token), expandTabs)\n  }\n  /** @type {TokenizeContext['sliceStream']} */\n\n  function sliceStream(token) {\n    return sliceChunks(chunks, token)\n  }\n  /** @type {TokenizeContext['now']} */\n\n  function now() {\n    return Object.assign({}, point)\n  }\n  /** @type {TokenizeContext['defineSkip']} */\n\n  function defineSkip(value) {\n    columnStart[value.line] = value.column\n    accountForPotentialSkip()\n  } //\n  // State management.\n  //\n\n  /**\n   * Main loop (note that `_index` and `_bufferIndex` in `point` are modified by\n   * `consume`).\n   * Here is where we walk through the chunks, which either include strings of\n   * several characters, or numerical character codes.\n   * The reason to do this in a loop instead of a call is so the stack can\n   * drain.\n   *\n   * @returns {void}\n   */\n\n  function main() {\n    /** @type {number} */\n    let chunkIndex\n\n    while (point._index < chunks.length) {\n      const chunk = chunks[point._index] // If we’re in a buffer chunk, loop through it.\n\n      if (typeof chunk === 'string') {\n        chunkIndex = point._index\n\n        if (point._bufferIndex < 0) {\n          point._bufferIndex = 0\n        }\n\n        while (\n          point._index === chunkIndex &&\n          point._bufferIndex < chunk.length\n        ) {\n          go(chunk.charCodeAt(point._bufferIndex))\n        }\n      } else {\n        go(chunk)\n      }\n    }\n  }\n  /**\n   * Deal with one code.\n   *\n   * @param {Code} code\n   * @returns {void}\n   */\n\n  function go(code) {\n    consumed = undefined\n    expectedCode = code\n    state = state(code)\n  }\n  /** @type {Effects['consume']} */\n\n  function consume(code) {\n    if (markdownLineEnding(code)) {\n      point.line++\n      point.column = 1\n      point.offset += code === -3 ? 2 : 1\n      accountForPotentialSkip()\n    } else if (code !== -1) {\n      point.column++\n      point.offset++\n    } // Not in a string chunk.\n\n    if (point._bufferIndex < 0) {\n      point._index++\n    } else {\n      point._bufferIndex++ // At end of string chunk.\n      // @ts-expect-error Points w/ non-negative `_bufferIndex` reference\n      // strings.\n\n      if (point._bufferIndex === chunks[point._index].length) {\n        point._bufferIndex = -1\n        point._index++\n      }\n    } // Expose the previous character.\n\n    context.previous = code // Mark as consumed.\n\n    consumed = true\n  }\n  /** @type {Effects['enter']} */\n\n  function enter(type, fields) {\n    /** @type {Token} */\n    // @ts-expect-error Patch instead of assign required fields to help GC.\n    const token = fields || {}\n    token.type = type\n    token.start = now()\n    context.events.push(['enter', token, context])\n    stack.push(token)\n    return token\n  }\n  /** @type {Effects['exit']} */\n\n  function exit(type) {\n    const token = stack.pop()\n    token.end = now()\n    context.events.push(['exit', token, context])\n    return token\n  }\n  /**\n   * Use results.\n   *\n   * @type {ReturnHandle}\n   */\n\n  function onsuccessfulconstruct(construct, info) {\n    addResult(construct, info.from)\n  }\n  /**\n   * Discard results.\n   *\n   * @type {ReturnHandle}\n   */\n\n  function onsuccessfulcheck(_, info) {\n    info.restore()\n  }\n  /**\n   * Factory to attempt/check/interrupt.\n   *\n   * @param {ReturnHandle} onreturn\n   * @param {Record<string, unknown>} [fields]\n   */\n\n  function constructFactory(onreturn, fields) {\n    return hook\n    /**\n     * Handle either an object mapping codes to constructs, a list of\n     * constructs, or a single construct.\n     *\n     * @param {Construct|Construct[]|ConstructRecord} constructs\n     * @param {State} returnState\n     * @param {State} [bogusState]\n     * @returns {State}\n     */\n\n    function hook(constructs, returnState, bogusState) {\n      /** @type {Construct[]} */\n      let listOfConstructs\n      /** @type {number} */\n\n      let constructIndex\n      /** @type {Construct} */\n\n      let currentConstruct\n      /** @type {Info} */\n\n      let info\n      return Array.isArray(constructs)\n        ? /* c8 ignore next 1 */\n          handleListOfConstructs(constructs)\n        : 'tokenize' in constructs // @ts-expect-error Looks like a construct.\n        ? handleListOfConstructs([constructs])\n        : handleMapOfConstructs(constructs)\n      /**\n       * Handle a list of construct.\n       *\n       * @param {ConstructRecord} map\n       * @returns {State}\n       */\n\n      function handleMapOfConstructs(map) {\n        return start\n        /** @type {State} */\n\n        function start(code) {\n          const def = code !== null && map[code]\n          const all = code !== null && map.null\n          const list = [\n            // To do: add more extension tests.\n\n            /* c8 ignore next 2 */\n            ...(Array.isArray(def) ? def : def ? [def] : []),\n            ...(Array.isArray(all) ? all : all ? [all] : [])\n          ]\n          return handleListOfConstructs(list)(code)\n        }\n      }\n      /**\n       * Handle a list of construct.\n       *\n       * @param {Construct[]} list\n       * @returns {State}\n       */\n\n      function handleListOfConstructs(list) {\n        listOfConstructs = list\n        constructIndex = 0\n\n        if (list.length === 0) {\n          return bogusState\n        }\n\n        return handleConstruct(list[constructIndex])\n      }\n      /**\n       * Handle a single construct.\n       *\n       * @param {Construct} construct\n       * @returns {State}\n       */\n\n      function handleConstruct(construct) {\n        return start\n        /** @type {State} */\n\n        function start(code) {\n          // To do: not needed to store if there is no bogus state, probably?\n          // Currently doesn’t work because `inspect` in document does a check\n          // w/o a bogus, which doesn’t make sense. But it does seem to help perf\n          // by not storing.\n          info = store()\n          currentConstruct = construct\n\n          if (!construct.partial) {\n            context.currentConstruct = construct\n          }\n\n          if (\n            construct.name &&\n            context.parser.constructs.disable.null.includes(construct.name)\n          ) {\n            return nok(code)\n          }\n\n          return construct.tokenize.call(\n            // If we do have fields, create an object w/ `context` as its\n            // prototype.\n            // This allows a “live binding”, which is needed for `interrupt`.\n            fields ? Object.assign(Object.create(context), fields) : context,\n            effects,\n            ok,\n            nok\n          )(code)\n        }\n      }\n      /** @type {State} */\n\n      function ok(code) {\n        consumed = true\n        onreturn(currentConstruct, info)\n        return returnState\n      }\n      /** @type {State} */\n\n      function nok(code) {\n        consumed = true\n        info.restore()\n\n        if (++constructIndex < listOfConstructs.length) {\n          return handleConstruct(listOfConstructs[constructIndex])\n        }\n\n        return bogusState\n      }\n    }\n  }\n  /**\n   * @param {Construct} construct\n   * @param {number} from\n   * @returns {void}\n   */\n\n  function addResult(construct, from) {\n    if (construct.resolveAll && !resolveAllConstructs.includes(construct)) {\n      resolveAllConstructs.push(construct)\n    }\n\n    if (construct.resolve) {\n      splice(\n        context.events,\n        from,\n        context.events.length - from,\n        construct.resolve(context.events.slice(from), context)\n      )\n    }\n\n    if (construct.resolveTo) {\n      context.events = construct.resolveTo(context.events, context)\n    }\n  }\n  /**\n   * Store state.\n   *\n   * @returns {Info}\n   */\n\n  function store() {\n    const startPoint = now()\n    const startPrevious = context.previous\n    const startCurrentConstruct = context.currentConstruct\n    const startEventsIndex = context.events.length\n    const startStack = Array.from(stack)\n    return {\n      restore,\n      from: startEventsIndex\n    }\n    /**\n     * Restore state.\n     *\n     * @returns {void}\n     */\n\n    function restore() {\n      point = startPoint\n      context.previous = startPrevious\n      context.currentConstruct = startCurrentConstruct\n      context.events.length = startEventsIndex\n      stack = startStack\n      accountForPotentialSkip()\n    }\n  }\n  /**\n   * Move the current point a bit forward in the line when it’s on a column\n   * skip.\n   *\n   * @returns {void}\n   */\n\n  function accountForPotentialSkip() {\n    if (point.line in columnStart && point.column < 2) {\n      point.column = columnStart[point.line]\n      point.offset += columnStart[point.line] - 1\n    }\n  }\n}\n/**\n * Get the chunks from a slice of chunks in the range of a token.\n *\n * @param {Chunk[]} chunks\n * @param {Pick<Token, 'start'|'end'>} token\n * @returns {Chunk[]}\n */\n\nfunction sliceChunks(chunks, token) {\n  const startIndex = token.start._index\n  const startBufferIndex = token.start._bufferIndex\n  const endIndex = token.end._index\n  const endBufferIndex = token.end._bufferIndex\n  /** @type {Chunk[]} */\n\n  let view\n\n  if (startIndex === endIndex) {\n    // @ts-expect-error `_bufferIndex` is used on string chunks.\n    view = [chunks[startIndex].slice(startBufferIndex, endBufferIndex)]\n  } else {\n    view = chunks.slice(startIndex, endIndex)\n\n    if (startBufferIndex > -1) {\n      // @ts-expect-error `_bufferIndex` is used on string chunks.\n      view[0] = view[0].slice(startBufferIndex)\n    }\n\n    if (endBufferIndex > 0) {\n      // @ts-expect-error `_bufferIndex` is used on string chunks.\n      view.push(chunks[endIndex].slice(0, endBufferIndex))\n    }\n  }\n\n  return view\n}\n/**\n * Get the string value of a slice of chunks.\n *\n * @param {Chunk[]} chunks\n * @param {boolean} [expandTabs=false]\n * @returns {string}\n */\n\nfunction serializeChunks(chunks, expandTabs) {\n  let index = -1\n  /** @type {string[]} */\n\n  const result = []\n  /** @type {boolean|undefined} */\n\n  let atTab\n\n  while (++index < chunks.length) {\n    const chunk = chunks[index]\n    /** @type {string} */\n\n    let value\n\n    if (typeof chunk === 'string') {\n      value = chunk\n    } else\n      switch (chunk) {\n        case -5: {\n          value = '\\r'\n          break\n        }\n\n        case -4: {\n          value = '\\n'\n          break\n        }\n\n        case -3: {\n          value = '\\r' + '\\n'\n          break\n        }\n\n        case -2: {\n          value = expandTabs ? ' ' : '\\t'\n          break\n        }\n\n        case -1: {\n          if (!expandTabs && atTab) continue\n          value = ' '\n          break\n        }\n\n        default: {\n          // Currently only replacement character.\n          value = String.fromCharCode(chunk)\n        }\n      }\n\n    atTab = chunk === -2\n    result.push(value)\n  }\n\n  return result.join('')\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const thematicBreak = {\n  name: 'thematicBreak',\n  tokenize: tokenizeThematicBreak\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeThematicBreak(effects, ok, nok) {\n  let size = 0\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('thematicBreak')\n    marker = code\n    return atBreak(code)\n  }\n  /** @type {State} */\n\n  function atBreak(code) {\n    if (code === marker) {\n      effects.enter('thematicBreakSequence')\n      return sequence(code)\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(effects, atBreak, 'whitespace')(code)\n    }\n\n    if (size < 3 || (code !== null && !markdownLineEnding(code))) {\n      return nok(code)\n    }\n\n    effects.exit('thematicBreak')\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function sequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      size++\n      return sequence\n    }\n\n    effects.exit('thematicBreakSequence')\n    return atBreak(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\n\n/**\n * @typedef {Record<string, unknown> & {marker: Code, type: string, size: number}} ListContainerState\n * @typedef {TokenizeContext & {containerState: ListContainerState}} TokenizeContextWithState\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {asciiDigit, markdownSpace} from 'micromark-util-character'\nimport {blankLine} from './blank-line.js'\nimport {thematicBreak} from './thematic-break.js'\n/** @type {Construct} */\n\nexport const list = {\n  name: 'list',\n  tokenize: tokenizeListStart,\n  continuation: {\n    tokenize: tokenizeListContinuation\n  },\n  exit: tokenizeListEnd\n}\n/** @type {Construct} */\n\nconst listItemPrefixWhitespaceConstruct = {\n  tokenize: tokenizeListItemPrefixWhitespace,\n  partial: true\n}\n/** @type {Construct} */\n\nconst indentConstruct = {\n  tokenize: tokenizeIndent,\n  partial: true\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListStart(effects, ok, nok) {\n  const self = this\n  const tail = self.events[self.events.length - 1]\n  let initialSize =\n    tail && tail[1].type === 'linePrefix'\n      ? tail[2].sliceSerialize(tail[1], true).length\n      : 0\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    const kind =\n      self.containerState.type ||\n      (code === 42 || code === 43 || code === 45\n        ? 'listUnordered'\n        : 'listOrdered')\n\n    if (\n      kind === 'listUnordered'\n        ? !self.containerState.marker || code === self.containerState.marker\n        : asciiDigit(code)\n    ) {\n      if (!self.containerState.type) {\n        self.containerState.type = kind\n        effects.enter(kind, {\n          _container: true\n        })\n      }\n\n      if (kind === 'listUnordered') {\n        effects.enter('listItemPrefix')\n        return code === 42 || code === 45\n          ? effects.check(thematicBreak, nok, atMarker)(code)\n          : atMarker(code)\n      }\n\n      if (!self.interrupt || code === 49) {\n        effects.enter('listItemPrefix')\n        effects.enter('listItemValue')\n        return inside(code)\n      }\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function inside(code) {\n    if (asciiDigit(code) && ++size < 10) {\n      effects.consume(code)\n      return inside\n    }\n\n    if (\n      (!self.interrupt || size < 2) &&\n      (self.containerState.marker\n        ? code === self.containerState.marker\n        : code === 41 || code === 46)\n    ) {\n      effects.exit('listItemValue')\n      return atMarker(code)\n    }\n\n    return nok(code)\n  }\n  /**\n   * @type {State}\n   **/\n\n  function atMarker(code) {\n    effects.enter('listItemMarker')\n    effects.consume(code)\n    effects.exit('listItemMarker')\n    self.containerState.marker = self.containerState.marker || code\n    return effects.check(\n      blankLine, // Can’t be empty when interrupting.\n      self.interrupt ? nok : onBlank,\n      effects.attempt(\n        listItemPrefixWhitespaceConstruct,\n        endOfPrefix,\n        otherPrefix\n      )\n    )\n  }\n  /** @type {State} */\n\n  function onBlank(code) {\n    self.containerState.initialBlankLine = true\n    initialSize++\n    return endOfPrefix(code)\n  }\n  /** @type {State} */\n\n  function otherPrefix(code) {\n    if (markdownSpace(code)) {\n      effects.enter('listItemPrefixWhitespace')\n      effects.consume(code)\n      effects.exit('listItemPrefixWhitespace')\n      return endOfPrefix\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function endOfPrefix(code) {\n    self.containerState.size =\n      initialSize +\n      self.sliceSerialize(effects.exit('listItemPrefix'), true).length\n    return ok(code)\n  }\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListContinuation(effects, ok, nok) {\n  const self = this\n  self.containerState._closeFlow = undefined\n  return effects.check(blankLine, onBlank, notBlank)\n  /** @type {State} */\n\n  function onBlank(code) {\n    self.containerState.furtherBlankLines =\n      self.containerState.furtherBlankLines ||\n      self.containerState.initialBlankLine // We have a blank line.\n    // Still, try to consume at most the items size.\n\n    return factorySpace(\n      effects,\n      ok,\n      'listItemIndent',\n      self.containerState.size + 1\n    )(code)\n  }\n  /** @type {State} */\n\n  function notBlank(code) {\n    if (self.containerState.furtherBlankLines || !markdownSpace(code)) {\n      self.containerState.furtherBlankLines = undefined\n      self.containerState.initialBlankLine = undefined\n      return notInCurrentItem(code)\n    }\n\n    self.containerState.furtherBlankLines = undefined\n    self.containerState.initialBlankLine = undefined\n    return effects.attempt(indentConstruct, ok, notInCurrentItem)(code)\n  }\n  /** @type {State} */\n\n  function notInCurrentItem(code) {\n    // While we do continue, we signal that the flow should be closed.\n    self.containerState._closeFlow = true // As we’re closing flow, we’re no longer interrupting.\n\n    self.interrupt = undefined\n    return factorySpace(\n      effects,\n      effects.attempt(list, ok, nok),\n      'linePrefix',\n      self.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )(code)\n  }\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeIndent(effects, ok, nok) {\n  const self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemIndent',\n    self.containerState.size + 1\n  )\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'listItemIndent' &&\n      tail[2].sliceSerialize(tail[1], true).length === self.containerState.size\n      ? ok(code)\n      : nok(code)\n  }\n}\n/**\n * @type {Exiter}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListEnd(effects) {\n  effects.exit(this.containerState.type)\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListItemPrefixWhitespace(effects, ok, nok) {\n  const self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemPrefixWhitespace',\n    self.parser.constructs.disable.null.includes('codeIndented')\n      ? undefined\n      : 4 + 1\n  )\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return !markdownSpace(code) &&\n      tail &&\n      tail[1].type === 'listItemPrefixWhitespace'\n      ? ok(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownSpace} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const blockQuote = {\n  name: 'blockQuote',\n  tokenize: tokenizeBlockQuoteStart,\n  continuation: {\n    tokenize: tokenizeBlockQuoteContinuation\n  },\n  exit\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeBlockQuoteStart(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (code === 62) {\n      const state = self.containerState\n\n      if (!state.open) {\n        effects.enter('blockQuote', {\n          _container: true\n        })\n        state.open = true\n      }\n\n      effects.enter('blockQuotePrefix')\n      effects.enter('blockQuoteMarker')\n      effects.consume(code)\n      effects.exit('blockQuoteMarker')\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    if (markdownSpace(code)) {\n      effects.enter('blockQuotePrefixWhitespace')\n      effects.consume(code)\n      effects.exit('blockQuotePrefixWhitespace')\n      effects.exit('blockQuotePrefix')\n      return ok\n    }\n\n    effects.exit('blockQuotePrefix')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeBlockQuoteContinuation(effects, ok, nok) {\n  return factorySpace(\n    effects,\n    effects.attempt(blockQuote, ok, nok),\n    'linePrefix',\n    this.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4\n  )\n}\n/** @type {Exiter} */\n\nfunction exit(effects) {\n  effects.exit('blockQuote')\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\nimport {\n  asciiControl,\n  markdownLineEndingOrSpace,\n  markdownLineEnding\n} from 'micromark-util-character'\n\n/**\n * @param {Effects} effects\n * @param {State} ok\n * @param {State} nok\n * @param {string} type\n * @param {string} literalType\n * @param {string} literalMarkerType\n * @param {string} rawType\n * @param {string} stringType\n * @param {number} [max=Infinity]\n * @returns {State}\n */\n// eslint-disable-next-line max-params\nexport function factoryDestination(\n  effects,\n  ok,\n  nok,\n  type,\n  literalType,\n  literalMarkerType,\n  rawType,\n  stringType,\n  max\n) {\n  const limit = max || Number.POSITIVE_INFINITY\n  let balance = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (code === 60) {\n      effects.enter(type)\n      effects.enter(literalType)\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      return destinationEnclosedBefore\n    }\n\n    if (code === null || code === 41 || asciiControl(code)) {\n      return nok(code)\n    }\n\n    effects.enter(type)\n    effects.enter(rawType)\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return destinationRaw(code)\n  }\n  /** @type {State} */\n\n  function destinationEnclosedBefore(code) {\n    if (code === 62) {\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      effects.exit(literalType)\n      effects.exit(type)\n      return ok\n    }\n\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return destinationEnclosed(code)\n  }\n  /** @type {State} */\n\n  function destinationEnclosed(code) {\n    if (code === 62) {\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      return destinationEnclosedBefore(code)\n    }\n\n    if (code === null || code === 60 || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? destinationEnclosedEscape : destinationEnclosed\n  }\n  /** @type {State} */\n\n  function destinationEnclosedEscape(code) {\n    if (code === 60 || code === 62 || code === 92) {\n      effects.consume(code)\n      return destinationEnclosed\n    }\n\n    return destinationEnclosed(code)\n  }\n  /** @type {State} */\n\n  function destinationRaw(code) {\n    if (code === 40) {\n      if (++balance > limit) return nok(code)\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    if (code === 41) {\n      if (!balance--) {\n        effects.exit('chunkString')\n        effects.exit(stringType)\n        effects.exit(rawType)\n        effects.exit(type)\n        return ok(code)\n      }\n\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      if (balance) return nok(code)\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      effects.exit(rawType)\n      effects.exit(type)\n      return ok(code)\n    }\n\n    if (asciiControl(code)) return nok(code)\n    effects.consume(code)\n    return code === 92 ? destinationRawEscape : destinationRaw\n  }\n  /** @type {State} */\n\n  function destinationRawEscape(code) {\n    if (code === 40 || code === 41 || code === 92) {\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    return destinationRaw(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n\n/**\n * @this {TokenizeContext}\n * @param {Effects} effects\n * @param {State} ok\n * @param {State} nok\n * @param {string} type\n * @param {string} markerType\n * @param {string} stringType\n * @returns {State}\n */\n// eslint-disable-next-line max-params\nexport function factoryLabel(effects, ok, nok, type, markerType, stringType) {\n  const self = this\n  let size = 0\n  /** @type {boolean} */\n\n  let data\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    effects.enter(stringType)\n    return atBreak\n  }\n  /** @type {State} */\n\n  function atBreak(code) {\n    if (\n      code === null ||\n      code === 91 ||\n      (code === 93 && !data) ||\n      /* To do: remove in the future once we’ve switched from\n       * `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n       * which doesn’t need this */\n\n      /* Hidden footnotes hook */\n\n      /* c8 ignore next 3 */\n      (code === 94 &&\n        !size &&\n        '_hiddenFootnoteSupport' in self.parser.constructs) ||\n      size > 999\n    ) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      effects.exit(stringType)\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return atBreak\n    }\n\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return label(code)\n  }\n  /** @type {State} */\n\n  function label(code) {\n    if (\n      code === null ||\n      code === 91 ||\n      code === 93 ||\n      markdownLineEnding(code) ||\n      size++ > 999\n    ) {\n      effects.exit('chunkString')\n      return atBreak(code)\n    }\n\n    effects.consume(code)\n    data = data || !markdownSpace(code)\n    return code === 92 ? labelEscape : label\n  }\n  /** @type {State} */\n\n  function labelEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code)\n      size++\n      return label\n    }\n\n    return label(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/**\n * @param {Effects} effects\n * @param {State} ok\n * @param {State} nok\n * @param {string} type\n * @param {string} markerType\n * @param {string} stringType\n * @returns {State}\n */\n// eslint-disable-next-line max-params\nexport function factoryTitle(effects, ok, nok, type, markerType, stringType) {\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    marker = code === 40 ? 41 : code\n    return atFirstTitleBreak\n  }\n  /** @type {State} */\n\n  function atFirstTitleBreak(code) {\n    if (code === marker) {\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    effects.enter(stringType)\n    return atTitleBreak(code)\n  }\n  /** @type {State} */\n\n  function atTitleBreak(code) {\n    if (code === marker) {\n      effects.exit(stringType)\n      return atFirstTitleBreak(marker)\n    }\n\n    if (code === null) {\n      return nok(code)\n    } // Note: blank lines can’t exist in content.\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return factorySpace(effects, atTitleBreak, 'linePrefix')\n    }\n\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return title(code)\n  }\n  /** @type {State} */\n\n  function title(code) {\n    if (code === marker || code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      return atTitleBreak(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? titleEscape : title\n  }\n  /** @type {State} */\n\n  function titleEscape(code) {\n    if (code === marker || code === 92) {\n      effects.consume(code)\n      return title\n    }\n\n    return title(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n\n/**\n * @param {Effects} effects\n * @param {State} ok\n */\nexport function factoryWhitespace(effects, ok) {\n  /** @type {boolean} */\n  let seen\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      seen = true\n      return start\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(\n        effects,\n        start,\n        seen ? 'linePrefix' : 'lineSuffix'\n      )(code)\n    }\n\n    return ok(code)\n  }\n}\n","/**\n * Normalize an identifier (such as used in definitions).\n *\n * @param {string} value\n * @returns {string}\n */\nexport function normalizeIdentifier(value) {\n  return (\n    value // Collapse Markdown whitespace.\n      .replace(/[\\t\\n\\r ]+/g, ' ') // Trim.\n      .replace(/^ | $/g, '') // Some characters are considered “uppercase”, but if their lowercase\n      // counterpart is uppercased will result in a different uppercase\n      // character.\n      // Hence, to get that form, we perform both lower- and uppercase.\n      // Upper case makes sure keys will not interact with default prototypal\n      // methods: no method is uppercase.\n      .toLowerCase()\n      .toUpperCase()\n  )\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factoryDestination} from 'micromark-factory-destination'\nimport {factoryLabel} from 'micromark-factory-label'\nimport {factorySpace} from 'micromark-factory-space'\nimport {factoryTitle} from 'micromark-factory-title'\nimport {factoryWhitespace} from 'micromark-factory-whitespace'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const definition = {\n  name: 'definition',\n  tokenize: tokenizeDefinition\n}\n/** @type {Construct} */\n\nconst titleConstruct = {\n  tokenize: tokenizeTitle,\n  partial: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeDefinition(effects, ok, nok) {\n  const self = this\n  /** @type {string} */\n\n  let identifier\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('definition')\n    return factoryLabel.call(\n      self,\n      effects,\n      labelAfter,\n      nok,\n      'definitionLabel',\n      'definitionLabelMarker',\n      'definitionLabelString'\n    )(code)\n  }\n  /** @type {State} */\n\n  function labelAfter(code) {\n    identifier = normalizeIdentifier(\n      self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n    )\n\n    if (code === 58) {\n      effects.enter('definitionMarker')\n      effects.consume(code)\n      effects.exit('definitionMarker') // Note: blank lines can’t exist in content.\n\n      return factoryWhitespace(\n        effects,\n        factoryDestination(\n          effects,\n          effects.attempt(\n            titleConstruct,\n            factorySpace(effects, after, 'whitespace'),\n            factorySpace(effects, after, 'whitespace')\n          ),\n          nok,\n          'definitionDestination',\n          'definitionDestinationLiteral',\n          'definitionDestinationLiteralMarker',\n          'definitionDestinationRaw',\n          'definitionDestinationString'\n        )\n      )\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('definition')\n\n      if (!self.parser.defined.includes(identifier)) {\n        self.parser.defined.push(identifier)\n      }\n\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeTitle(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, before)(code)\n      : nok(code)\n  }\n  /** @type {State} */\n\n  function before(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(\n        effects,\n        factorySpace(effects, after, 'whitespace'),\n        nok,\n        'definitionTitle',\n        'definitionTitleMarker',\n        'definitionTitleString'\n      )(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const codeIndented = {\n  name: 'codeIndented',\n  tokenize: tokenizeCodeIndented\n}\n/** @type {Construct} */\n\nconst indentedContent = {\n  tokenize: tokenizeIndentedContent,\n  partial: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCodeIndented(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('codeIndented')\n    return factorySpace(effects, afterStartPrefix, 'linePrefix', 4 + 1)(code)\n  }\n  /** @type {State} */\n\n  function afterStartPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n      ? afterPrefix(code)\n      : nok(code)\n  }\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    if (code === null) {\n      return after(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(indentedContent, afterPrefix, after)(code)\n    }\n\n    effects.enter('codeFlowValue')\n    return content(code)\n  }\n  /** @type {State} */\n\n  function content(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return afterPrefix(code)\n    }\n\n    effects.consume(code)\n    return content\n  }\n  /** @type {State} */\n\n  function after(code) {\n    effects.exit('codeIndented')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeIndentedContent(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    // If this is a lazy line, it can’t be code.\n    if (self.parser.lazy[self.now().line]) {\n      return nok(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return start\n    }\n\n    return factorySpace(effects, afterPrefix, 'linePrefix', 4 + 1)(code)\n  }\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n      ? ok(code)\n      : markdownLineEnding(code)\n      ? start(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {splice} from 'micromark-util-chunked'\n\n/** @type {Construct} */\nexport const headingAtx = {\n  name: 'headingAtx',\n  tokenize: tokenizeHeadingAtx,\n  resolve: resolveHeadingAtx\n}\n/** @type {Resolver} */\n\nfunction resolveHeadingAtx(events, context) {\n  let contentEnd = events.length - 2\n  let contentStart = 3\n  /** @type {Token} */\n\n  let content\n  /** @type {Token} */\n\n  let text // Prefix whitespace, part of the opening.\n\n  if (events[contentStart][1].type === 'whitespace') {\n    contentStart += 2\n  } // Suffix whitespace, part of the closing.\n\n  if (\n    contentEnd - 2 > contentStart &&\n    events[contentEnd][1].type === 'whitespace'\n  ) {\n    contentEnd -= 2\n  }\n\n  if (\n    events[contentEnd][1].type === 'atxHeadingSequence' &&\n    (contentStart === contentEnd - 1 ||\n      (contentEnd - 4 > contentStart &&\n        events[contentEnd - 2][1].type === 'whitespace'))\n  ) {\n    contentEnd -= contentStart + 1 === contentEnd ? 2 : 4\n  }\n\n  if (contentEnd > contentStart) {\n    content = {\n      type: 'atxHeadingText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end\n    }\n    text = {\n      type: 'chunkText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end,\n      // @ts-expect-error Constants are fine to assign.\n      contentType: 'text'\n    }\n    splice(events, contentStart, contentEnd - contentStart + 1, [\n      ['enter', content, context],\n      ['enter', text, context],\n      ['exit', text, context],\n      ['exit', content, context]\n    ])\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHeadingAtx(effects, ok, nok) {\n  const self = this\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('atxHeading')\n    effects.enter('atxHeadingSequence')\n    return fenceOpenInside(code)\n  }\n  /** @type {State} */\n\n  function fenceOpenInside(code) {\n    if (code === 35 && size++ < 6) {\n      effects.consume(code)\n      return fenceOpenInside\n    }\n\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingSequence')\n      return self.interrupt ? ok(code) : headingBreak(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function headingBreak(code) {\n    if (code === 35) {\n      effects.enter('atxHeadingSequence')\n      return sequence(code)\n    }\n\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('atxHeading')\n      return ok(code)\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(effects, headingBreak, 'whitespace')(code)\n    }\n\n    effects.enter('atxHeadingText')\n    return data(code)\n  }\n  /** @type {State} */\n\n  function sequence(code) {\n    if (code === 35) {\n      effects.consume(code)\n      return sequence\n    }\n\n    effects.exit('atxHeadingSequence')\n    return headingBreak(code)\n  }\n  /** @type {State} */\n\n  function data(code) {\n    if (code === null || code === 35 || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingText')\n      return headingBreak(code)\n    }\n\n    effects.consume(code)\n    return data\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const setextUnderline = {\n  name: 'setextUnderline',\n  tokenize: tokenizeSetextUnderline,\n  resolveTo: resolveToSetextUnderline\n}\n/** @type {Resolver} */\n\nfunction resolveToSetextUnderline(events, context) {\n  let index = events.length\n  /** @type {number|undefined} */\n\n  let content\n  /** @type {number|undefined} */\n\n  let text\n  /** @type {number|undefined} */\n\n  let definition // Find the opening of the content.\n  // It’ll always exist: we don’t tokenize if it isn’t there.\n\n  while (index--) {\n    if (events[index][0] === 'enter') {\n      if (events[index][1].type === 'content') {\n        content = index\n        break\n      }\n\n      if (events[index][1].type === 'paragraph') {\n        text = index\n      }\n    } // Exit\n    else {\n      if (events[index][1].type === 'content') {\n        // Remove the content end (if needed we’ll add it later)\n        events.splice(index, 1)\n      }\n\n      if (!definition && events[index][1].type === 'definition') {\n        definition = index\n      }\n    }\n  }\n\n  const heading = {\n    type: 'setextHeading',\n    start: Object.assign({}, events[text][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  } // Change the paragraph to setext heading text.\n\n  events[text][1].type = 'setextHeadingText' // If we have definitions in the content, we’ll keep on having content,\n  // but we need move it.\n\n  if (definition) {\n    events.splice(text, 0, ['enter', heading, context])\n    events.splice(definition + 1, 0, ['exit', events[content][1], context])\n    events[content][1].end = Object.assign({}, events[definition][1].end)\n  } else {\n    events[content][1] = heading\n  } // Add the heading exit at the end.\n\n  events.push(['exit', heading, context])\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeSetextUnderline(effects, ok, nok) {\n  const self = this\n  let index = self.events.length\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  /** @type {boolean} */\n\n  let paragraph // Find an opening.\n\n  while (index--) {\n    // Skip enter/exit of line ending, line prefix, and content.\n    // We can now either have a definition or a paragraph.\n    if (\n      self.events[index][1].type !== 'lineEnding' &&\n      self.events[index][1].type !== 'linePrefix' &&\n      self.events[index][1].type !== 'content'\n    ) {\n      paragraph = self.events[index][1].type === 'paragraph'\n      break\n    }\n  }\n\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (!self.parser.lazy[self.now().line] && (self.interrupt || paragraph)) {\n      effects.enter('setextHeadingLine')\n      effects.enter('setextHeadingLineSequence')\n      marker = code\n      return closingSequence(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function closingSequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return closingSequence\n    }\n\n    effects.exit('setextHeadingLineSequence')\n    return factorySpace(effects, closingSequenceEnd, 'lineSuffix')(code)\n  }\n  /** @type {State} */\n\n  function closingSequenceEnd(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('setextHeadingLine')\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * List of lowercase HTML tag names which when parsing HTML (flow), result\n * in more relaxed rules (condition 6): because they are known blocks, the\n * HTML-like syntax doesn’t have to be strictly parsed.\n * For tag names not in this list, a more strict algorithm (condition 7) is used\n * to detect whether the HTML-like syntax is seen as HTML (flow) or not.\n *\n * This is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n */\nexport const htmlBlockNames = [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'section',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n]\n\n/**\n * List of lowercase HTML tag names which when parsing HTML (flow), result in\n * HTML that can include lines w/o exiting, until a closing tag also in this\n * list is found (condition 1).\n *\n * This module is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n *\n * Note that `textarea` was added in `CommonMark@0.30`.\n */\nexport const htmlRawNames = ['pre', 'script', 'style', 'textarea']\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {htmlBlockNames, htmlRawNames} from 'micromark-util-html-tag-name'\nimport {blankLine} from './blank-line.js'\n/** @type {Construct} */\n\nexport const htmlFlow = {\n  name: 'htmlFlow',\n  tokenize: tokenizeHtmlFlow,\n  resolveTo: resolveToHtmlFlow,\n  concrete: true\n}\n/** @type {Construct} */\n\nconst nextBlankConstruct = {\n  tokenize: tokenizeNextBlank,\n  partial: true\n}\n/** @type {Resolver} */\n\nfunction resolveToHtmlFlow(events) {\n  let index = events.length\n\n  while (index--) {\n    if (events[index][0] === 'enter' && events[index][1].type === 'htmlFlow') {\n      break\n    }\n  }\n\n  if (index > 1 && events[index - 2][1].type === 'linePrefix') {\n    // Add the prefix start to the HTML token.\n    events[index][1].start = events[index - 2][1].start // Add the prefix start to the HTML line token.\n\n    events[index + 1][1].start = events[index - 2][1].start // Remove the line prefix.\n\n    events.splice(index - 2, 2)\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHtmlFlow(effects, ok, nok) {\n  const self = this\n  /** @type {number} */\n\n  let kind\n  /** @type {boolean} */\n\n  let startTag\n  /** @type {string} */\n\n  let buffer\n  /** @type {number} */\n\n  let index\n  /** @type {Code} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('htmlFlow')\n    effects.enter('htmlFlowData')\n    effects.consume(code)\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationStart\n    }\n\n    if (code === 47) {\n      effects.consume(code)\n      return tagCloseStart\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      kind = 3 // While we’re in an instruction instead of a declaration, we’re on a `?`\n      // right now, so we do need to search for `>`, similar to declarations.\n\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      buffer = String.fromCharCode(code)\n      startTag = true\n      return tagName\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function declarationStart(code) {\n    if (code === 45) {\n      effects.consume(code)\n      kind = 2\n      return commentOpenInside\n    }\n\n    if (code === 91) {\n      effects.consume(code)\n      kind = 5\n      buffer = 'CDATA['\n      index = 0\n      return cdataOpenInside\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      kind = 4\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function commentOpenInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function cdataOpenInside(code) {\n    if (code === buffer.charCodeAt(index++)) {\n      effects.consume(code)\n      return index === buffer.length\n        ? self.interrupt\n          ? ok\n          : continuation\n        : cdataOpenInside\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      buffer = String.fromCharCode(code)\n      return tagName\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagName(code) {\n    if (\n      code === null ||\n      code === 47 ||\n      code === 62 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      if (\n        code !== 47 &&\n        startTag &&\n        htmlRawNames.includes(buffer.toLowerCase())\n      ) {\n        kind = 1\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n\n      if (htmlBlockNames.includes(buffer.toLowerCase())) {\n        kind = 6\n\n        if (code === 47) {\n          effects.consume(code)\n          return basicSelfClosing\n        }\n\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n\n      kind = 7 // Do not support complete HTML when interrupting\n\n      return self.interrupt && !self.parser.lazy[self.now().line]\n        ? nok(code)\n        : startTag\n        ? completeAttributeNameBefore(code)\n        : completeClosingTagAfter(code)\n    }\n\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      buffer += String.fromCharCode(code)\n      return tagName\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function basicSelfClosing(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return self.interrupt ? ok : continuation\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function completeClosingTagAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeClosingTagAfter\n    }\n\n    return completeEnd(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeNameBefore(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return completeEnd\n    }\n\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameBefore\n    }\n\n    return completeEnd(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeName(code) {\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n\n    return completeAttributeNameAfter(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameAfter\n    }\n\n    return completeAttributeNameBefore(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      marker = code\n      return completeAttributeValueQuoted\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n\n    marker = null\n    return completeAttributeValueUnquoted(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeValueQuoted(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    if (code === marker) {\n      effects.consume(code)\n      return completeAttributeValueQuotedAfter\n    }\n\n    effects.consume(code)\n    return completeAttributeValueQuoted\n  }\n  /** @type {State} */\n\n  function completeAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      return completeAttributeNameAfter(code)\n    }\n\n    effects.consume(code)\n    return completeAttributeValueUnquoted\n  }\n  /** @type {State} */\n\n  function completeAttributeValueQuotedAfter(code) {\n    if (code === 47 || code === 62 || markdownSpace(code)) {\n      return completeAttributeNameBefore(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function completeEnd(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return completeAfter\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function completeAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAfter\n    }\n\n    return code === null || markdownLineEnding(code)\n      ? continuation(code)\n      : nok(code)\n  }\n  /** @type {State} */\n\n  function continuation(code) {\n    if (code === 45 && kind === 2) {\n      effects.consume(code)\n      return continuationCommentInside\n    }\n\n    if (code === 60 && kind === 1) {\n      effects.consume(code)\n      return continuationRawTagOpen\n    }\n\n    if (code === 62 && kind === 4) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    if (code === 63 && kind === 3) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    if (code === 93 && kind === 5) {\n      effects.consume(code)\n      return continuationCharacterDataInside\n    }\n\n    if (markdownLineEnding(code) && (kind === 6 || kind === 7)) {\n      return effects.check(\n        nextBlankConstruct,\n        continuationClose,\n        continuationAtLineEnding\n      )(code)\n    }\n\n    if (code === null || markdownLineEnding(code)) {\n      return continuationAtLineEnding(code)\n    }\n\n    effects.consume(code)\n    return continuation\n  }\n  /** @type {State} */\n\n  function continuationAtLineEnding(code) {\n    effects.exit('htmlFlowData')\n    return htmlContinueStart(code)\n  }\n  /** @type {State} */\n\n  function htmlContinueStart(code) {\n    if (code === null) {\n      return done(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(\n        {\n          tokenize: htmlLineEnd,\n          partial: true\n        },\n        htmlContinueStart,\n        done\n      )(code)\n    }\n\n    effects.enter('htmlFlowData')\n    return continuation(code)\n  }\n  /** @type {Tokenizer} */\n\n  function htmlLineEnd(effects, ok, nok) {\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return lineStart\n    }\n    /** @type {State} */\n\n    function lineStart(code) {\n      return self.parser.lazy[self.now().line] ? nok(code) : ok(code)\n    }\n  }\n  /** @type {State} */\n\n  function continuationCommentInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationRawTagOpen(code) {\n    if (code === 47) {\n      effects.consume(code)\n      buffer = ''\n      return continuationRawEndTag\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationRawEndTag(code) {\n    if (code === 62 && htmlRawNames.includes(buffer.toLowerCase())) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    if (asciiAlpha(code) && buffer.length < 8) {\n      effects.consume(code)\n      buffer += String.fromCharCode(code)\n      return continuationRawEndTag\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationCharacterDataInside(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationDeclarationInside(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return continuationClose\n    } // More dashes.\n\n    if (code === 45 && kind === 2) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationClose(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('htmlFlowData')\n      return done(code)\n    }\n\n    effects.consume(code)\n    return continuationClose\n  }\n  /** @type {State} */\n\n  function done(code) {\n    effects.exit('htmlFlow')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeNextBlank(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.exit('htmlFlowData')\n    effects.enter('lineEndingBlank')\n    effects.consume(code)\n    effects.exit('lineEndingBlank')\n    return effects.attempt(blankLine, ok, nok)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const codeFenced = {\n  name: 'codeFenced',\n  tokenize: tokenizeCodeFenced,\n  concrete: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCodeFenced(effects, ok, nok) {\n  const self = this\n  /** @type {Construct} */\n\n  const closingFenceConstruct = {\n    tokenize: tokenizeClosingFence,\n    partial: true\n  }\n  /** @type {Construct} */\n\n  const nonLazyLine = {\n    tokenize: tokenizeNonLazyLine,\n    partial: true\n  }\n  const tail = this.events[this.events.length - 1]\n  const initialPrefix =\n    tail && tail[1].type === 'linePrefix'\n      ? tail[2].sliceSerialize(tail[1], true).length\n      : 0\n  let sizeOpen = 0\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('codeFenced')\n    effects.enter('codeFencedFence')\n    effects.enter('codeFencedFenceSequence')\n    marker = code\n    return sequenceOpen(code)\n  }\n  /** @type {State} */\n\n  function sequenceOpen(code) {\n    if (code === marker) {\n      effects.consume(code)\n      sizeOpen++\n      return sequenceOpen\n    }\n\n    effects.exit('codeFencedFenceSequence')\n    return sizeOpen < 3\n      ? nok(code)\n      : factorySpace(effects, infoOpen, 'whitespace')(code)\n  }\n  /** @type {State} */\n\n  function infoOpen(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return openAfter(code)\n    }\n\n    effects.enter('codeFencedFenceInfo')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return info(code)\n  }\n  /** @type {State} */\n\n  function info(code) {\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceInfo')\n      return factorySpace(effects, infoAfter, 'whitespace')(code)\n    }\n\n    if (code === 96 && code === marker) return nok(code)\n    effects.consume(code)\n    return info\n  }\n  /** @type {State} */\n\n  function infoAfter(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return openAfter(code)\n    }\n\n    effects.enter('codeFencedFenceMeta')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return meta(code)\n  }\n  /** @type {State} */\n\n  function meta(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceMeta')\n      return openAfter(code)\n    }\n\n    if (code === 96 && code === marker) return nok(code)\n    effects.consume(code)\n    return meta\n  }\n  /** @type {State} */\n\n  function openAfter(code) {\n    effects.exit('codeFencedFence')\n    return self.interrupt ? ok(code) : contentStart(code)\n  }\n  /** @type {State} */\n\n  function contentStart(code) {\n    if (code === null) {\n      return after(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(\n        nonLazyLine,\n        effects.attempt(\n          closingFenceConstruct,\n          after,\n          initialPrefix\n            ? factorySpace(\n                effects,\n                contentStart,\n                'linePrefix',\n                initialPrefix + 1\n              )\n            : contentStart\n        ),\n        after\n      )(code)\n    }\n\n    effects.enter('codeFlowValue')\n    return contentContinue(code)\n  }\n  /** @type {State} */\n\n  function contentContinue(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return contentStart(code)\n    }\n\n    effects.consume(code)\n    return contentContinue\n  }\n  /** @type {State} */\n\n  function after(code) {\n    effects.exit('codeFenced')\n    return ok(code)\n  }\n  /** @type {Tokenizer} */\n\n  function tokenizeNonLazyLine(effects, ok, nok) {\n    const self = this\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return lineStart\n    }\n    /** @type {State} */\n\n    function lineStart(code) {\n      return self.parser.lazy[self.now().line] ? nok(code) : ok(code)\n    }\n  }\n  /** @type {Tokenizer} */\n\n  function tokenizeClosingFence(effects, ok, nok) {\n    let size = 0\n    return factorySpace(\n      effects,\n      closingSequenceStart,\n      'linePrefix',\n      this.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )\n    /** @type {State} */\n\n    function closingSequenceStart(code) {\n      effects.enter('codeFencedFence')\n      effects.enter('codeFencedFenceSequence')\n      return closingSequence(code)\n    }\n    /** @type {State} */\n\n    function closingSequence(code) {\n      if (code === marker) {\n        effects.consume(code)\n        size++\n        return closingSequence\n      }\n\n      if (size < sizeOpen) return nok(code)\n      effects.exit('codeFencedFenceSequence')\n      return factorySpace(effects, closingSequenceEnd, 'whitespace')(code)\n    }\n    /** @type {State} */\n\n    function closingSequenceEnd(code) {\n      if (code === null || markdownLineEnding(code)) {\n        effects.exit('codeFencedFence')\n        return ok(code)\n      }\n\n      return nok(code)\n    }\n  }\n}\n","/// <reference lib=\"dom\" />\n\n/* eslint-env browser */\n\nconst element = document.createElement('i')\n\n/**\n * @param {string} value\n * @returns {string|false}\n */\nexport function decodeNamedCharacterReference(value) {\n  const characterReference = '&' + value + ';'\n  element.innerHTML = characterReference\n  const char = element.textContent\n\n  // Some named character references do not require the closing semicolon\n  // (`&not`, for instance), which leads to situations where parsing the assumed\n  // named reference of `&notit;` will result in the string `¬it;`.\n  // When we encounter a trailing semicolon after parsing, and the character\n  // reference to decode was not a semicolon (`&semi;`), we can assume that the\n  // matching was not complete.\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n  // yield `null`.\n  if (char.charCodeAt(char.length - 1) === 59 /* `;` */ && value !== 'semi') {\n    return false\n  }\n\n  // If the decoded string is equal to the input, the character reference was\n  // not valid.\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n  // yield `null`.\n  return char === characterReference ? false : char\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {\n  asciiAlphanumeric,\n  asciiDigit,\n  asciiHexDigit\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const characterReference = {\n  name: 'characterReference',\n  tokenize: tokenizeCharacterReference\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCharacterReference(effects, ok, nok) {\n  const self = this\n  let size = 0\n  /** @type {number} */\n\n  let max\n  /** @type {(code: Code) => code is number} */\n\n  let test\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('characterReference')\n    effects.enter('characterReferenceMarker')\n    effects.consume(code)\n    effects.exit('characterReferenceMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 35) {\n      effects.enter('characterReferenceMarkerNumeric')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerNumeric')\n      return numeric\n    }\n\n    effects.enter('characterReferenceValue')\n    max = 31\n    test = asciiAlphanumeric\n    return value(code)\n  }\n  /** @type {State} */\n\n  function numeric(code) {\n    if (code === 88 || code === 120) {\n      effects.enter('characterReferenceMarkerHexadecimal')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerHexadecimal')\n      effects.enter('characterReferenceValue')\n      max = 6\n      test = asciiHexDigit\n      return value\n    }\n\n    effects.enter('characterReferenceValue')\n    max = 7\n    test = asciiDigit\n    return value(code)\n  }\n  /** @type {State} */\n\n  function value(code) {\n    /** @type {Token} */\n    let token\n\n    if (code === 59 && size) {\n      token = effects.exit('characterReferenceValue')\n\n      if (\n        test === asciiAlphanumeric &&\n        !decodeNamedCharacterReference(self.sliceSerialize(token))\n      ) {\n        return nok(code)\n      }\n\n      effects.enter('characterReferenceMarker')\n      effects.consume(code)\n      effects.exit('characterReferenceMarker')\n      effects.exit('characterReference')\n      return ok\n    }\n\n    if (test(code) && size++ < max) {\n      effects.consume(code)\n      return value\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {asciiPunctuation} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const characterEscape = {\n  name: 'characterEscape',\n  tokenize: tokenizeCharacterEscape\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCharacterEscape(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('characterEscape')\n    effects.enter('escapeMarker')\n    effects.consume(code)\n    effects.exit('escapeMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (asciiPunctuation(code)) {\n      effects.enter('characterEscapeValue')\n      effects.consume(code)\n      effects.exit('characterEscapeValue')\n      effects.exit('characterEscape')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const lineEnding = {\n  name: 'lineEnding',\n  tokenize: tokenizeLineEnding\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLineEnding(effects, ok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, ok, 'linePrefix')\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factoryDestination} from 'micromark-factory-destination'\nimport {factoryLabel} from 'micromark-factory-label'\nimport {factoryTitle} from 'micromark-factory-title'\nimport {factoryWhitespace} from 'micromark-factory-whitespace'\nimport {markdownLineEndingOrSpace} from 'micromark-util-character'\nimport {push, splice} from 'micromark-util-chunked'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/** @type {Construct} */\nexport const labelEnd = {\n  name: 'labelEnd',\n  tokenize: tokenizeLabelEnd,\n  resolveTo: resolveToLabelEnd,\n  resolveAll: resolveAllLabelEnd\n}\n/** @type {Construct} */\n\nconst resourceConstruct = {\n  tokenize: tokenizeResource\n}\n/** @type {Construct} */\n\nconst fullReferenceConstruct = {\n  tokenize: tokenizeFullReference\n}\n/** @type {Construct} */\n\nconst collapsedReferenceConstruct = {\n  tokenize: tokenizeCollapsedReference\n}\n/** @type {Resolver} */\n\nfunction resolveAllLabelEnd(events) {\n  let index = -1\n  /** @type {Token} */\n\n  let token\n\n  while (++index < events.length) {\n    token = events[index][1]\n\n    if (\n      token.type === 'labelImage' ||\n      token.type === 'labelLink' ||\n      token.type === 'labelEnd'\n    ) {\n      // Remove the marker.\n      events.splice(index + 1, token.type === 'labelImage' ? 4 : 2)\n      token.type = 'data'\n      index++\n    }\n  }\n\n  return events\n}\n/** @type {Resolver} */\n\nfunction resolveToLabelEnd(events, context) {\n  let index = events.length\n  let offset = 0\n  /** @type {Token} */\n\n  let token\n  /** @type {number|undefined} */\n\n  let open\n  /** @type {number|undefined} */\n\n  let close\n  /** @type {Event[]} */\n\n  let media // Find an opening.\n\n  while (index--) {\n    token = events[index][1]\n\n    if (open) {\n      // If we see another link, or inactive link label, we’ve been here before.\n      if (\n        token.type === 'link' ||\n        (token.type === 'labelLink' && token._inactive)\n      ) {\n        break\n      } // Mark other link openings as inactive, as we can’t have links in\n      // links.\n\n      if (events[index][0] === 'enter' && token.type === 'labelLink') {\n        token._inactive = true\n      }\n    } else if (close) {\n      if (\n        events[index][0] === 'enter' &&\n        (token.type === 'labelImage' || token.type === 'labelLink') &&\n        !token._balanced\n      ) {\n        open = index\n\n        if (token.type !== 'labelLink') {\n          offset = 2\n          break\n        }\n      }\n    } else if (token.type === 'labelEnd') {\n      close = index\n    }\n  }\n\n  const group = {\n    type: events[open][1].type === 'labelLink' ? 'link' : 'image',\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  }\n  const label = {\n    type: 'label',\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[close][1].end)\n  }\n  const text = {\n    type: 'labelText',\n    start: Object.assign({}, events[open + offset + 2][1].end),\n    end: Object.assign({}, events[close - 2][1].start)\n  }\n  media = [\n    ['enter', group, context],\n    ['enter', label, context]\n  ] // Opening marker.\n\n  media = push(media, events.slice(open + 1, open + offset + 3)) // Text open.\n\n  media = push(media, [['enter', text, context]]) // Between.\n\n  media = push(\n    media,\n    resolveAll(\n      context.parser.constructs.insideSpan.null,\n      events.slice(open + offset + 4, close - 3),\n      context\n    )\n  ) // Text close, marker close, label close.\n\n  media = push(media, [\n    ['exit', text, context],\n    events[close - 2],\n    events[close - 1],\n    ['exit', label, context]\n  ]) // Reference, resource, or so.\n\n  media = push(media, events.slice(close + 1)) // Media close.\n\n  media = push(media, [['exit', group, context]])\n  splice(events, open, events.length, media)\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLabelEnd(effects, ok, nok) {\n  const self = this\n  let index = self.events.length\n  /** @type {Token} */\n\n  let labelStart\n  /** @type {boolean} */\n\n  let defined // Find an opening.\n\n  while (index--) {\n    if (\n      (self.events[index][1].type === 'labelImage' ||\n        self.events[index][1].type === 'labelLink') &&\n      !self.events[index][1]._balanced\n    ) {\n      labelStart = self.events[index][1]\n      break\n    }\n  }\n\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (!labelStart) {\n      return nok(code)\n    } // It’s a balanced bracket, but contains a link.\n\n    if (labelStart._inactive) return balanced(code)\n    defined = self.parser.defined.includes(\n      normalizeIdentifier(\n        self.sliceSerialize({\n          start: labelStart.end,\n          end: self.now()\n        })\n      )\n    )\n    effects.enter('labelEnd')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelEnd')\n    return afterLabelEnd\n  }\n  /** @type {State} */\n\n  function afterLabelEnd(code) {\n    // Resource: `[asd](fgh)`.\n    if (code === 40) {\n      return effects.attempt(\n        resourceConstruct,\n        ok,\n        defined ? ok : balanced\n      )(code)\n    } // Collapsed (`[asd][]`) or full (`[asd][fgh]`) reference?\n\n    if (code === 91) {\n      return effects.attempt(\n        fullReferenceConstruct,\n        ok,\n        defined\n          ? effects.attempt(collapsedReferenceConstruct, ok, balanced)\n          : balanced\n      )(code)\n    } // Shortcut reference: `[asd]`?\n\n    return defined ? ok(code) : balanced(code)\n  }\n  /** @type {State} */\n\n  function balanced(code) {\n    labelStart._balanced = true\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeResource(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('resource')\n    effects.enter('resourceMarker')\n    effects.consume(code)\n    effects.exit('resourceMarker')\n    return factoryWhitespace(effects, open)\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 41) {\n      return end(code)\n    }\n\n    return factoryDestination(\n      effects,\n      destinationAfter,\n      nok,\n      'resourceDestination',\n      'resourceDestinationLiteral',\n      'resourceDestinationLiteralMarker',\n      'resourceDestinationRaw',\n      'resourceDestinationString',\n      32\n    )(code)\n  }\n  /** @type {State} */\n\n  function destinationAfter(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, between)(code)\n      : end(code)\n  }\n  /** @type {State} */\n\n  function between(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(\n        effects,\n        factoryWhitespace(effects, end),\n        nok,\n        'resourceTitle',\n        'resourceTitleMarker',\n        'resourceTitleString'\n      )(code)\n    }\n\n    return end(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    if (code === 41) {\n      effects.enter('resourceMarker')\n      effects.consume(code)\n      effects.exit('resourceMarker')\n      effects.exit('resource')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeFullReference(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    return factoryLabel.call(\n      self,\n      effects,\n      afterLabel,\n      nok,\n      'reference',\n      'referenceMarker',\n      'referenceString'\n    )(code)\n  }\n  /** @type {State} */\n\n  function afterLabel(code) {\n    return self.parser.defined.includes(\n      normalizeIdentifier(\n        self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n      )\n    )\n      ? ok(code)\n      : nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCollapsedReference(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('reference')\n    effects.enter('referenceMarker')\n    effects.consume(code)\n    effects.exit('referenceMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 93) {\n      effects.enter('referenceMarker')\n      effects.consume(code)\n      effects.exit('referenceMarker')\n      effects.exit('reference')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {labelEnd} from './label-end.js'\n/** @type {Construct} */\n\nexport const labelStartImage = {\n  name: 'labelStartImage',\n  tokenize: tokenizeLabelStartImage,\n  resolveAll: labelEnd.resolveAll\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLabelStartImage(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('labelImage')\n    effects.enter('labelImageMarker')\n    effects.consume(code)\n    effects.exit('labelImageMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 91) {\n      effects.enter('labelMarker')\n      effects.consume(code)\n      effects.exit('labelMarker')\n      effects.exit('labelImage')\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    /* To do: remove in the future once we’ve switched from\n     * `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n     * which doesn’t need this */\n\n    /* Hidden footnotes hook */\n\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs\n      ? nok(code)\n      : ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {\n  markdownLineEndingOrSpace,\n  unicodePunctuation,\n  unicodeWhitespace\n} from 'micromark-util-character'\n\n/**\n * Classify whether a character code represents whitespace, punctuation, or\n * something else.\n *\n * Used for attention (emphasis, strong), whose sequences can open or close\n * based on the class of surrounding characters.\n *\n * Note that eof (`null`) is seen as whitespace.\n *\n * @param {Code} code\n * @returns {number|undefined}\n */\nexport function classifyCharacter(code) {\n  if (\n    code === null ||\n    markdownLineEndingOrSpace(code) ||\n    unicodeWhitespace(code)\n  ) {\n    return 1\n  }\n\n  if (unicodePunctuation(code)) {\n    return 2\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Point} Point\n */\nimport {push, splice} from 'micromark-util-chunked'\nimport {classifyCharacter} from 'micromark-util-classify-character'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/** @type {Construct} */\nexport const attention = {\n  name: 'attention',\n  tokenize: tokenizeAttention,\n  resolveAll: resolveAllAttention\n}\n/**\n * Take all events and resolve attention to emphasis or strong.\n *\n * @type {Resolver}\n */\n\nfunction resolveAllAttention(events, context) {\n  let index = -1\n  /** @type {number} */\n\n  let open\n  /** @type {Token} */\n\n  let group\n  /** @type {Token} */\n\n  let text\n  /** @type {Token} */\n\n  let openingSequence\n  /** @type {Token} */\n\n  let closingSequence\n  /** @type {number} */\n\n  let use\n  /** @type {Event[]} */\n\n  let nextEvents\n  /** @type {number} */\n\n  let offset // Walk through all events.\n  //\n  // Note: performance of this is fine on an mb of normal markdown, but it’s\n  // a bottleneck for malicious stuff.\n\n  while (++index < events.length) {\n    // Find a token that can close.\n    if (\n      events[index][0] === 'enter' &&\n      events[index][1].type === 'attentionSequence' &&\n      events[index][1]._close\n    ) {\n      open = index // Now walk back to find an opener.\n\n      while (open--) {\n        // Find a token that can open the closer.\n        if (\n          events[open][0] === 'exit' &&\n          events[open][1].type === 'attentionSequence' &&\n          events[open][1]._open && // If the markers are the same:\n          context.sliceSerialize(events[open][1]).charCodeAt(0) ===\n            context.sliceSerialize(events[index][1]).charCodeAt(0)\n        ) {\n          // If the opening can close or the closing can open,\n          // and the close size *is not* a multiple of three,\n          // but the sum of the opening and closing size *is* multiple of three,\n          // then don’t match.\n          if (\n            (events[open][1]._close || events[index][1]._open) &&\n            (events[index][1].end.offset - events[index][1].start.offset) % 3 &&\n            !(\n              (events[open][1].end.offset -\n                events[open][1].start.offset +\n                events[index][1].end.offset -\n                events[index][1].start.offset) %\n              3\n            )\n          ) {\n            continue\n          } // Number of markers to use from the sequence.\n\n          use =\n            events[open][1].end.offset - events[open][1].start.offset > 1 &&\n            events[index][1].end.offset - events[index][1].start.offset > 1\n              ? 2\n              : 1\n          const start = Object.assign({}, events[open][1].end)\n          const end = Object.assign({}, events[index][1].start)\n          movePoint(start, -use)\n          movePoint(end, use)\n          openingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start,\n            end: Object.assign({}, events[open][1].end)\n          }\n          closingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start: Object.assign({}, events[index][1].start),\n            end\n          }\n          text = {\n            type: use > 1 ? 'strongText' : 'emphasisText',\n            start: Object.assign({}, events[open][1].end),\n            end: Object.assign({}, events[index][1].start)\n          }\n          group = {\n            type: use > 1 ? 'strong' : 'emphasis',\n            start: Object.assign({}, openingSequence.start),\n            end: Object.assign({}, closingSequence.end)\n          }\n          events[open][1].end = Object.assign({}, openingSequence.start)\n          events[index][1].start = Object.assign({}, closingSequence.end)\n          nextEvents = [] // If there are more markers in the opening, add them before.\n\n          if (events[open][1].end.offset - events[open][1].start.offset) {\n            nextEvents = push(nextEvents, [\n              ['enter', events[open][1], context],\n              ['exit', events[open][1], context]\n            ])\n          } // Opening.\n\n          nextEvents = push(nextEvents, [\n            ['enter', group, context],\n            ['enter', openingSequence, context],\n            ['exit', openingSequence, context],\n            ['enter', text, context]\n          ]) // Between.\n\n          nextEvents = push(\n            nextEvents,\n            resolveAll(\n              context.parser.constructs.insideSpan.null,\n              events.slice(open + 1, index),\n              context\n            )\n          ) // Closing.\n\n          nextEvents = push(nextEvents, [\n            ['exit', text, context],\n            ['enter', closingSequence, context],\n            ['exit', closingSequence, context],\n            ['exit', group, context]\n          ]) // If there are more markers in the closing, add them after.\n\n          if (events[index][1].end.offset - events[index][1].start.offset) {\n            offset = 2\n            nextEvents = push(nextEvents, [\n              ['enter', events[index][1], context],\n              ['exit', events[index][1], context]\n            ])\n          } else {\n            offset = 0\n          }\n\n          splice(events, open - 1, index - open + 3, nextEvents)\n          index = open + nextEvents.length - offset - 2\n          break\n        }\n      }\n    }\n  } // Remove remaining sequences.\n\n  index = -1\n\n  while (++index < events.length) {\n    if (events[index][1].type === 'attentionSequence') {\n      events[index][1].type = 'data'\n    }\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeAttention(effects, ok) {\n  const attentionMarkers = this.parser.constructs.attentionMarkers.null\n  const previous = this.previous\n  const before = classifyCharacter(previous)\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('attentionSequence')\n    marker = code\n    return sequence(code)\n  }\n  /** @type {State} */\n\n  function sequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return sequence\n    }\n\n    const token = effects.exit('attentionSequence')\n    const after = classifyCharacter(code)\n    const open =\n      !after || (after === 2 && before) || attentionMarkers.includes(code)\n    const close =\n      !before || (before === 2 && after) || attentionMarkers.includes(previous)\n    token._open = Boolean(marker === 42 ? open : open && (before || !close))\n    token._close = Boolean(marker === 42 ? close : close && (after || !open))\n    return ok(code)\n  }\n}\n/**\n * Move a point a bit.\n *\n * Note: `move` only works inside lines! It’s not possible to move past other\n * chunks (replacement characters, tabs, or line endings).\n *\n * @param {Point} point\n * @param {number} offset\n * @returns {void}\n */\n\nfunction movePoint(point, offset) {\n  point.column += offset\n  point.offset += offset\n  point._bufferIndex += offset\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  asciiAtext,\n  asciiControl\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const autolink = {\n  name: 'autolink',\n  tokenize: tokenizeAutolink\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeAutolink(effects, ok, nok) {\n  let size = 1\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('autolink')\n    effects.enter('autolinkMarker')\n    effects.consume(code)\n    effects.exit('autolinkMarker')\n    effects.enter('autolinkProtocol')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return schemeOrEmailAtext\n    }\n\n    return asciiAtext(code) ? emailAtext(code) : nok(code)\n  }\n  /** @type {State} */\n\n  function schemeOrEmailAtext(code) {\n    return code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)\n      ? schemeInsideOrEmailAtext(code)\n      : emailAtext(code)\n  }\n  /** @type {State} */\n\n  function schemeInsideOrEmailAtext(code) {\n    if (code === 58) {\n      effects.consume(code)\n      return urlInside\n    }\n\n    if (\n      (code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)) &&\n      size++ < 32\n    ) {\n      effects.consume(code)\n      return schemeInsideOrEmailAtext\n    }\n\n    return emailAtext(code)\n  }\n  /** @type {State} */\n\n  function urlInside(code) {\n    if (code === 62) {\n      effects.exit('autolinkProtocol')\n      return end(code)\n    }\n\n    if (code === null || code === 32 || code === 60 || asciiControl(code)) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return urlInside\n  }\n  /** @type {State} */\n\n  function emailAtext(code) {\n    if (code === 64) {\n      effects.consume(code)\n      size = 0\n      return emailAtSignOrDot\n    }\n\n    if (asciiAtext(code)) {\n      effects.consume(code)\n      return emailAtext\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function emailAtSignOrDot(code) {\n    return asciiAlphanumeric(code) ? emailLabel(code) : nok(code)\n  }\n  /** @type {State} */\n\n  function emailLabel(code) {\n    if (code === 46) {\n      effects.consume(code)\n      size = 0\n      return emailAtSignOrDot\n    }\n\n    if (code === 62) {\n      // Exit, then change the type.\n      effects.exit('autolinkProtocol').type = 'autolinkEmail'\n      return end(code)\n    }\n\n    return emailValue(code)\n  }\n  /** @type {State} */\n\n  function emailValue(code) {\n    if ((code === 45 || asciiAlphanumeric(code)) && size++ < 63) {\n      effects.consume(code)\n      return code === 45 ? emailValue : emailLabel\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    effects.enter('autolinkMarker')\n    effects.consume(code)\n    effects.exit('autolinkMarker')\n    effects.exit('autolink')\n    return ok\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const htmlText = {\n  name: 'htmlText',\n  tokenize: tokenizeHtmlText\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHtmlText(effects, ok, nok) {\n  const self = this\n  /** @type {NonNullable<Code>|undefined} */\n\n  let marker\n  /** @type {string} */\n\n  let buffer\n  /** @type {number} */\n\n  let index\n  /** @type {State} */\n\n  let returnState\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('htmlText')\n    effects.enter('htmlTextData')\n    effects.consume(code)\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationOpen\n    }\n\n    if (code === 47) {\n      effects.consume(code)\n      return tagCloseStart\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      return instruction\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function declarationOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentOpen\n    }\n\n    if (code === 91) {\n      effects.consume(code)\n      buffer = 'CDATA['\n      index = 0\n      return cdataOpen\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return declaration\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function commentOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentStart\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function commentStart(code) {\n    if (code === null || code === 62) {\n      return nok(code)\n    }\n\n    if (code === 45) {\n      effects.consume(code)\n      return commentStartDash\n    }\n\n    return comment(code)\n  }\n  /** @type {State} */\n\n  function commentStartDash(code) {\n    if (code === null || code === 62) {\n      return nok(code)\n    }\n\n    return comment(code)\n  }\n  /** @type {State} */\n\n  function comment(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 45) {\n      effects.consume(code)\n      return commentClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = comment\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return comment\n  }\n  /** @type {State} */\n\n  function commentClose(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return end\n    }\n\n    return comment(code)\n  }\n  /** @type {State} */\n\n  function cdataOpen(code) {\n    if (code === buffer.charCodeAt(index++)) {\n      effects.consume(code)\n      return index === buffer.length ? cdata : cdataOpen\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function cdata(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      effects.consume(code)\n      return cdataClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = cdata\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return cdata\n  }\n  /** @type {State} */\n\n  function cdataClose(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n\n    return cdata(code)\n  }\n  /** @type {State} */\n\n  function cdataEnd(code) {\n    if (code === 62) {\n      return end(code)\n    }\n\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n\n    return cdata(code)\n  }\n  /** @type {State} */\n\n  function declaration(code) {\n    if (code === null || code === 62) {\n      return end(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = declaration\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return declaration\n  }\n  /** @type {State} */\n\n  function instruction(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      return instructionClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = instruction\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return instruction\n  }\n  /** @type {State} */\n\n  function instructionClose(code) {\n    return code === 62 ? end(code) : instruction(code)\n  }\n  /** @type {State} */\n\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagClose(code) {\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n\n    return tagCloseBetween(code)\n  }\n  /** @type {State} */\n\n  function tagCloseBetween(code) {\n    if (markdownLineEnding(code)) {\n      returnState = tagCloseBetween\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagCloseBetween\n    }\n\n    return end(code)\n  }\n  /** @type {State} */\n\n  function tagOpen(code) {\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagOpenBetween(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return end\n    }\n\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenBetween\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenBetween\n    }\n\n    return end(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeName(code) {\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n\n    return tagOpenAttributeNameAfter(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeNameAfter\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeNameAfter\n    }\n\n    return tagOpenBetween(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      marker = code\n      return tagOpenAttributeValueQuoted\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueBefore\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n\n    effects.consume(code)\n    marker = undefined\n    return tagOpenAttributeValueUnquoted\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueQuoted(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return tagOpenAttributeValueQuotedAfter\n    }\n\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueQuoted\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return tagOpenAttributeValueQuoted\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueQuotedAfter(code) {\n    if (code === 62 || code === 47 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 60 ||\n      code === 61 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    effects.consume(code)\n    return tagOpenAttributeValueUnquoted\n  } // We can’t have blank lines in content, so no need to worry about empty\n  // tokens.\n\n  /** @type {State} */\n\n  function atLineEnding(code) {\n    effects.exit('htmlTextData')\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(\n      effects,\n      afterPrefix,\n      'linePrefix',\n      self.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )\n  }\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    effects.enter('htmlTextData')\n    return returnState(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    if (code === 62) {\n      effects.consume(code)\n      effects.exit('htmlTextData')\n      effects.exit('htmlText')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {labelEnd} from './label-end.js'\n/** @type {Construct} */\n\nexport const labelStartLink = {\n  name: 'labelStartLink',\n  tokenize: tokenizeLabelStartLink,\n  resolveAll: labelEnd.resolveAll\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLabelStartLink(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('labelLink')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelLink')\n    return after\n  }\n  /** @type {State} */\n\n  function after(code) {\n    /* To do: remove in the future once we’ve switched from\n     * `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n     * which doesn’t need this */\n\n    /* Hidden footnotes hook. */\n\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs\n      ? nok(code)\n      : ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const hardBreakEscape = {\n  name: 'hardBreakEscape',\n  tokenize: tokenizeHardBreakEscape\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHardBreakEscape(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('hardBreakEscape')\n    effects.enter('escapeMarker')\n    effects.consume(code)\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (markdownLineEnding(code)) {\n      effects.exit('escapeMarker')\n      effects.exit('hardBreakEscape')\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Previous} Previous\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const codeText = {\n  name: 'codeText',\n  tokenize: tokenizeCodeText,\n  resolve: resolveCodeText,\n  previous\n}\n/** @type {Resolver} */\n\nfunction resolveCodeText(events) {\n  let tailExitIndex = events.length - 4\n  let headEnterIndex = 3\n  /** @type {number} */\n\n  let index\n  /** @type {number|undefined} */\n\n  let enter // If we start and end with an EOL or a space.\n\n  if (\n    (events[headEnterIndex][1].type === 'lineEnding' ||\n      events[headEnterIndex][1].type === 'space') &&\n    (events[tailExitIndex][1].type === 'lineEnding' ||\n      events[tailExitIndex][1].type === 'space')\n  ) {\n    index = headEnterIndex // And we have data.\n\n    while (++index < tailExitIndex) {\n      if (events[index][1].type === 'codeTextData') {\n        // Then we have padding.\n        events[headEnterIndex][1].type = 'codeTextPadding'\n        events[tailExitIndex][1].type = 'codeTextPadding'\n        headEnterIndex += 2\n        tailExitIndex -= 2\n        break\n      }\n    }\n  } // Merge adjacent spaces and data.\n\n  index = headEnterIndex - 1\n  tailExitIndex++\n\n  while (++index <= tailExitIndex) {\n    if (enter === undefined) {\n      if (index !== tailExitIndex && events[index][1].type !== 'lineEnding') {\n        enter = index\n      }\n    } else if (\n      index === tailExitIndex ||\n      events[index][1].type === 'lineEnding'\n    ) {\n      events[enter][1].type = 'codeTextData'\n\n      if (index !== enter + 2) {\n        events[enter][1].end = events[index - 1][1].end\n        events.splice(enter + 2, index - enter - 2)\n        tailExitIndex -= index - enter - 2\n        index = enter + 2\n      }\n\n      enter = undefined\n    }\n  }\n\n  return events\n}\n/** @type {Previous} */\n\nfunction previous(code) {\n  // If there is a previous code, there will always be a tail.\n  return (\n    code !== 96 ||\n    this.events[this.events.length - 1][1].type === 'characterEscape'\n  )\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCodeText(effects, ok, nok) {\n  const self = this\n  let sizeOpen = 0\n  /** @type {number} */\n\n  let size\n  /** @type {Token} */\n\n  let token\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('codeText')\n    effects.enter('codeTextSequence')\n    return openingSequence(code)\n  }\n  /** @type {State} */\n\n  function openingSequence(code) {\n    if (code === 96) {\n      effects.consume(code)\n      sizeOpen++\n      return openingSequence\n    }\n\n    effects.exit('codeTextSequence')\n    return gap(code)\n  }\n  /** @type {State} */\n\n  function gap(code) {\n    // EOF.\n    if (code === null) {\n      return nok(code)\n    } // Closing fence?\n    // Could also be data.\n\n    if (code === 96) {\n      token = effects.enter('codeTextSequence')\n      size = 0\n      return closingSequence(code)\n    } // Tabs don’t work, and virtual spaces don’t make sense.\n\n    if (code === 32) {\n      effects.enter('space')\n      effects.consume(code)\n      effects.exit('space')\n      return gap\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return gap\n    } // Data.\n\n    effects.enter('codeTextData')\n    return data(code)\n  } // In code.\n\n  /** @type {State} */\n\n  function data(code) {\n    if (\n      code === null ||\n      code === 32 ||\n      code === 96 ||\n      markdownLineEnding(code)\n    ) {\n      effects.exit('codeTextData')\n      return gap(code)\n    }\n\n    effects.consume(code)\n    return data\n  } // Closing fence.\n\n  /** @type {State} */\n\n  function closingSequence(code) {\n    // More.\n    if (code === 96) {\n      effects.consume(code)\n      size++\n      return closingSequence\n    } // Done!\n\n    if (size === sizeOpen) {\n      effects.exit('codeTextSequence')\n      effects.exit('codeText')\n      return ok(code)\n    } // More or less accents: mark as data.\n\n    token.type = 'codeTextData'\n    return data(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n */\nimport {\n  attention,\n  autolink,\n  blockQuote,\n  characterEscape,\n  characterReference,\n  codeFenced,\n  codeIndented,\n  codeText,\n  definition,\n  hardBreakEscape,\n  headingAtx,\n  htmlFlow,\n  htmlText,\n  labelEnd,\n  labelStartImage,\n  labelStartLink,\n  lineEnding,\n  list,\n  setextUnderline,\n  thematicBreak\n} from 'micromark-core-commonmark'\nimport {resolver as resolveText} from './initialize/text.js'\n/** @type {Extension['document']} */\n\nexport const document = {\n  [42]: list,\n  [43]: list,\n  [45]: list,\n  [48]: list,\n  [49]: list,\n  [50]: list,\n  [51]: list,\n  [52]: list,\n  [53]: list,\n  [54]: list,\n  [55]: list,\n  [56]: list,\n  [57]: list,\n  [62]: blockQuote\n}\n/** @type {Extension['contentInitial']} */\n\nexport const contentInitial = {\n  [91]: definition\n}\n/** @type {Extension['flowInitial']} */\n\nexport const flowInitial = {\n  [-2]: codeIndented,\n  [-1]: codeIndented,\n  [32]: codeIndented\n}\n/** @type {Extension['flow']} */\n\nexport const flow = {\n  [35]: headingAtx,\n  [42]: thematicBreak,\n  [45]: [setextUnderline, thematicBreak],\n  [60]: htmlFlow,\n  [61]: setextUnderline,\n  [95]: thematicBreak,\n  [96]: codeFenced,\n  [126]: codeFenced\n}\n/** @type {Extension['string']} */\n\nexport const string = {\n  [38]: characterReference,\n  [92]: characterEscape\n}\n/** @type {Extension['text']} */\n\nexport const text = {\n  [-5]: lineEnding,\n  [-4]: lineEnding,\n  [-3]: lineEnding,\n  [33]: labelStartImage,\n  [38]: characterReference,\n  [42]: attention,\n  [60]: [autolink, htmlText],\n  [91]: labelStartLink,\n  [92]: [hardBreakEscape, characterEscape],\n  [93]: labelEnd,\n  [95]: attention,\n  [96]: codeText\n}\n/** @type {Extension['insideSpan']} */\n\nexport const insideSpan = {\n  null: [attention, resolveText]\n}\n/** @type {Extension['attentionMarkers']} */\n\nexport const attentionMarkers = {\n  null: [42, 95]\n}\n/** @type {Extension['disable']} */\n\nexport const disable = {\n  null: []\n}\n","/**\n * @typedef {import('micromark-util-types').Encoding} Encoding\n * @typedef {import('micromark-util-types').Value} Value\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Code} Code\n */\n\n/**\n * @callback Preprocessor\n * @param {Value} value\n * @param {Encoding} [encoding]\n * @param {boolean} [end=false]\n * @returns {Chunk[]}\n */\nconst search = /[\\0\\t\\n\\r]/g\n/**\n * @returns {Preprocessor}\n */\n\nexport function preprocess() {\n  let column = 1\n  let buffer = ''\n  /** @type {boolean|undefined} */\n\n  let start = true\n  /** @type {boolean|undefined} */\n\n  let atCarriageReturn\n  return preprocessor\n  /** @type {Preprocessor} */\n\n  function preprocessor(value, encoding, end) {\n    /** @type {Chunk[]} */\n    const chunks = []\n    /** @type {RegExpMatchArray|null} */\n\n    let match\n    /** @type {number} */\n\n    let next\n    /** @type {number} */\n\n    let startPosition\n    /** @type {number} */\n\n    let endPosition\n    /** @type {Code} */\n\n    let code // @ts-expect-error `Buffer` does allow an encoding.\n\n    value = buffer + value.toString(encoding)\n    startPosition = 0\n    buffer = ''\n\n    if (start) {\n      if (value.charCodeAt(0) === 65279) {\n        startPosition++\n      }\n\n      start = undefined\n    }\n\n    while (startPosition < value.length) {\n      search.lastIndex = startPosition\n      match = search.exec(value)\n      endPosition =\n        match && match.index !== undefined ? match.index : value.length\n      code = value.charCodeAt(endPosition)\n\n      if (!match) {\n        buffer = value.slice(startPosition)\n        break\n      }\n\n      if (code === 10 && startPosition === endPosition && atCarriageReturn) {\n        chunks.push(-3)\n        atCarriageReturn = undefined\n      } else {\n        if (atCarriageReturn) {\n          chunks.push(-5)\n          atCarriageReturn = undefined\n        }\n\n        if (startPosition < endPosition) {\n          chunks.push(value.slice(startPosition, endPosition))\n          column += endPosition - startPosition\n        }\n\n        switch (code) {\n          case 0: {\n            chunks.push(65533)\n            column++\n            break\n          }\n\n          case 9: {\n            next = Math.ceil(column / 4) * 4\n            chunks.push(-2)\n\n            while (column++ < next) chunks.push(-1)\n\n            break\n          }\n\n          case 10: {\n            chunks.push(-4)\n            column = 1\n            break\n          }\n\n          default: {\n            atCarriageReturn = true\n            column = 1\n          }\n        }\n      }\n\n      startPosition = endPosition + 1\n    }\n\n    if (end) {\n      if (atCarriageReturn) chunks.push(-5)\n      if (buffer) chunks.push(buffer)\n      chunks.push(null)\n    }\n\n    return chunks\n  }\n}\n","/**\n * Turn the number (in string form as either hexa- or plain decimal) coming from\n * a numeric character reference into a character.\n *\n * @param {string} value\n *   Value to decode.\n * @param {number} base\n *   Numeric base.\n * @returns {string}\n */\nexport function decodeNumericCharacterReference(value, base) {\n  const code = Number.parseInt(value, base)\n\n  if (\n    // C0 except for HT, LF, FF, CR, space\n    code < 9 ||\n    code === 11 ||\n    (code > 13 && code < 32) || // Control character (DEL) of the basic block and C1 controls.\n    (code > 126 && code < 160) || // Lone high surrogates and low surrogates.\n    (code > 55295 && code < 57344) || // Noncharacters.\n    (code > 64975 && code < 65008) ||\n    (code & 65535) === 65535 ||\n    (code & 65535) === 65534 || // Out of range\n    code > 1114111\n  ) {\n    return '\\uFFFD'\n  }\n\n  return String.fromCharCode(code)\n}\n","import {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {decodeNumericCharacterReference} from 'micromark-util-decode-numeric-character-reference'\nconst characterEscapeOrReference =\n  /\\\\([!-/:-@[-`{-~])|&(#(?:\\d{1,7}|x[\\da-f]{1,6})|[\\da-z]{1,31});/gi\n/**\n * Utility to decode markdown strings (which occur in places such as fenced\n * code info strings, destinations, labels, and titles).\n * The “string” content type allows character escapes and -references.\n * This decodes those.\n *\n * @param {string} value\n * @returns {string}\n */\n\nexport function decodeString(value) {\n  return value.replace(characterEscapeOrReference, decode)\n}\n/**\n * @param {string} $0\n * @param {string} $1\n * @param {string} $2\n * @returns {string}\n */\n\nfunction decode($0, $1, $2) {\n  if ($1) {\n    // Escape.\n    return $1\n  } // Reference.\n\n  const head = $2.charCodeAt(0)\n\n  if (head === 35) {\n    const head = $2.charCodeAt(1)\n    const hex = head === 120 || head === 88\n    return decodeNumericCharacterReference($2.slice(hex ? 2 : 1), hex ? 16 : 10)\n  }\n\n  return decodeNamedCharacterReference($2) || $0\n}\n","/**\n * @typedef {import('micromark-util-types').Encoding} Encoding\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Value} Value\n * @typedef {import('unist').Parent} UnistParent\n * @typedef {import('unist').Point} Point\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n * @typedef {import('mdast').Content} Content\n * @typedef {Root|Content} Node\n * @typedef {Extract<Node, UnistParent>} Parent\n * @typedef {import('mdast').Break} Break\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('mdast').Code} Code\n * @typedef {import('mdast').Definition} Definition\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('mdast').HTML} HTML\n * @typedef {import('mdast').Image} Image\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('mdast').Link} Link\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('mdast').List} List\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('mdast').Text} Text\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n *\n * @typedef {UnistParent & {type: 'fragment', children: Array<PhrasingContent>}} Fragment\n */\n\n/**\n * @typedef _CompileDataFields\n * @property {boolean|undefined} expectingFirstListItemValue\n * @property {boolean|undefined} flowCodeInside\n * @property {boolean|undefined} setextHeadingSlurpLineEnding\n * @property {boolean|undefined} atHardBreak\n * @property {'collapsed'|'full'} referenceType\n * @property {boolean|undefined} inReference\n * @property {'characterReferenceMarkerHexadecimal'|'characterReferenceMarkerNumeric'} characterReferenceType\n *\n * @typedef {Record<string, unknown> & Partial<_CompileDataFields>} CompileData\n *\n * @typedef {(tree: Root) => Root|void} Transform\n * @typedef {(this: CompileContext, token: Token) => void} Handle\n * @typedef {Record<string, Handle>} Handles\n *   Token types mapping to handles\n * @typedef {Record<string, Record<string, unknown>|Array<unknown>> & {canContainEols: Array<string>, transforms: Array<Transform>, enter: Handles, exit: Handles}} NormalizedExtension\n * @typedef {Partial<NormalizedExtension>} Extension\n *   An mdast extension changes how markdown tokens are turned into mdast.\n *\n * @typedef {(this: Omit<CompileContext, 'sliceSerialize'>, left: Token|undefined, right: Token) => void} OnEnterError\n * @typedef {(this: Omit<CompileContext, 'sliceSerialize'>, left: Token, right: Token) => void} OnExitError\n *\n * @typedef CompileContext\n *   mdast compiler context\n * @property {Array<Node | Fragment>} stack\n * @property {Array<[Token, OnEnterError|undefined]>} tokenStack\n * @property {(key: string, value?: unknown) => void} setData\n *   Set data into the key-value store.\n * @property {<K extends string>(key: K) => CompileData[K]} getData\n *   Get data from the key-value store.\n * @property {(this: CompileContext) => void} buffer\n *   Capture some of the output data.\n * @property {(this: CompileContext) => string} resume\n *   Stop capturing and access the output data.\n * @property {<N extends Node>(this: CompileContext, node: N, token: Token, onError?: OnEnterError) => N} enter\n *   Enter a token.\n * @property {(this: CompileContext, token: Token, onError?: OnExitError) => Node} exit\n *   Exit a token.\n * @property {TokenizeContext['sliceSerialize']} sliceSerialize\n *   Get the string value of a token.\n * @property {NormalizedExtension} config\n *   Configuration.\n *\n * @typedef {{mdastExtensions?: Array<Extension|Array<Extension>>}} FromMarkdownOptions\n * @typedef {ParseOptions & FromMarkdownOptions} Options\n */\nimport {toString} from 'mdast-util-to-string'\nimport {parse} from 'micromark/lib/parse.js'\nimport {preprocess} from 'micromark/lib/preprocess.js'\nimport {postprocess} from 'micromark/lib/postprocess.js'\nimport {decodeNumericCharacterReference} from 'micromark-util-decode-numeric-character-reference'\nimport {decodeString} from 'micromark-util-decode-string'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {stringifyPosition} from 'unist-util-stringify-position'\nconst own = {}.hasOwnProperty\n/**\n * @param value Markdown to parse (`string` or `Buffer`).\n * @param [encoding] Character encoding to understand `value` as when it’s a `Buffer` (`string`, default: `'utf8'`).\n * @param [options] Configuration\n */\n\nexport const fromMarkdown =\n  /**\n   * @type {(\n   *   ((value: Value, encoding: Encoding, options?: Options) => Root) &\n   *   ((value: Value, options?: Options) => Root)\n   * )}\n   */\n\n  /**\n   * @param {Value} value\n   * @param {Encoding} [encoding]\n   * @param {Options} [options]\n   * @returns {Root}\n   */\n  function (value, encoding, options) {\n    if (typeof encoding !== 'string') {\n      options = encoding\n      encoding = undefined\n    }\n\n    return compiler(options)(\n      postprocess(\n        parse(options).document().write(preprocess()(value, encoding, true))\n      )\n    )\n  }\n/**\n * Note this compiler only understand complete buffering, not streaming.\n *\n * @param {Options} [options]\n */\n\nfunction compiler(options = {}) {\n  /** @type {NormalizedExtension} */\n  // @ts-expect-error: our base has all required fields, so the result will too.\n  const config = configure(\n    {\n      transforms: [],\n      canContainEols: [\n        'emphasis',\n        'fragment',\n        'heading',\n        'paragraph',\n        'strong'\n      ],\n      enter: {\n        autolink: opener(link),\n        autolinkProtocol: onenterdata,\n        autolinkEmail: onenterdata,\n        atxHeading: opener(heading),\n        blockQuote: opener(blockQuote),\n        characterEscape: onenterdata,\n        characterReference: onenterdata,\n        codeFenced: opener(codeFlow),\n        codeFencedFenceInfo: buffer,\n        codeFencedFenceMeta: buffer,\n        codeIndented: opener(codeFlow, buffer),\n        codeText: opener(codeText, buffer),\n        codeTextData: onenterdata,\n        data: onenterdata,\n        codeFlowValue: onenterdata,\n        definition: opener(definition),\n        definitionDestinationString: buffer,\n        definitionLabelString: buffer,\n        definitionTitleString: buffer,\n        emphasis: opener(emphasis),\n        hardBreakEscape: opener(hardBreak),\n        hardBreakTrailing: opener(hardBreak),\n        htmlFlow: opener(html, buffer),\n        htmlFlowData: onenterdata,\n        htmlText: opener(html, buffer),\n        htmlTextData: onenterdata,\n        image: opener(image),\n        label: buffer,\n        link: opener(link),\n        listItem: opener(listItem),\n        listItemValue: onenterlistitemvalue,\n        listOrdered: opener(list, onenterlistordered),\n        listUnordered: opener(list),\n        paragraph: opener(paragraph),\n        reference: onenterreference,\n        referenceString: buffer,\n        resourceDestinationString: buffer,\n        resourceTitleString: buffer,\n        setextHeading: opener(heading),\n        strong: opener(strong),\n        thematicBreak: opener(thematicBreak)\n      },\n      exit: {\n        atxHeading: closer(),\n        atxHeadingSequence: onexitatxheadingsequence,\n        autolink: closer(),\n        autolinkEmail: onexitautolinkemail,\n        autolinkProtocol: onexitautolinkprotocol,\n        blockQuote: closer(),\n        characterEscapeValue: onexitdata,\n        characterReferenceMarkerHexadecimal: onexitcharacterreferencemarker,\n        characterReferenceMarkerNumeric: onexitcharacterreferencemarker,\n        characterReferenceValue: onexitcharacterreferencevalue,\n        codeFenced: closer(onexitcodefenced),\n        codeFencedFence: onexitcodefencedfence,\n        codeFencedFenceInfo: onexitcodefencedfenceinfo,\n        codeFencedFenceMeta: onexitcodefencedfencemeta,\n        codeFlowValue: onexitdata,\n        codeIndented: closer(onexitcodeindented),\n        codeText: closer(onexitcodetext),\n        codeTextData: onexitdata,\n        data: onexitdata,\n        definition: closer(),\n        definitionDestinationString: onexitdefinitiondestinationstring,\n        definitionLabelString: onexitdefinitionlabelstring,\n        definitionTitleString: onexitdefinitiontitlestring,\n        emphasis: closer(),\n        hardBreakEscape: closer(onexithardbreak),\n        hardBreakTrailing: closer(onexithardbreak),\n        htmlFlow: closer(onexithtmlflow),\n        htmlFlowData: onexitdata,\n        htmlText: closer(onexithtmltext),\n        htmlTextData: onexitdata,\n        image: closer(onexitimage),\n        label: onexitlabel,\n        labelText: onexitlabeltext,\n        lineEnding: onexitlineending,\n        link: closer(onexitlink),\n        listItem: closer(),\n        listOrdered: closer(),\n        listUnordered: closer(),\n        paragraph: closer(),\n        referenceString: onexitreferencestring,\n        resourceDestinationString: onexitresourcedestinationstring,\n        resourceTitleString: onexitresourcetitlestring,\n        resource: onexitresource,\n        setextHeading: closer(onexitsetextheading),\n        setextHeadingLineSequence: onexitsetextheadinglinesequence,\n        setextHeadingText: onexitsetextheadingtext,\n        strong: closer(),\n        thematicBreak: closer()\n      }\n    },\n    options.mdastExtensions || []\n  )\n  /** @type {CompileData} */\n\n  const data = {}\n  return compile\n  /**\n   * @param {Array<Event>} events\n   * @returns {Root}\n   */\n\n  function compile(events) {\n    /** @type {Root} */\n    let tree = {\n      type: 'root',\n      children: []\n    }\n    /** @type {CompileContext['stack']} */\n\n    const stack = [tree]\n    /** @type {CompileContext['tokenStack']} */\n\n    const tokenStack = []\n    /** @type {Array<number>} */\n\n    const listStack = []\n    /** @type {Omit<CompileContext, 'sliceSerialize'>} */\n\n    const context = {\n      stack,\n      tokenStack,\n      config,\n      enter,\n      exit,\n      buffer,\n      resume,\n      setData,\n      getData\n    }\n    let index = -1\n\n    while (++index < events.length) {\n      // We preprocess lists to add `listItem` tokens, and to infer whether\n      // items the list itself are spread out.\n      if (\n        events[index][1].type === 'listOrdered' ||\n        events[index][1].type === 'listUnordered'\n      ) {\n        if (events[index][0] === 'enter') {\n          listStack.push(index)\n        } else {\n          const tail = listStack.pop()\n          index = prepareList(events, tail, index)\n        }\n      }\n    }\n\n    index = -1\n\n    while (++index < events.length) {\n      const handler = config[events[index][0]]\n\n      if (own.call(handler, events[index][1].type)) {\n        handler[events[index][1].type].call(\n          Object.assign(\n            {\n              sliceSerialize: events[index][2].sliceSerialize\n            },\n            context\n          ),\n          events[index][1]\n        )\n      }\n    }\n\n    if (tokenStack.length > 0) {\n      const tail = tokenStack[tokenStack.length - 1]\n      const handler = tail[1] || defaultOnError\n      handler.call(context, undefined, tail[0])\n    } // Figure out `root` position.\n\n    tree.position = {\n      start: point(\n        events.length > 0\n          ? events[0][1].start\n          : {\n              line: 1,\n              column: 1,\n              offset: 0\n            }\n      ),\n      end: point(\n        events.length > 0\n          ? events[events.length - 2][1].end\n          : {\n              line: 1,\n              column: 1,\n              offset: 0\n            }\n      )\n    }\n    index = -1\n\n    while (++index < config.transforms.length) {\n      tree = config.transforms[index](tree) || tree\n    }\n\n    return tree\n  }\n  /**\n   * @param {Array<Event>} events\n   * @param {number} start\n   * @param {number} length\n   * @returns {number}\n   */\n\n  function prepareList(events, start, length) {\n    let index = start - 1\n    let containerBalance = -1\n    let listSpread = false\n    /** @type {Token|undefined} */\n\n    let listItem\n    /** @type {number|undefined} */\n\n    let lineIndex\n    /** @type {number|undefined} */\n\n    let firstBlankLineIndex\n    /** @type {boolean|undefined} */\n\n    let atMarker\n\n    while (++index <= length) {\n      const event = events[index]\n\n      if (\n        event[1].type === 'listUnordered' ||\n        event[1].type === 'listOrdered' ||\n        event[1].type === 'blockQuote'\n      ) {\n        if (event[0] === 'enter') {\n          containerBalance++\n        } else {\n          containerBalance--\n        }\n\n        atMarker = undefined\n      } else if (event[1].type === 'lineEndingBlank') {\n        if (event[0] === 'enter') {\n          if (\n            listItem &&\n            !atMarker &&\n            !containerBalance &&\n            !firstBlankLineIndex\n          ) {\n            firstBlankLineIndex = index\n          }\n\n          atMarker = undefined\n        }\n      } else if (\n        event[1].type === 'linePrefix' ||\n        event[1].type === 'listItemValue' ||\n        event[1].type === 'listItemMarker' ||\n        event[1].type === 'listItemPrefix' ||\n        event[1].type === 'listItemPrefixWhitespace'\n      ) {\n        // Empty.\n      } else {\n        atMarker = undefined\n      }\n\n      if (\n        (!containerBalance &&\n          event[0] === 'enter' &&\n          event[1].type === 'listItemPrefix') ||\n        (containerBalance === -1 &&\n          event[0] === 'exit' &&\n          (event[1].type === 'listUnordered' ||\n            event[1].type === 'listOrdered'))\n      ) {\n        if (listItem) {\n          let tailIndex = index\n          lineIndex = undefined\n\n          while (tailIndex--) {\n            const tailEvent = events[tailIndex]\n\n            if (\n              tailEvent[1].type === 'lineEnding' ||\n              tailEvent[1].type === 'lineEndingBlank'\n            ) {\n              if (tailEvent[0] === 'exit') continue\n\n              if (lineIndex) {\n                events[lineIndex][1].type = 'lineEndingBlank'\n                listSpread = true\n              }\n\n              tailEvent[1].type = 'lineEnding'\n              lineIndex = tailIndex\n            } else if (\n              tailEvent[1].type === 'linePrefix' ||\n              tailEvent[1].type === 'blockQuotePrefix' ||\n              tailEvent[1].type === 'blockQuotePrefixWhitespace' ||\n              tailEvent[1].type === 'blockQuoteMarker' ||\n              tailEvent[1].type === 'listItemIndent'\n            ) {\n              // Empty\n            } else {\n              break\n            }\n          }\n\n          if (\n            firstBlankLineIndex &&\n            (!lineIndex || firstBlankLineIndex < lineIndex)\n          ) {\n            // @ts-expect-error Patched.\n            listItem._spread = true\n          } // Fix position.\n\n          listItem.end = Object.assign(\n            {},\n            lineIndex ? events[lineIndex][1].start : event[1].end\n          )\n          events.splice(lineIndex || index, 0, ['exit', listItem, event[2]])\n          index++\n          length++\n        } // Create a new list item.\n\n        if (event[1].type === 'listItemPrefix') {\n          listItem = {\n            type: 'listItem',\n            // @ts-expect-error Patched\n            _spread: false,\n            start: Object.assign({}, event[1].start)\n          } // @ts-expect-error: `listItem` is most definitely defined, TS...\n\n          events.splice(index, 0, ['enter', listItem, event[2]])\n          index++\n          length++\n          firstBlankLineIndex = undefined\n          atMarker = true\n        }\n      }\n    } // @ts-expect-error Patched.\n\n    events[start][1]._spread = listSpread\n    return length\n  }\n  /**\n   * @type {CompileContext['setData']}\n   * @param [value]\n   */\n\n  function setData(key, value) {\n    data[key] = value\n  }\n  /**\n   * @type {CompileContext['getData']}\n   * @template {string} K\n   * @param {K} key\n   * @returns {CompileData[K]}\n   */\n\n  function getData(key) {\n    return data[key]\n  }\n  /**\n   * @param {Point} d\n   * @returns {Point}\n   */\n\n  function point(d) {\n    return {\n      line: d.line,\n      column: d.column,\n      offset: d.offset\n    }\n  }\n  /**\n   * @param {(token: Token) => Node} create\n   * @param {Handle} [and]\n   * @returns {Handle}\n   */\n\n  function opener(create, and) {\n    return open\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {void}\n     */\n\n    function open(token) {\n      enter.call(this, create(token), token)\n      if (and) and.call(this, token)\n    }\n  }\n  /** @type {CompileContext['buffer']} */\n\n  function buffer() {\n    this.stack.push({\n      type: 'fragment',\n      children: []\n    })\n  }\n  /**\n   * @type {CompileContext['enter']}\n   * @template {Node} N\n   * @this {CompileContext}\n   * @param {N} node\n   * @param {Token} token\n   * @param {OnEnterError} [errorHandler]\n   * @returns {N}\n   */\n\n  function enter(node, token, errorHandler) {\n    const parent = this.stack[this.stack.length - 1]\n    // @ts-expect-error: Assume `Node` can exist as a child of `parent`.\n    parent.children.push(node)\n    this.stack.push(node)\n    this.tokenStack.push([token, errorHandler]) // @ts-expect-error: `end` will be patched later.\n\n    node.position = {\n      start: point(token.start)\n    }\n    return node\n  }\n  /**\n   * @param {Handle} [and]\n   * @returns {Handle}\n   */\n\n  function closer(and) {\n    return close\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {void}\n     */\n\n    function close(token) {\n      if (and) and.call(this, token)\n      exit.call(this, token)\n    }\n  }\n  /**\n   * @type {CompileContext['exit']}\n   * @this {CompileContext}\n   * @param {Token} token\n   * @param {OnExitError} [onExitError]\n   * @returns {Node}\n   */\n\n  function exit(token, onExitError) {\n    const node = this.stack.pop()\n    const open = this.tokenStack.pop()\n\n    if (!open) {\n      throw new Error(\n        'Cannot close `' +\n          token.type +\n          '` (' +\n          stringifyPosition({\n            start: token.start,\n            end: token.end\n          }) +\n          '): it’s not open'\n      )\n    } else if (open[0].type !== token.type) {\n      if (onExitError) {\n        onExitError.call(this, token, open[0])\n      } else {\n        const handler = open[1] || defaultOnError\n        handler.call(this, token, open[0])\n      }\n    }\n\n    node.position.end = point(token.end)\n    return node\n  }\n  /**\n   * @this {CompileContext}\n   * @returns {string}\n   */\n\n  function resume() {\n    return toString(this.stack.pop())\n  } //\n  // Handlers.\n  //\n\n  /** @type {Handle} */\n\n  function onenterlistordered() {\n    setData('expectingFirstListItemValue', true)\n  }\n  /** @type {Handle} */\n\n  function onenterlistitemvalue(token) {\n    if (getData('expectingFirstListItemValue')) {\n      const ancestor =\n        /** @type {List} */\n        this.stack[this.stack.length - 2]\n      ancestor.start = Number.parseInt(this.sliceSerialize(token), 10)\n      setData('expectingFirstListItemValue')\n    }\n  }\n  /** @type {Handle} */\n\n  function onexitcodefencedfenceinfo() {\n    const data = this.resume()\n    const node =\n      /** @type {Code} */\n      this.stack[this.stack.length - 1]\n    node.lang = data\n  }\n  /** @type {Handle} */\n\n  function onexitcodefencedfencemeta() {\n    const data = this.resume()\n    const node =\n      /** @type {Code} */\n      this.stack[this.stack.length - 1]\n    node.meta = data\n  }\n  /** @type {Handle} */\n\n  function onexitcodefencedfence() {\n    // Exit if this is the closing fence.\n    if (getData('flowCodeInside')) return\n    this.buffer()\n    setData('flowCodeInside', true)\n  }\n  /** @type {Handle} */\n\n  function onexitcodefenced() {\n    const data = this.resume()\n    const node =\n      /** @type {Code} */\n      this.stack[this.stack.length - 1]\n    node.value = data.replace(/^(\\r?\\n|\\r)|(\\r?\\n|\\r)$/g, '')\n    setData('flowCodeInside')\n  }\n  /** @type {Handle} */\n\n  function onexitcodeindented() {\n    const data = this.resume()\n    const node =\n      /** @type {Code} */\n      this.stack[this.stack.length - 1]\n    node.value = data.replace(/(\\r?\\n|\\r)$/g, '')\n  }\n  /** @type {Handle} */\n\n  function onexitdefinitionlabelstring(token) {\n    // Discard label, use the source content instead.\n    const label = this.resume()\n    const node =\n      /** @type {Definition} */\n      this.stack[this.stack.length - 1]\n    node.label = label\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n  }\n  /** @type {Handle} */\n\n  function onexitdefinitiontitlestring() {\n    const data = this.resume()\n    const node =\n      /** @type {Definition} */\n      this.stack[this.stack.length - 1]\n    node.title = data\n  }\n  /** @type {Handle} */\n\n  function onexitdefinitiondestinationstring() {\n    const data = this.resume()\n    const node =\n      /** @type {Definition} */\n      this.stack[this.stack.length - 1]\n    node.url = data\n  }\n  /** @type {Handle} */\n\n  function onexitatxheadingsequence(token) {\n    const node =\n      /** @type {Heading} */\n      this.stack[this.stack.length - 1]\n\n    if (!node.depth) {\n      const depth = this.sliceSerialize(token).length\n      node.depth = depth\n    }\n  }\n  /** @type {Handle} */\n\n  function onexitsetextheadingtext() {\n    setData('setextHeadingSlurpLineEnding', true)\n  }\n  /** @type {Handle} */\n\n  function onexitsetextheadinglinesequence(token) {\n    const node =\n      /** @type {Heading} */\n      this.stack[this.stack.length - 1]\n    node.depth = this.sliceSerialize(token).charCodeAt(0) === 61 ? 1 : 2\n  }\n  /** @type {Handle} */\n\n  function onexitsetextheading() {\n    setData('setextHeadingSlurpLineEnding')\n  }\n  /** @type {Handle} */\n\n  function onenterdata(token) {\n    const parent =\n      /** @type {Parent} */\n      this.stack[this.stack.length - 1]\n    /** @type {Node} */\n\n    let tail = parent.children[parent.children.length - 1]\n\n    if (!tail || tail.type !== 'text') {\n      // Add a new text node.\n      tail = text() // @ts-expect-error: we’ll add `end` later.\n\n      tail.position = {\n        start: point(token.start)\n      } // @ts-expect-error: Assume `parent` accepts `text`.\n\n      parent.children.push(tail)\n    }\n\n    this.stack.push(tail)\n  }\n  /** @type {Handle} */\n\n  function onexitdata(token) {\n    const tail = this.stack.pop()\n    tail.value += this.sliceSerialize(token)\n    tail.position.end = point(token.end)\n  }\n  /** @type {Handle} */\n\n  function onexitlineending(token) {\n    const context = this.stack[this.stack.length - 1]\n\n    // If we’re at a hard break, include the line ending in there.\n    if (getData('atHardBreak')) {\n      const tail = context.children[context.children.length - 1]\n      tail.position.end = point(token.end)\n      setData('atHardBreak')\n      return\n    }\n\n    if (\n      !getData('setextHeadingSlurpLineEnding') &&\n      config.canContainEols.includes(context.type)\n    ) {\n      onenterdata.call(this, token)\n      onexitdata.call(this, token)\n    }\n  }\n  /** @type {Handle} */\n\n  function onexithardbreak() {\n    setData('atHardBreak', true)\n  }\n  /** @type {Handle} */\n\n  function onexithtmlflow() {\n    const data = this.resume()\n    const node =\n      /** @type {HTML} */\n      this.stack[this.stack.length - 1]\n    node.value = data\n  }\n  /** @type {Handle} */\n\n  function onexithtmltext() {\n    const data = this.resume()\n    const node =\n      /** @type {HTML} */\n      this.stack[this.stack.length - 1]\n    node.value = data\n  }\n  /** @type {Handle} */\n\n  function onexitcodetext() {\n    const data = this.resume()\n    const node =\n      /** @type {InlineCode} */\n      this.stack[this.stack.length - 1]\n    node.value = data\n  }\n  /** @type {Handle} */\n\n  function onexitlink() {\n    const context =\n      /** @type {Link & {identifier: string, label: string}} */\n      this.stack[this.stack.length - 1] // To do: clean.\n\n    if (getData('inReference')) {\n      context.type += 'Reference' // @ts-expect-error: mutate.\n\n      context.referenceType = getData('referenceType') || 'shortcut' // @ts-expect-error: mutate.\n\n      delete context.url\n      delete context.title\n    } else {\n      // @ts-expect-error: mutate.\n      delete context.identifier // @ts-expect-error: mutate.\n\n      delete context.label\n    }\n\n    setData('referenceType')\n  }\n  /** @type {Handle} */\n\n  function onexitimage() {\n    const context =\n      /** @type {Image & {identifier: string, label: string}} */\n      this.stack[this.stack.length - 1] // To do: clean.\n\n    if (getData('inReference')) {\n      context.type += 'Reference' // @ts-expect-error: mutate.\n\n      context.referenceType = getData('referenceType') || 'shortcut' // @ts-expect-error: mutate.\n\n      delete context.url\n      delete context.title\n    } else {\n      // @ts-expect-error: mutate.\n      delete context.identifier // @ts-expect-error: mutate.\n\n      delete context.label\n    }\n\n    setData('referenceType')\n  }\n  /** @type {Handle} */\n\n  function onexitlabeltext(token) {\n    const ancestor =\n      /** @type {(Link|Image) & {identifier: string, label: string}} */\n      this.stack[this.stack.length - 2]\n    const string = this.sliceSerialize(token)\n    ancestor.label = decodeString(string)\n    ancestor.identifier = normalizeIdentifier(string).toLowerCase()\n  }\n  /** @type {Handle} */\n\n  function onexitlabel() {\n    const fragment =\n      /** @type {Fragment} */\n      this.stack[this.stack.length - 1]\n    const value = this.resume()\n    const node =\n      /** @type {(Link|Image) & {identifier: string, label: string}} */\n      this.stack[this.stack.length - 1] // Assume a reference.\n\n    setData('inReference', true)\n\n    if (node.type === 'link') {\n      // @ts-expect-error: Assume static phrasing content.\n      node.children = fragment.children\n    } else {\n      node.alt = value\n    }\n  }\n  /** @type {Handle} */\n\n  function onexitresourcedestinationstring() {\n    const data = this.resume()\n    const node =\n      /** @type {Link|Image} */\n      this.stack[this.stack.length - 1]\n    node.url = data\n  }\n  /** @type {Handle} */\n\n  function onexitresourcetitlestring() {\n    const data = this.resume()\n    const node =\n      /** @type {Link|Image} */\n      this.stack[this.stack.length - 1]\n    node.title = data\n  }\n  /** @type {Handle} */\n\n  function onexitresource() {\n    setData('inReference')\n  }\n  /** @type {Handle} */\n\n  function onenterreference() {\n    setData('referenceType', 'collapsed')\n  }\n  /** @type {Handle} */\n\n  function onexitreferencestring(token) {\n    const label = this.resume()\n    const node =\n      /** @type {LinkReference|ImageReference} */\n      this.stack[this.stack.length - 1]\n    node.label = label\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n    setData('referenceType', 'full')\n  }\n  /** @type {Handle} */\n\n  function onexitcharacterreferencemarker(token) {\n    setData('characterReferenceType', token.type)\n  }\n  /** @type {Handle} */\n\n  function onexitcharacterreferencevalue(token) {\n    const data = this.sliceSerialize(token)\n    const type = getData('characterReferenceType')\n    /** @type {string} */\n\n    let value\n\n    if (type) {\n      value = decodeNumericCharacterReference(\n        data,\n        type === 'characterReferenceMarkerNumeric' ? 10 : 16\n      )\n      setData('characterReferenceType')\n    } else {\n      // @ts-expect-error `decodeNamedCharacterReference` can return false for\n      // invalid named character references, but everything we’ve tokenized is\n      // valid.\n      value = decodeNamedCharacterReference(data)\n    }\n\n    const tail = this.stack.pop()\n    tail.value += value\n    tail.position.end = point(token.end)\n  }\n  /** @type {Handle} */\n\n  function onexitautolinkprotocol(token) {\n    onexitdata.call(this, token)\n    const node =\n      /** @type {Link} */\n      this.stack[this.stack.length - 1]\n    node.url = this.sliceSerialize(token)\n  }\n  /** @type {Handle} */\n\n  function onexitautolinkemail(token) {\n    onexitdata.call(this, token)\n    const node =\n      /** @type {Link} */\n      this.stack[this.stack.length - 1]\n    node.url = 'mailto:' + this.sliceSerialize(token)\n  } //\n  // Creaters.\n  //\n\n  /** @returns {Blockquote} */\n\n  function blockQuote() {\n    return {\n      type: 'blockquote',\n      children: []\n    }\n  }\n  /** @returns {Code} */\n\n  function codeFlow() {\n    return {\n      type: 'code',\n      lang: null,\n      meta: null,\n      value: ''\n    }\n  }\n  /** @returns {InlineCode} */\n\n  function codeText() {\n    return {\n      type: 'inlineCode',\n      value: ''\n    }\n  }\n  /** @returns {Definition} */\n\n  function definition() {\n    return {\n      type: 'definition',\n      identifier: '',\n      label: null,\n      title: null,\n      url: ''\n    }\n  }\n  /** @returns {Emphasis} */\n\n  function emphasis() {\n    return {\n      type: 'emphasis',\n      children: []\n    }\n  }\n  /** @returns {Heading} */\n\n  function heading() {\n    // @ts-expect-error `depth` will be set later.\n    return {\n      type: 'heading',\n      depth: undefined,\n      children: []\n    }\n  }\n  /** @returns {Break} */\n\n  function hardBreak() {\n    return {\n      type: 'break'\n    }\n  }\n  /** @returns {HTML} */\n\n  function html() {\n    return {\n      type: 'html',\n      value: ''\n    }\n  }\n  /** @returns {Image} */\n\n  function image() {\n    return {\n      type: 'image',\n      title: null,\n      url: '',\n      alt: null\n    }\n  }\n  /** @returns {Link} */\n\n  function link() {\n    return {\n      type: 'link',\n      title: null,\n      url: '',\n      children: []\n    }\n  }\n  /**\n   * @param {Token} token\n   * @returns {List}\n   */\n\n  function list(token) {\n    return {\n      type: 'list',\n      ordered: token.type === 'listOrdered',\n      start: null,\n      // @ts-expect-error Patched.\n      spread: token._spread,\n      children: []\n    }\n  }\n  /**\n   * @param {Token} token\n   * @returns {ListItem}\n   */\n\n  function listItem(token) {\n    return {\n      type: 'listItem',\n      // @ts-expect-error Patched.\n      spread: token._spread,\n      checked: null,\n      children: []\n    }\n  }\n  /** @returns {Paragraph} */\n\n  function paragraph() {\n    return {\n      type: 'paragraph',\n      children: []\n    }\n  }\n  /** @returns {Strong} */\n\n  function strong() {\n    return {\n      type: 'strong',\n      children: []\n    }\n  }\n  /** @returns {Text} */\n\n  function text() {\n    return {\n      type: 'text',\n      value: ''\n    }\n  }\n  /** @returns {ThematicBreak} */\n\n  function thematicBreak() {\n    return {\n      type: 'thematicBreak'\n    }\n  }\n}\n/**\n * @param {Extension} combined\n * @param {Array<Extension|Array<Extension>>} extensions\n * @returns {Extension}\n */\n\nfunction configure(combined, extensions) {\n  let index = -1\n\n  while (++index < extensions.length) {\n    const value = extensions[index]\n\n    if (Array.isArray(value)) {\n      configure(combined, value)\n    } else {\n      extension(combined, value)\n    }\n  }\n\n  return combined\n}\n/**\n * @param {Extension} combined\n * @param {Extension} extension\n * @returns {void}\n */\n\nfunction extension(combined, extension) {\n  /** @type {string} */\n  let key\n\n  for (key in extension) {\n    if (own.call(extension, key)) {\n      const list = key === 'canContainEols' || key === 'transforms'\n      const maybe = own.call(combined, key) ? combined[key] : undefined\n      /* c8 ignore next */\n\n      const left = maybe || (combined[key] = list ? [] : {})\n      const right = extension[key]\n\n      if (right) {\n        if (list) {\n          // @ts-expect-error: `left` is an array.\n          combined[key] = [...left, ...right]\n        } else {\n          Object.assign(left, right)\n        }\n      }\n    }\n  }\n}\n/** @type {OnEnterError} */\n\nfunction defaultOnError(left, right) {\n  if (left) {\n    throw new Error(\n      'Cannot close `' +\n        left.type +\n        '` (' +\n        stringifyPosition({\n          start: left.start,\n          end: left.end\n        }) +\n        '): a different token (`' +\n        right.type +\n        '`, ' +\n        stringifyPosition({\n          start: right.start,\n          end: right.end\n        }) +\n        ') is open'\n    )\n  } else {\n    throw new Error(\n      'Cannot close document, a token (`' +\n        right.type +\n        '`, ' +\n        stringifyPosition({\n          start: right.start,\n          end: right.end\n        }) +\n        ') is still open'\n    )\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Event} Event\n */\nimport {subtokenize} from 'micromark-util-subtokenize'\n/**\n * @param {Event[]} events\n * @returns {Event[]}\n */\n\nexport function postprocess(events) {\n  while (!subtokenize(events)) {\n    // Empty\n  }\n\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').FullNormalizedExtension} FullNormalizedExtension\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\n * @typedef {import('micromark-util-types').Create} Create\n */\nimport {combineExtensions} from 'micromark-util-combine-extensions'\nimport {content} from './initialize/content.js'\nimport {document} from './initialize/document.js'\nimport {flow} from './initialize/flow.js'\nimport {text, string} from './initialize/text.js'\nimport {createTokenizer} from './create-tokenizer.js'\nimport * as defaultConstructs from './constructs.js'\n/**\n * @param {ParseOptions} [options]\n * @returns {ParseContext}\n */\n\nexport function parse(options = {}) {\n  /** @type {FullNormalizedExtension} */\n  // @ts-expect-error `defaultConstructs` is full, so the result will be too.\n  const constructs = combineExtensions(\n    // @ts-expect-error Same as above.\n    [defaultConstructs].concat(options.extensions || [])\n  )\n  /** @type {ParseContext} */\n\n  const parser = {\n    defined: [],\n    lazy: {},\n    constructs,\n    content: create(content),\n    document: create(document),\n    flow: create(flow),\n    string: create(string),\n    text: create(text)\n  }\n  return parser\n  /**\n   * @param {InitialConstruct} initial\n   */\n\n  function create(initial) {\n    return creator\n    /** @type {Create} */\n\n    function creator(from) {\n      return createTokenizer(parser, initial, from)\n    }\n  }\n}\n","import remarkParse from './lib/index.js'\n\nexport default remarkParse\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast-util-from-markdown').Options} Options\n */\n\nimport {fromMarkdown} from 'mdast-util-from-markdown'\n\n/** @type {import('unified').Plugin<[Options?] | void[], string, Root>} */\nexport default function remarkParse(options) {\n  /** @type {import('unified').ParserFunction<Root>} */\n  const parser = (doc) => {\n    // Assume options.\n    const settings = /** @type {Options} */ (this.data('settings'))\n\n    return fromMarkdown(\n      doc,\n      Object.assign({}, settings, options, {\n        // Note: these options are not in the readme.\n        // The goal is for them to be set by plugins on `data` instead of being\n        // passed by users.\n        extensions: this.data('micromarkExtensions') || [],\n        mdastExtensions: this.data('fromMarkdownExtensions') || []\n      })\n    )\n  }\n\n  Object.assign(this, {Parser: parser})\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist').Literal} Literal\n * @typedef {Object.<string, unknown>} Props\n * @typedef {Array.<Node>|string} ChildrenOrValue\n *\n * @typedef {(<T extends string, P extends Record<string, unknown>, C extends Node[]>(type: T, props: P, children: C) => {type: T, children: C} & P)} BuildParentWithProps\n * @typedef {(<T extends string, P extends Record<string, unknown>>(type: T, props: P, value: string) => {type: T, value: string} & P)} BuildLiteralWithProps\n * @typedef {(<T extends string, P extends Record<string, unknown>>(type: T, props: P) => {type: T} & P)} BuildVoidWithProps\n * @typedef {(<T extends string, C extends Node[]>(type: T, children: C) => {type: T, children: C})} BuildParent\n * @typedef {(<T extends string>(type: T, value: string) => {type: T, value: string})} BuildLiteral\n * @typedef {(<T extends string>(type: T) => {type: T})} BuildVoid\n */\n\nexport var u = /**\n * @type {BuildVoid & BuildVoidWithProps & BuildLiteral & BuildLiteralWithProps & BuildParent & BuildParentWithProps}\n */ (\n  /**\n   * @param {string} type Type of node\n   * @param {Props|ChildrenOrValue} [props] Additional properties for node (or `children` or `value`)\n   * @param {ChildrenOrValue} [value] `children` or `value` of node\n   * @returns {Node}\n   */\n  function (type, props, value) {\n    /** @type {Node} */\n    var node = {type: String(type)}\n\n    if (\n      (value === undefined || value === null) &&\n      (typeof props === 'string' || Array.isArray(props))\n    ) {\n      value = props\n    } else {\n      Object.assign(node, props)\n    }\n\n    if (Array.isArray(value)) {\n      node.children = value\n    } else if (value !== undefined && value !== null) {\n      node.value = String(value)\n    }\n\n    return node\n  }\n)\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n *\n * @typedef {string} Type\n * @typedef {Object<string, unknown>} Props\n *\n * @typedef {null|undefined|Type|Props|TestFunctionAnything|Array.<Type|Props|TestFunctionAnything>} Test\n */\n\n/**\n * Check if a node passes a test\n *\n * @callback TestFunctionAnything\n * @param {Node} node\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {boolean|void}\n */\n\n/**\n * Check if a node passes a certain node test\n *\n * @template {Node} X\n * @callback TestFunctionPredicate\n * @param {Node} node\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {node is X}\n */\n\n/**\n * @callback AssertAnything\n * @param {unknown} [node]\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {boolean}\n */\n\n/**\n * Check if a node passes a certain node test\n *\n * @template {Node} Y\n * @callback AssertPredicate\n * @param {unknown} [node]\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {node is Y}\n */\n\nexport const is =\n  /**\n   * Check if a node passes a test.\n   * When a `parent` node is known the `index` of node should also be given.\n   *\n   * @type {(\n   *   (<T extends Node>(node: unknown, test: T['type']|Partial<T>|TestFunctionPredicate<T>|Array.<T['type']|Partial<T>|TestFunctionPredicate<T>>, index?: number|null|undefined, parent?: Parent|null|undefined, context?: unknown) => node is T) &\n   *   ((node?: unknown, test?: Test, index?: number|null|undefined, parent?: Parent|null|undefined, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * Check if a node passes a test.\n     * When a `parent` node is known the `index` of node should also be given.\n     *\n     * @param {unknown} [node] Node to check\n     * @param {Test} [test]\n     * When nullish, checks if `node` is a `Node`.\n     * When `string`, works like passing `function (node) {return node.type === test}`.\n     * When `function` checks if function passed the node is true.\n     * When `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n     * When `array`, checks any one of the subtests pass.\n     * @param {number|null|undefined} [index] Position of `node` in `parent`\n     * @param {Parent|null|undefined} [parent] Parent of `node`\n     * @param {unknown} [context] Context object to invoke `test` with\n     * @returns {boolean} Whether test passed and `node` is a `Node` (object with `type` set to non-empty `string`).\n     */\n    // eslint-disable-next-line max-params\n    function is(node, test, index, parent, context) {\n      const check = convert(test)\n\n      if (\n        index !== undefined &&\n        index !== null &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite index')\n      }\n\n      if (\n        parent !== undefined &&\n        parent !== null &&\n        (!is(parent) || !parent.children)\n      ) {\n        throw new Error('Expected parent node')\n      }\n\n      if (\n        (parent === undefined || parent === null) !==\n        (index === undefined || index === null)\n      ) {\n        throw new Error('Expected both parent and index')\n      }\n\n      // @ts-expect-error Looks like a node.\n      return node && node.type && typeof node.type === 'string'\n        ? Boolean(check.call(context, node, index, parent))\n        : false\n    }\n  )\n\nexport const convert =\n  /**\n   * @type {(\n   *   (<T extends Node>(test: T['type']|Partial<T>|TestFunctionPredicate<T>) => AssertPredicate<T>) &\n   *   ((test?: Test) => AssertAnything)\n   * )}\n   */\n  (\n    /**\n     * Generate an assertion from a check.\n     * @param {Test} [test]\n     * When nullish, checks if `node` is a `Node`.\n     * When `string`, works like passing `function (node) {return node.type === test}`.\n     * When `function` checks if function passed the node is true.\n     * When `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n     * When `array`, checks any one of the subtests pass.\n     * @returns {AssertAnything}\n     */\n    function (test) {\n      if (test === undefined || test === null) {\n        return ok\n      }\n\n      if (typeof test === 'string') {\n        return typeFactory(test)\n      }\n\n      if (typeof test === 'object') {\n        return Array.isArray(test) ? anyFactory(test) : propsFactory(test)\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      throw new Error('Expected function, string, or object as test')\n    }\n  )\n/**\n * @param {Array.<Type|Props|TestFunctionAnything>} tests\n * @returns {AssertAnything}\n */\nfunction anyFactory(tests) {\n  /** @type {Array.<AssertAnything>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convert(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @param {unknown[]} parameters\n   * @returns {boolean}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].call(this, ...parameters)) return true\n    }\n\n    return false\n  }\n}\n\n/**\n * Utility to assert each property in `test` is represented in `node`, and each\n * values are strictly equal.\n *\n * @param {Props} check\n * @returns {AssertAnything}\n */\nfunction propsFactory(check) {\n  return castFactory(all)\n\n  /**\n   * @param {Node} node\n   * @returns {boolean}\n   */\n  function all(node) {\n    /** @type {string} */\n    let key\n\n    for (key in check) {\n      // @ts-expect-error: hush, it sure works as an index.\n      if (node[key] !== check[key]) return false\n    }\n\n    return true\n  }\n}\n\n/**\n * Utility to convert a string into a function which checks a given node’s type\n * for said string.\n *\n * @param {Type} check\n * @returns {AssertAnything}\n */\nfunction typeFactory(check) {\n  return castFactory(type)\n\n  /**\n   * @param {Node} node\n   */\n  function type(node) {\n    return node && node.type === check\n  }\n}\n\n/**\n * Utility to convert a string into a function which checks a given node’s type\n * for said string.\n * @param {TestFunctionAnything} check\n * @returns {AssertAnything}\n */\nfunction castFactory(check) {\n  return assertion\n\n  /**\n   * @this {unknown}\n   * @param {Array.<unknown>} parameters\n   * @returns {boolean}\n   */\n  function assertion(...parameters) {\n    // @ts-expect-error: spreading is fine.\n    return Boolean(check.call(this, ...parameters))\n  }\n}\n\n// Utility to return true.\nfunction ok() {\n  return true\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n * @typedef {import('./complex-types.js').Action} Action\n * @typedef {import('./complex-types.js').Index} Index\n * @typedef {import('./complex-types.js').ActionTuple} ActionTuple\n * @typedef {import('./complex-types.js').VisitorResult} VisitorResult\n * @typedef {import('./complex-types.js').Visitor} Visitor\n */\n\nimport {convert} from 'unist-util-is'\nimport {color} from './color.js'\n\n/**\n * Continue traversing as normal\n */\nexport const CONTINUE = true\n/**\n * Do not traverse this node’s children\n */\nexport const SKIP = 'skip'\n/**\n * Stop traversing immediately\n */\nexport const EXIT = false\n\n/**\n * Visit children of tree which pass test.\n *\n * @param tree\n *   Tree to walk\n * @param [test]\n *   `unist-util-is`-compatible test\n * @param visitor\n *   Function called for nodes that pass `test`.\n * @param [reverse=false]\n *   Traverse in reverse preorder (NRL) instead of preorder (NLR) (default).\n */\nexport const visitParents =\n  /**\n   * @type {(\n   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: import('./complex-types.js').BuildVisitor<Tree, Check>, reverse?: boolean) => void) &\n   *   (<Tree extends Node>(tree: Tree, visitor: import('./complex-types.js').BuildVisitor<Tree>, reverse?: boolean) => void)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {Test} test\n     * @param {import('./complex-types.js').Visitor<Node>} visitor\n     * @param {boolean} [reverse=false]\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        // @ts-expect-error no visitor given, so `visitor` is test.\n        visitor = test\n        test = null\n      }\n\n      const is = convert(test)\n      const step = reverse ? -1 : 1\n\n      factory(tree, null, [])()\n\n      /**\n       * @param {Node} node\n       * @param {number?} index\n       * @param {Array<Parent>} parents\n       */\n      function factory(node, index, parents) {\n        /** @type {Record<string, unknown>} */\n        // @ts-expect-error: hush\n        const value = typeof node === 'object' && node !== null ? node : {}\n        /** @type {string|undefined} */\n        let name\n\n        if (typeof value.type === 'string') {\n          name =\n            typeof value.tagName === 'string'\n              ? value.tagName\n              : typeof value.name === 'string'\n              ? value.name\n              : undefined\n\n          Object.defineProperty(visit, 'name', {\n            value:\n              'node (' +\n              color(value.type + (name ? '<' + name + '>' : '')) +\n              ')'\n          })\n        }\n\n        return visit\n\n        function visit() {\n          /** @type {ActionTuple} */\n          let result = []\n          /** @type {ActionTuple} */\n          let subresult\n          /** @type {number} */\n          let offset\n          /** @type {Array<Parent>} */\n          let grandparents\n\n          if (!test || is(node, index, parents[parents.length - 1] || null)) {\n            result = toResult(visitor(node, parents))\n\n            if (result[0] === EXIT) {\n              return result\n            }\n          }\n\n          // @ts-expect-error looks like a parent.\n          if (node.children && result[0] !== SKIP) {\n            // @ts-expect-error looks like a parent.\n            offset = (reverse ? node.children.length : -1) + step\n            // @ts-expect-error looks like a parent.\n            grandparents = parents.concat(node)\n\n            // @ts-expect-error looks like a parent.\n            while (offset > -1 && offset < node.children.length) {\n              // @ts-expect-error looks like a parent.\n              subresult = factory(node.children[offset], offset, grandparents)()\n\n              if (subresult[0] === EXIT) {\n                return subresult\n              }\n\n              offset =\n                typeof subresult[1] === 'number' ? subresult[1] : offset + step\n            }\n          }\n\n          return result\n        }\n      }\n    }\n  )\n\n/**\n * @param {VisitorResult} value\n * @returns {ActionTuple}\n */\nfunction toResult(value) {\n  if (Array.isArray(value)) {\n    return value\n  }\n\n  if (typeof value === 'number') {\n    return [CONTINUE, value]\n  }\n\n  return [value]\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n * @typedef {import('./complex-types.js').Visitor} Visitor\n */\n\nimport {visitParents} from 'unist-util-visit-parents'\n\n/**\n * Visit children of tree which pass test.\n *\n * @param tree\n *   Tree to walk\n * @param [test]\n *   `unist-util-is`-compatible test\n * @param visitor\n *   Function called for nodes that pass `test`.\n * @param reverse\n *   Traverse in reverse preorder (NRL) instead of preorder (NLR) (default).\n */\nexport const visit =\n  /**\n   * @type {(\n   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: import('./complex-types.js').BuildVisitor<Tree, Check>, reverse?: boolean) => void) &\n   *   (<Tree extends Node>(tree: Tree, visitor: import('./complex-types.js').BuildVisitor<Tree>, reverse?: boolean) => void)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {Test} test\n     * @param {import('./complex-types.js').Visitor} visitor\n     * @param {boolean} [reverse]\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        visitor = test\n        test = null\n      }\n\n      visitParents(tree, test, overload, reverse)\n\n      /**\n       * @param {Node} node\n       * @param {Array<Parent>} parents\n       */\n      function overload(node, parents) {\n        const parent = parents[parents.length - 1]\n        return visitor(\n          node,\n          parent ? parent.children.indexOf(node) : null,\n          parent\n        )\n      }\n    }\n  )\n\nexport {CONTINUE, EXIT, SKIP} from 'unist-util-visit-parents'\n","/**\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Node} Node\n * @typedef {Record<string, unknown> & {type: string, position?: PositionLike|undefined}} NodeLike\n * @typedef {import('unist').Point} Point\n *\n * @typedef {Partial<Point>} PointLike\n *\n * @typedef PositionLike\n * @property {PointLike} [start]\n * @property {PointLike} [end]\n */\n\nexport const pointStart = point('start')\nexport const pointEnd = point('end')\n\n/**\n * Get the positional info of `node`.\n *\n * @param {NodeLike|Node} [node]\n * @returns {Position}\n */\nexport function position(node) {\n  return {start: pointStart(node), end: pointEnd(node)}\n}\n\n/**\n * Get the positional info of `node`.\n *\n * @param {'start'|'end'} type\n */\nfunction point(type) {\n  return point\n\n  /**\n   * Get the positional info of `node`.\n   *\n   * @param {NodeLike|Node} [node]\n   * @returns {Point}\n   */\n  function point(node) {\n    const point = (node && node.position && node.position[type]) || {}\n\n    return {\n      line: point.line || null,\n      column: point.column || null,\n      offset: point.offset > -1 ? point.offset : null\n    }\n  }\n}\n","/**\n * @typedef {import('mdast').Root|import('mdast').Content} Node\n * @typedef {import('mdast').Definition} Definition\n */\n\nimport {visit} from 'unist-util-visit'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Find definitions in `node`.\n * Uses CommonMark precedence, which means that earlier definitions are\n * preferred over duplicate later definitions.\n *\n * @param {Node} node\n */\nexport function definitions(node) {\n  /** @type {Record<string, Definition>} */\n  const cache = Object.create(null)\n\n  if (!node || !node.type) {\n    throw new Error('mdast-util-definitions expected node')\n  }\n\n  visit(node, 'definition', (definition) => {\n    const id = clean(definition.identifier)\n    if (id && !own.call(cache, id)) {\n      cache[id] = definition\n    }\n  })\n\n  return definition\n\n  /**\n   * Get a node from the bound definition cache.\n   *\n   * @param {string} identifier\n   * @returns {Definition|null}\n   */\n  function definition(identifier) {\n    const id = clean(identifier)\n    return id && own.call(cache, id) ? cache[id] : null\n  }\n}\n\n/**\n * @param {string} [value]\n * @returns {string}\n */\nfunction clean(value) {\n  return String(value || '').toUpperCase()\n}\n","/**\n * @typedef {import('mdast').Root|import('mdast').Parent['children'][number]} MdastNode\n * @typedef {import('./index.js').H} H\n * @typedef {import('./index.js').Handler} Handler\n * @typedef {import('./index.js').Content} Content\n */\n\nimport {u} from 'unist-builder'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Transform an unknown node.\n * @type {Handler}\n * @param {MdastNode} node\n */\nfunction unknown(h, node) {\n  const data = node.data || {}\n\n  if (\n    'value' in node &&\n    !(\n      own.call(data, 'hName') ||\n      own.call(data, 'hProperties') ||\n      own.call(data, 'hChildren')\n    )\n  ) {\n    return h.augment(node, u('text', node.value))\n  }\n\n  return h(node, 'div', all(h, node))\n}\n\n/**\n * @type {Handler}\n * @param {MdastNode} node\n */\nexport function one(h, node, parent) {\n  const type = node && node.type\n  /** @type {Handler} */\n  let fn\n\n  // Fail on non-nodes.\n  if (!type) {\n    throw new Error('Expected node, got `' + node + '`')\n  }\n\n  if (own.call(h.handlers, type)) {\n    fn = h.handlers[type]\n  } else if (h.passThrough && h.passThrough.includes(type)) {\n    fn = returnNode\n  } else {\n    fn = h.unknownHandler\n  }\n\n  return (typeof fn === 'function' ? fn : unknown)(h, node, parent)\n}\n\n/**\n * @type {Handler}\n * @param {MdastNode} node\n */\nfunction returnNode(h, node) {\n  // @ts-expect-error: Pass through custom node.\n  return 'children' in node ? {...node, children: all(h, node)} : node\n}\n\n/**\n * @param {H} h\n * @param {MdastNode} parent\n */\nexport function all(h, parent) {\n  /** @type {Array<Content>} */\n  const values = []\n\n  if ('children' in parent) {\n    const nodes = parent.children\n    let index = -1\n\n    while (++index < nodes.length) {\n      const result = one(h, nodes[index], parent)\n\n      if (result) {\n        if (index && nodes[index - 1].type === 'break') {\n          if (!Array.isArray(result) && result.type === 'text') {\n            result.value = result.value.replace(/^\\s+/, '')\n          }\n\n          if (!Array.isArray(result) && result.type === 'element') {\n            const head = result.children[0]\n\n            if (head && head.type === 'text') {\n              head.value = head.value.replace(/^\\s+/, '')\n            }\n          }\n        }\n\n        if (Array.isArray(result)) {\n          values.push(...result)\n        } else {\n          values.push(result)\n        }\n      }\n    }\n  }\n\n  return values\n}\n","const characterReferences = {'\"': 'quot', '&': 'amp', '<': 'lt', '>': 'gt'}\n\n/**\n * Encode only the dangerous HTML characters.\n *\n * This ensures that certain characters which have special meaning in HTML are\n * dealt with.\n * Technically, we can skip `>` and `\"` in many cases, but CM includes them.\n *\n * @param {string} value\n * @returns {string}\n */\nexport function encode(value) {\n  return value.replace(/[\"&<>]/g, replace)\n\n  /**\n   * @param {string} value\n   * @returns {string}\n   */\n  function replace(value) {\n    // @ts-expect-error Hush, it’s fine.\n    return '&' + characterReferences[value] + ';'\n  }\n}\n","import {asciiAlphanumeric} from 'micromark-util-character'\nimport {encode} from 'micromark-util-encode'\n\n/**\n * Make a value safe for injection as a URL.\n *\n * This encodes unsafe characters with percent-encoding and skips already\n * encoded sequences (see `normalizeUri` below).\n * Further unsafe characters are encoded as character references (see\n * `micromark-util-encode`).\n *\n * Then, a regex of allowed protocols can be given, in which case the URL is\n * sanitized.\n * For example, `/^(https?|ircs?|mailto|xmpp)$/i` can be used for `a[href]`,\n * or `/^https?$/i` for `img[src]`.\n * If the URL includes an unknown protocol (one not matched by `protocol`, such\n * as a dangerous example, `javascript:`), the value is ignored.\n *\n * @param {string|undefined} url\n * @param {RegExp} [protocol]\n * @returns {string}\n */\nexport function sanitizeUri(url, protocol) {\n  const value = encode(normalizeUri(url || ''))\n\n  if (!protocol) {\n    return value\n  }\n\n  const colon = value.indexOf(':')\n  const questionMark = value.indexOf('?')\n  const numberSign = value.indexOf('#')\n  const slash = value.indexOf('/')\n\n  if (\n    // If there is no protocol, it’s relative.\n    colon < 0 || // If the first colon is after a `?`, `#`, or `/`, it’s not a protocol.\n    (slash > -1 && colon > slash) ||\n    (questionMark > -1 && colon > questionMark) ||\n    (numberSign > -1 && colon > numberSign) || // It is a protocol, it should be allowed.\n    protocol.test(value.slice(0, colon))\n  ) {\n    return value\n  }\n\n  return ''\n}\n/**\n * Normalize a URL (such as used in definitions).\n *\n * Encode unsafe characters with percent-encoding, skipping already encoded\n * sequences.\n *\n * @param {string} value\n * @returns {string}\n */\n\nfunction normalizeUri(value) {\n  /** @type {string[]} */\n  const result = []\n  let index = -1\n  let start = 0\n  let skip = 0\n\n  while (++index < value.length) {\n    const code = value.charCodeAt(index)\n    /** @type {string} */\n\n    let replace = '' // A correct percent encoded value.\n\n    if (\n      code === 37 &&\n      asciiAlphanumeric(value.charCodeAt(index + 1)) &&\n      asciiAlphanumeric(value.charCodeAt(index + 2))\n    ) {\n      skip = 2\n    } // ASCII.\n    else if (code < 128) {\n      if (!/[!#$&-;=?-Z_a-z~]/.test(String.fromCharCode(code))) {\n        replace = String.fromCharCode(code)\n      }\n    } // Astral.\n    else if (code > 55295 && code < 57344) {\n      const next = value.charCodeAt(index + 1) // A correct surrogate pair.\n\n      if (code < 56320 && next > 56319 && next < 57344) {\n        replace = String.fromCharCode(code, next)\n        skip = 1\n      } // Lone surrogate.\n      else {\n        replace = '\\uFFFD'\n      }\n    } // Unicode.\n    else {\n      replace = String.fromCharCode(code)\n    }\n\n    if (replace) {\n      result.push(value.slice(start, index), encodeURIComponent(replace))\n      start = index + skip + 1\n      replace = ''\n    }\n\n    if (skip) {\n      index += skip\n      skip = 0\n    }\n  }\n\n  return result.join('') + value.slice(start)\n}\n","/**\n * @typedef {import('./index.js').Content} Content\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * Wrap `nodes` with line feeds between each entry.\n * Optionally adds line feeds at the start and end.\n *\n * @param {Array<Content>} nodes\n * @param {boolean} [loose=false]\n * @returns {Array<Content>}\n */\nexport function wrap(nodes, loose) {\n  /** @type {Array<Content>} */\n  const result = []\n  let index = -1\n\n  if (loose) {\n    result.push(u('text', '\\n'))\n  }\n\n  while (++index < nodes.length) {\n    if (index) result.push(u('text', '\\n'))\n    result.push(nodes[index])\n  }\n\n  if (loose && nodes.length > 0) {\n    result.push(u('text', '\\n'))\n  }\n\n  return result\n}\n","/**\n * @typedef {import('mdast').FootnoteReference} FootnoteReference\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {sanitizeUri} from 'micromark-util-sanitize-uri'\nimport {u} from 'unist-builder'\n\n/**\n * @type {Handler}\n * @param {FootnoteReference} node\n */\nexport function footnoteReference(h, node) {\n  const id = String(node.identifier)\n  const safeId = sanitizeUri(id.toLowerCase())\n  const index = h.footnoteOrder.indexOf(id)\n  /** @type {number} */\n  let counter\n\n  if (index === -1) {\n    h.footnoteOrder.push(id)\n    h.footnoteCounts[id] = 1\n    counter = h.footnoteOrder.length\n  } else {\n    h.footnoteCounts[id]++\n    counter = index + 1\n  }\n\n  const reuseCounter = h.footnoteCounts[id]\n\n  return h(node, 'sup', [\n    h(\n      node.position,\n      'a',\n      {\n        href: '#' + h.clobberPrefix + 'fn-' + safeId,\n        id:\n          h.clobberPrefix +\n          'fnref-' +\n          safeId +\n          (reuseCounter > 1 ? '-' + reuseCounter : ''),\n        dataFootnoteRef: true,\n        ariaDescribedBy: 'footnote-label'\n      },\n      [u('text', String(counter))]\n    )\n  ])\n}\n","/**\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('./index.js').Handler} Handler\n * @typedef {import('./index.js').Content} Content\n */\n\nimport {u} from 'unist-builder'\nimport {all} from './traverse.js'\n\n/**\n * Return the content of a reference without definition as plain text.\n *\n * @type {Handler}\n * @param {ImageReference|LinkReference} node\n * @returns {Content|Array<Content>}\n */\nexport function revert(h, node) {\n  const subtype = node.referenceType\n  let suffix = ']'\n\n  if (subtype === 'collapsed') {\n    suffix += '[]'\n  } else if (subtype === 'full') {\n    suffix += '[' + (node.label || node.identifier) + ']'\n  }\n\n  if (node.type === 'imageReference') {\n    return u('text', '![' + node.alt + suffix)\n  }\n\n  const contents = all(h, node)\n  const head = contents[0]\n\n  if (head && head.type === 'text') {\n    head.value = '[' + head.value\n  } else {\n    contents.unshift(u('text', '['))\n  }\n\n  const tail = contents[contents.length - 1]\n\n  if (tail && tail.type === 'text') {\n    tail.value += suffix\n  } else {\n    contents.push(u('text', suffix))\n  }\n\n  return contents\n}\n","/**\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').List} List\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('hast').Element} Element\n * @typedef {import('../index.js').Handler} Handler\n * @typedef {import('../index.js').Content} Content\n */\n\nimport {u} from 'unist-builder'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {ListItem} node\n * @param {List} parent\n */\nexport function listItem(h, node, parent) {\n  const result = all(h, node)\n  const loose = parent ? listLoose(parent) : listItemLoose(node)\n  /** @type {Properties} */\n  const props = {}\n  /** @type {Array<Content>} */\n  const wrapped = []\n\n  if (typeof node.checked === 'boolean') {\n    /** @type {Element} */\n    let paragraph\n\n    if (\n      result[0] &&\n      result[0].type === 'element' &&\n      result[0].tagName === 'p'\n    ) {\n      paragraph = result[0]\n    } else {\n      paragraph = h(null, 'p', [])\n      result.unshift(paragraph)\n    }\n\n    if (paragraph.children.length > 0) {\n      paragraph.children.unshift(u('text', ' '))\n    }\n\n    paragraph.children.unshift(\n      h(null, 'input', {\n        type: 'checkbox',\n        checked: node.checked,\n        disabled: true\n      })\n    )\n\n    // According to github-markdown-css, this class hides bullet.\n    // See: <https://github.com/sindresorhus/github-markdown-css>.\n    props.className = ['task-list-item']\n  }\n\n  let index = -1\n\n  while (++index < result.length) {\n    const child = result[index]\n\n    // Add eols before nodes, except if this is a loose, first paragraph.\n    if (\n      loose ||\n      index !== 0 ||\n      child.type !== 'element' ||\n      child.tagName !== 'p'\n    ) {\n      wrapped.push(u('text', '\\n'))\n    }\n\n    if (child.type === 'element' && child.tagName === 'p' && !loose) {\n      wrapped.push(...child.children)\n    } else {\n      wrapped.push(child)\n    }\n  }\n\n  const tail = result[result.length - 1]\n\n  // Add a final eol.\n  if (tail && (loose || !('tagName' in tail) || tail.tagName !== 'p')) {\n    wrapped.push(u('text', '\\n'))\n  }\n\n  return h(node, 'li', props, wrapped)\n}\n\n/**\n * @param {List} node\n * @return {Boolean}\n */\nfunction listLoose(node) {\n  let loose = node.spread\n  const children = node.children\n  let index = -1\n\n  while (!loose && ++index < children.length) {\n    loose = listItemLoose(children[index])\n  }\n\n  return Boolean(loose)\n}\n\n/**\n * @param {ListItem} node\n * @return {Boolean}\n */\nfunction listItemLoose(node) {\n  const spread = node.spread\n\n  return spread === undefined || spread === null\n    ? node.children.length > 1\n    : spread\n}\n","const tab = 9 /* `\\t` */\nconst space = 32 /* ` ` */\n\n/**\n * Remove initial and final spaces and tabs at the line breaks in `value`.\n * Does not trim initial and final spaces and tabs of the value itself.\n *\n * @param {string} value\n *   Value to trim.\n * @returns {string}\n *   Trimmed value.\n */\nexport function trimLines(value) {\n  const source = String(value)\n  const search = /\\r?\\n|\\r/g\n  let match = search.exec(source)\n  let last = 0\n  /** @type {Array<string>} */\n  const lines = []\n\n  while (match) {\n    lines.push(\n      trimLine(source.slice(last, match.index), last > 0, true),\n      match[0]\n    )\n\n    last = match.index + match[0].length\n    match = search.exec(source)\n  }\n\n  lines.push(trimLine(source.slice(last), last > 0, false))\n\n  return lines.join('')\n}\n\n/**\n * @param {string} value\n *   Line to trim.\n * @param {boolean} start\n *   Whether to trim the start of the line.\n * @param {boolean} end\n *   Whether to trim the end of the line.\n * @returns {string}\n *   Trimmed line.\n */\nfunction trimLine(value, start, end) {\n  let startIndex = 0\n  let endIndex = value.length\n\n  if (start) {\n    let code = value.codePointAt(startIndex)\n\n    while (code === tab || code === space) {\n      startIndex++\n      code = value.codePointAt(startIndex)\n    }\n  }\n\n  if (end) {\n    let code = value.codePointAt(endIndex - 1)\n\n    while (code === tab || code === space) {\n      endIndex--\n      code = value.codePointAt(endIndex - 1)\n    }\n  }\n\n  return endIndex > startIndex ? value.slice(startIndex, endIndex) : ''\n}\n","import {blockquote} from './blockquote.js'\nimport {hardBreak} from './break.js'\nimport {code} from './code.js'\nimport {strikethrough} from './delete.js'\nimport {emphasis} from './emphasis.js'\nimport {footnoteReference} from './footnote-reference.js'\nimport {footnote} from './footnote.js'\nimport {heading} from './heading.js'\nimport {html} from './html.js'\nimport {imageReference} from './image-reference.js'\nimport {image} from './image.js'\nimport {inlineCode} from './inline-code.js'\nimport {linkReference} from './link-reference.js'\nimport {link} from './link.js'\nimport {listItem} from './list-item.js'\nimport {list} from './list.js'\nimport {paragraph} from './paragraph.js'\nimport {root} from './root.js'\nimport {strong} from './strong.js'\nimport {table} from './table.js'\nimport {text} from './text.js'\nimport {thematicBreak} from './thematic-break.js'\n\nexport const handlers = {\n  blockquote,\n  break: hardBreak,\n  code,\n  delete: strikethrough,\n  emphasis,\n  footnoteReference,\n  footnote,\n  heading,\n  html,\n  imageReference,\n  image,\n  inlineCode,\n  linkReference,\n  link,\n  listItem,\n  list,\n  paragraph,\n  root,\n  strong,\n  table,\n  text,\n  thematicBreak,\n  toml: ignore,\n  yaml: ignore,\n  definition: ignore,\n  footnoteDefinition: ignore\n}\n\n// Return nothing for nodes that are ignored.\nfunction ignore() {\n  return null\n}\n","/**\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {wrap} from '../wrap.js'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Blockquote} node\n */\nexport function blockquote(h, node) {\n  return h(node, 'blockquote', wrap(all(h, node), true))\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('mdast').Break} Break\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * @type {Handler}\n * @param {Break} node\n * @returns {Array<Element|Text>}\n */\nexport function hardBreak(h, node) {\n  return [h(node, 'br'), u('text', '\\n')]\n}\n","/**\n * @typedef {import('mdast').Code} Code\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * @type {Handler}\n * @param {Code} node\n */\nexport function code(h, node) {\n  const value = node.value ? node.value + '\\n' : ''\n  // To do: next major, use `node.lang` w/o regex, the splitting’s been going\n  // on for years in remark now.\n  const lang = node.lang && node.lang.match(/^[^ \\t]+(?=[ \\t]|$)/)\n  /** @type {Properties} */\n  const props = {}\n\n  if (lang) {\n    props.className = ['language-' + lang]\n  }\n\n  const code = h(node, 'code', props, [u('text', value)])\n\n  if (node.meta) {\n    code.data = {meta: node.meta}\n  }\n\n  return h(node.position, 'pre', [code])\n}\n","/**\n * @typedef {import('mdast').Delete} Delete\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Delete} node\n */\nexport function strikethrough(h, node) {\n  return h(node, 'del', all(h, node))\n}\n","/**\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Emphasis} node\n */\nexport function emphasis(h, node) {\n  return h(node, 'em', all(h, node))\n}\n","/**\n * @typedef {import('mdast').Footnote} Footnote\n * @typedef {import('../index.js').Handler} Handler\n *\n * @todo\n *   `footnote` (or “inline note”) are a pandoc footnotes feature (`^[a note]`)\n *   that does not exist in GFM.\n *   We still have support for it, so that things remain working with\n *   `micromark-extension-footnote` and `mdast-util-footnote`, but in the future\n *   we might be able to remove it?\n */\n\nimport {footnoteReference} from './footnote-reference.js'\n\n/**\n * @type {Handler}\n * @param {Footnote} node\n */\nexport function footnote(h, node) {\n  const footnoteById = h.footnoteById\n  let no = 1\n\n  while (no in footnoteById) no++\n\n  const identifier = String(no)\n\n  footnoteById[identifier] = {\n    type: 'footnoteDefinition',\n    identifier,\n    children: [{type: 'paragraph', children: node.children}],\n    position: node.position\n  }\n\n  return footnoteReference(h, {\n    type: 'footnoteReference',\n    identifier,\n    position: node.position\n  })\n}\n","/**\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Heading} node\n */\nexport function heading(h, node) {\n  return h(node, 'h' + node.depth, all(h, node))\n}\n","/**\n * @typedef {import('mdast').HTML} HTML\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * Return either a `raw` node in dangerous mode, otherwise nothing.\n *\n * @type {Handler}\n * @param {HTML} node\n */\nexport function html(h, node) {\n  return h.dangerous ? h.augment(node, u('raw', node.value)) : null\n}\n","/**\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport normalize from 'mdurl/encode.js'\nimport {revert} from '../revert.js'\n\n/**\n * @type {Handler}\n * @param {ImageReference} node\n */\nexport function imageReference(h, node) {\n  const def = h.definition(node.identifier)\n\n  if (!def) {\n    return revert(h, node)\n  }\n\n  /** @type {Properties} */\n  const props = {src: normalize(def.url || ''), alt: node.alt}\n\n  if (def.title !== null && def.title !== undefined) {\n    props.title = def.title\n  }\n\n  return h(node, 'img', props)\n}\n","/**\n * @typedef {import('mdast').Image} Image\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport normalize from 'mdurl/encode.js'\n\n/**\n * @type {Handler}\n * @param {Image} node\n */\nexport function image(h, node) {\n  /** @type {Properties} */\n  const props = {src: normalize(node.url), alt: node.alt}\n\n  if (node.title !== null && node.title !== undefined) {\n    props.title = node.title\n  }\n\n  return h(node, 'img', props)\n}\n","/**\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * @type {Handler}\n * @param {InlineCode} node\n */\nexport function inlineCode(h, node) {\n  return h(node, 'code', [u('text', node.value.replace(/\\r?\\n|\\r/g, ' '))])\n}\n","/**\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport normalize from 'mdurl/encode.js'\nimport {revert} from '../revert.js'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {LinkReference} node\n */\nexport function linkReference(h, node) {\n  const def = h.definition(node.identifier)\n\n  if (!def) {\n    return revert(h, node)\n  }\n\n  /** @type {Properties} */\n  const props = {href: normalize(def.url || '')}\n\n  if (def.title !== null && def.title !== undefined) {\n    props.title = def.title\n  }\n\n  return h(node, 'a', props, all(h, node))\n}\n","/**\n * @typedef {import('mdast').Link} Link\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport normalize from 'mdurl/encode.js'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Link} node\n */\nexport function link(h, node) {\n  /** @type {Properties} */\n  const props = {href: normalize(node.url)}\n\n  if (node.title !== null && node.title !== undefined) {\n    props.title = node.title\n  }\n\n  return h(node, 'a', props, all(h, node))\n}\n","/**\n * @typedef {import('mdast').List} List\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {wrap} from '../wrap.js'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {List} node\n * @returns {Element}\n */\nexport function list(h, node) {\n  /** @type {Properties} */\n  const props = {}\n  const name = node.ordered ? 'ol' : 'ul'\n  const items = all(h, node)\n  let index = -1\n\n  if (typeof node.start === 'number' && node.start !== 1) {\n    props.start = node.start\n  }\n\n  // Like GitHub, add a class for custom styling.\n  while (++index < items.length) {\n    const item = items[index]\n\n    if (\n      item.type === 'element' &&\n      item.tagName === 'li' &&\n      item.properties &&\n      Array.isArray(item.properties.className) &&\n      item.properties.className.includes('task-list-item')\n    ) {\n      props.className = ['contains-task-list']\n      break\n    }\n  }\n\n  return h(node, name, props, wrap(items, true))\n}\n","/**\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Paragraph} node\n */\nexport function paragraph(h, node) {\n  return h(node, 'p', all(h, node))\n}\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\nimport {all} from '../traverse.js'\nimport {wrap} from '../wrap.js'\n\n/**\n * @type {Handler}\n * @param {Root} node\n */\nexport function root(h, node) {\n  // @ts-expect-error `root`s are also fine.\n  return h.augment(node, u('root', wrap(all(h, node))))\n}\n","/**\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Strong} node\n */\nexport function strong(h, node) {\n  return h(node, 'strong', all(h, node))\n}\n","/**\n * @typedef {import('mdast').Table} Table\n * @typedef {import('mdast').TableCell} TableCell\n * @typedef {import('hast').Element} Element\n * @typedef {import('../index.js').Handler} Handler\n * @typedef {import('../index.js').Content} Content\n */\n\nimport {pointStart, pointEnd} from 'unist-util-position'\nimport {wrap} from '../wrap.js'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Table} node\n */\nexport function table(h, node) {\n  const rows = node.children\n  let index = -1\n  const align = node.align || []\n  /** @type {Array<Element>} */\n  const result = []\n\n  while (++index < rows.length) {\n    const row = rows[index].children\n    const name = index === 0 ? 'th' : 'td'\n    /** @type {Array<Content>} */\n    const out = []\n    let cellIndex = -1\n    const length = node.align ? align.length : row.length\n\n    while (++cellIndex < length) {\n      const cell = row[cellIndex]\n      out.push(\n        h(cell, name, {align: align[cellIndex]}, cell ? all(h, cell) : [])\n      )\n    }\n\n    result[index] = h(rows[index], 'tr', wrap(out, true))\n  }\n\n  return h(\n    node,\n    'table',\n    wrap(\n      [h(result[0].position, 'thead', wrap([result[0]], true))].concat(\n        result[1]\n          ? h(\n              {\n                start: pointStart(result[1]),\n                end: pointEnd(result[result.length - 1])\n              },\n              'tbody',\n              wrap(result.slice(1), true)\n            )\n          : []\n      ),\n      true\n    )\n  )\n}\n","/**\n * @typedef {import('mdast').Text} Text\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {trimLines} from 'trim-lines'\nimport {u} from 'unist-builder'\n\n/**\n * @type {Handler}\n * @param {Text} node\n */\nexport function text(h, node) {\n  return h.augment(node, u('text', trimLines(String(node.value))))\n}\n","/**\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n * @typedef {import('hast').Element} Element\n * @typedef {import('../index.js').Handler} Handler\n */\n\n/**\n * @type {Handler}\n * @param {ThematicBreak} [node]\n * @returns {Element}\n */\nexport function thematicBreak(h, node) {\n  return h(node, 'hr')\n}\n","/**\n * @typedef {import('mdast').Root|import('mdast').Parent['children'][number]} MdastNode\n * @typedef {import('hast').Root|import('hast').Parent['children'][number]} HastNode\n * @typedef {import('mdast').Parent} Parent\n * @typedef {import('mdast').Definition} Definition\n * @typedef {import('mdast').FootnoteDefinition} FootnoteDefinition\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('hast').Text} Text\n * @typedef {import('hast').Comment} Comment\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').ElementContent} Content\n * @typedef {import('unist-util-position').PositionLike} PositionLike\n *\n * @typedef EmbeddedHastFields\n * @property {string} [hName] Defines the tag name of an element\n * @property {Properties} [hProperties] Defines the properties of an element\n * @property {Array<Content>} [hChildren] Defines the (hast) children of an element\n *\n * @typedef {Record<string, unknown> & EmbeddedHastFields} Data unist data with embedded hast fields\n *\n * @typedef {MdastNode & {data?: Data}} NodeWithData unist node with embedded hast data\n *\n * @callback Handler\n * @param {H} h Handle context\n * @param {any} node mdast node to handle\n * @param {Parent|null} parent Parent of `node`\n * @returns {Content|Array<Content>|null|undefined} hast node\n *\n * @callback HFunctionProps\n * @param {MdastNode|PositionLike|null|undefined} node mdast node or unist position\n * @param {string} tagName HTML tag name\n * @param {Properties} props Properties\n * @param {Array<Content>?} [children] hast content\n * @returns {Element}\n *\n * @callback HFunctionNoProps\n * @param {MdastNode|PositionLike|null|undefined} node mdast node or unist position\n * @param {string} tagName HTML tag name\n * @param {Array<Content>?} [children] hast content\n * @returns {Element}\n *\n * @typedef HFields\n * @property {boolean} dangerous Whether HTML is allowed\n * @property {string} clobberPrefix Prefix to use to prevent DOM clobbering\n * @property {string} footnoteLabel Label to use to introduce the footnote section\n * @property {string} footnoteLabelTagName HTML used for the footnote label\n * @property {Properties} footnoteLabelProperties properties on the HTML tag used for the footnote label\n * @property {string} footnoteBackLabel Label to use to go back to a footnote call from the footnote section\n * @property {(identifier: string) => Definition|null} definition Definition cache\n * @property {Record<string, FootnoteDefinition>} footnoteById Footnote cache\n * @property {Array<string>} footnoteOrder Order in which footnotes occur\n * @property {Record<string, number>} footnoteCounts Counts the same footnote was used\n * @property {Handlers} handlers Applied handlers\n * @property {Handler} unknownHandler Handler for any none not in `passThrough` or otherwise handled\n * @property {(left: NodeWithData|PositionLike|null|undefined, right: Content) => Content} augment Like `h` but lower-level and usable on non-elements.\n * @property {Array<string>} passThrough List of node types to pass through untouched (except for their children).\n *\n * @typedef Options\n * @property {boolean} [allowDangerousHtml=false]\n *   Whether to allow `html` nodes and inject them as `raw` HTML\n * @property {string} [clobberPrefix='user-content-']\n *   Prefix to use before the `id` attribute to prevent it from *clobbering*.\n *   attributes.\n *   DOM clobbering is this:\n *\n *   ```html\n *   <p id=x></p>\n *   <script>alert(x)</script>\n *   ```\n *\n *   Elements by their ID are made available in browsers on the `window` object.\n *   Using a prefix prevents this from being a problem.\n * @property {string} [footnoteLabel='Footnotes']\n *   Label to use for the footnotes section.\n *   Affects screen reader users.\n *   Change it if you’re authoring in a different language.\n * @property {string} [footnoteLabelTagName='h2']\n *   HTML tag to use for the footnote label.\n *   Can be changed to match your document structure and play well with your choice of css.\n * @property {Properties} [footnoteLabelProperties={id: 'footnote-label', className: ['sr-only']}]\n *   Properties to use on the footnote label.\n *   A 'sr-only' class is added by default to hide this from sighted users.\n *   Change it to make the label visible, or add classes for other purposes.\n * @property {string} [footnoteBackLabel='Back to content']\n *   Label to use from backreferences back to their footnote call.\n *   Affects screen reader users.\n *   Change it if you’re authoring in a different language.\n * @property {Handlers} [handlers]\n *   Object mapping mdast nodes to functions handling them\n * @property {Array<string>} [passThrough]\n *   List of custom mdast node types to pass through (keep) in hast\n * @property {Handler} [unknownHandler]\n *   Handler for all unknown nodes.\n *\n * @typedef {Record<string, Handler>} Handlers\n *   Map of node types to handlers\n * @typedef {HFunctionProps & HFunctionNoProps & HFields} H\n *   Handle context\n */\n\nimport {u} from 'unist-builder'\nimport {visit} from 'unist-util-visit'\nimport {pointStart, pointEnd} from 'unist-util-position'\nimport {generated} from 'unist-util-generated'\nimport {definitions} from 'mdast-util-definitions'\nimport {one} from './traverse.js'\nimport {footer} from './footer.js'\nimport {handlers} from './handlers/index.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Factory to transform.\n * @param {MdastNode} tree mdast node\n * @param {Options} [options] Configuration\n * @returns {H} `h` function\n */\nfunction factory(tree, options) {\n  const settings = options || {}\n  const dangerous = settings.allowDangerousHtml || false\n  /** @type {Record<string, FootnoteDefinition>} */\n  const footnoteById = {}\n\n  h.dangerous = dangerous\n  h.clobberPrefix =\n    settings.clobberPrefix === undefined || settings.clobberPrefix === null\n      ? 'user-content-'\n      : settings.clobberPrefix\n  h.footnoteLabel = settings.footnoteLabel || 'Footnotes'\n  h.footnoteLabelTagName = settings.footnoteLabelTagName || 'h2'\n  h.footnoteLabelProperties = settings.footnoteLabelProperties || {\n    id: 'footnote-label',\n    className: ['sr-only']\n  }\n  h.footnoteBackLabel = settings.footnoteBackLabel || 'Back to content'\n  h.definition = definitions(tree)\n  h.footnoteById = footnoteById\n  /** @type {Array<string>} */\n  h.footnoteOrder = []\n  /** @type {Record<string, number>} */\n  h.footnoteCounts = {}\n  h.augment = augment\n  h.handlers = {...handlers, ...settings.handlers}\n  h.unknownHandler = settings.unknownHandler\n  h.passThrough = settings.passThrough\n\n  visit(tree, 'footnoteDefinition', (definition) => {\n    const id = String(definition.identifier).toUpperCase()\n\n    // Mimick CM behavior of link definitions.\n    // See: <https://github.com/syntax-tree/mdast-util-definitions/blob/8290999/index.js#L26>.\n    if (!own.call(footnoteById, id)) {\n      footnoteById[id] = definition\n    }\n  })\n\n  // @ts-expect-error Hush, it’s fine!\n  return h\n\n  /**\n   * Finalise the created `right`, a hast node, from `left`, an mdast node.\n   * @param {(NodeWithData|PositionLike)?} left\n   * @param {Content} right\n   * @returns {Content}\n   */\n  function augment(left, right) {\n    // Handle `data.hName`, `data.hProperties, `data.hChildren`.\n    if (left && 'data' in left && left.data) {\n      /** @type {Data} */\n      const data = left.data\n\n      if (data.hName) {\n        if (right.type !== 'element') {\n          right = {\n            type: 'element',\n            tagName: '',\n            properties: {},\n            children: []\n          }\n        }\n\n        right.tagName = data.hName\n      }\n\n      if (right.type === 'element' && data.hProperties) {\n        right.properties = {...right.properties, ...data.hProperties}\n      }\n\n      if ('children' in right && right.children && data.hChildren) {\n        right.children = data.hChildren\n      }\n    }\n\n    if (left) {\n      const ctx = 'type' in left ? left : {position: left}\n\n      if (!generated(ctx)) {\n        // @ts-expect-error: fine.\n        right.position = {start: pointStart(ctx), end: pointEnd(ctx)}\n      }\n    }\n\n    return right\n  }\n\n  /**\n   * Create an element for `node`.\n   *\n   * @type {HFunctionProps}\n   */\n  function h(node, tagName, props, children) {\n    if (Array.isArray(props)) {\n      children = props\n      props = {}\n    }\n\n    // @ts-expect-error augmenting an element yields an element.\n    return augment(node, {\n      type: 'element',\n      tagName,\n      properties: props || {},\n      children: children || []\n    })\n  }\n}\n\n/**\n * Transform `tree` (an mdast node) to a hast node.\n *\n * @param {MdastNode} tree mdast node\n * @param {Options} [options] Configuration\n * @returns {HastNode|null|undefined} hast node\n */\nexport function toHast(tree, options) {\n  const h = factory(tree, options)\n  const node = one(h, tree, null)\n  const foot = footer(h)\n\n  if (foot) {\n    // @ts-expect-error If there’s a footer, there were definitions, meaning block\n    // content.\n    // So assume `node` is a parent node.\n    node.children.push(u('text', '\\n'), foot)\n  }\n\n  return Array.isArray(node) ? {type: 'root', children: node} : node\n}\n\nexport {handlers as defaultHandlers} from './handlers/index.js'\n","/**\n * @typedef {Object} PointLike\n * @property {number} [line]\n * @property {number} [column]\n * @property {number} [offset]\n *\n * @typedef {Object} PositionLike\n * @property {PointLike} [start]\n * @property {PointLike} [end]\n *\n * @typedef {Object} NodeLike\n * @property {PositionLike} [position]\n */\n\n/**\n * Check if `node` is *generated*.\n *\n * @param {NodeLike} [node]\n * @returns {boolean}\n */\nexport function generated(node) {\n  return (\n    !node ||\n    !node.position ||\n    !node.position.start ||\n    !node.position.start.line ||\n    !node.position.start.column ||\n    !node.position.end ||\n    !node.position.end.line ||\n    !node.position.end.column\n  )\n}\n","/**\n * @typedef {import('mdast').BlockContent} BlockContent\n * @typedef {import('mdast').FootnoteDefinition} FootnoteDefinition\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('./index.js').H} H\n */\n\nimport {sanitizeUri} from 'micromark-util-sanitize-uri'\nimport {u} from 'unist-builder'\nimport {all} from './traverse.js'\nimport {wrap} from './wrap.js'\n\n/**\n * @param {H} h\n * @returns {Element|null}\n */\nexport function footer(h) {\n  let index = -1\n  /** @type {Array<ElementContent>} */\n  const listItems = []\n\n  while (++index < h.footnoteOrder.length) {\n    const def = h.footnoteById[h.footnoteOrder[index].toUpperCase()]\n\n    if (!def) {\n      continue\n    }\n\n    const content = all(h, def)\n    const id = String(def.identifier)\n    const safeId = sanitizeUri(id.toLowerCase())\n    let referenceIndex = 0\n    /** @type {Array<ElementContent>} */\n    const backReferences = []\n\n    while (++referenceIndex <= h.footnoteCounts[id]) {\n      /** @type {Element} */\n      const backReference = {\n        type: 'element',\n        tagName: 'a',\n        properties: {\n          href:\n            '#' +\n            h.clobberPrefix +\n            'fnref-' +\n            safeId +\n            (referenceIndex > 1 ? '-' + referenceIndex : ''),\n          dataFootnoteBackref: true,\n          className: ['data-footnote-backref'],\n          ariaLabel: h.footnoteBackLabel\n        },\n        children: [{type: 'text', value: '↩'}]\n      }\n\n      if (referenceIndex > 1) {\n        backReference.children.push({\n          type: 'element',\n          tagName: 'sup',\n          children: [{type: 'text', value: String(referenceIndex)}]\n        })\n      }\n\n      if (backReferences.length > 0) {\n        backReferences.push({type: 'text', value: ' '})\n      }\n\n      backReferences.push(backReference)\n    }\n\n    const tail = content[content.length - 1]\n\n    if (tail && tail.type === 'element' && tail.tagName === 'p') {\n      const tailTail = tail.children[tail.children.length - 1]\n      if (tailTail && tailTail.type === 'text') {\n        tailTail.value += ' '\n      } else {\n        tail.children.push({type: 'text', value: ' '})\n      }\n\n      tail.children.push(...backReferences)\n    } else {\n      content.push(...backReferences)\n    }\n\n    /** @type {Element} */\n    const listItem = {\n      type: 'element',\n      tagName: 'li',\n      properties: {id: h.clobberPrefix + 'fn-' + safeId},\n      children: wrap(content, true)\n    }\n\n    if (def.position) {\n      listItem.position = def.position\n    }\n\n    listItems.push(listItem)\n  }\n\n  if (listItems.length === 0) {\n    return null\n  }\n\n  return {\n    type: 'element',\n    tagName: 'section',\n    properties: {dataFootnotes: true, className: ['footnotes']},\n    children: [\n      {\n        type: 'element',\n        tagName: h.footnoteLabelTagName,\n        properties: JSON.parse(JSON.stringify(h.footnoteLabelProperties)),\n        children: [u('text', h.footnoteLabel)]\n      },\n      {type: 'text', value: '\\n'},\n      {\n        type: 'element',\n        tagName: 'ol',\n        properties: {},\n        children: wrap(listItems, true)\n      },\n      {type: 'text', value: '\\n'}\n    ]\n  }\n}\n","/**\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('mdast').Root} MdastRoot\n * @typedef {import('mdast-util-to-hast').Options} Options\n * @typedef {import('unified').Processor<any, any, any, any>} Processor\n *\n * @typedef {import('mdast-util-to-hast')} DoNotTouchAsThisImportIncludesRawInTree\n */\n\nimport {toHast} from 'mdast-util-to-hast'\n\n// Note: the `<MdastRoot, HastRoot>` overload doesn’t seem to work :'(\n\n/**\n * Plugin that turns markdown into HTML to support rehype.\n *\n * *   If a destination processor is given, that processor runs with a new HTML\n *     (hast) tree (bridge-mode).\n *     As the given processor runs with a hast tree, and rehype plugins support\n *     hast, that means rehype plugins can be used with the given processor.\n *     The hast tree is discarded in the end.\n *     It’s highly unlikely that you want to do this.\n * *   The common case is to not pass a destination processor, in which case the\n *     current processor continues running with a new HTML (hast) tree\n *     (mutate-mode).\n *     As the current processor continues with a hast tree, and rehype plugins\n *     support hast, that means rehype plugins can be used after\n *     `remark-rehype`.\n *     It’s likely that this is what you want to do.\n *\n * @param destination\n *   Optional unified processor.\n * @param options\n *   Options passed to `mdast-util-to-hast`.\n */\nconst remarkRehype =\n  /** @type {(import('unified').Plugin<[Processor, Options?]|[null|undefined, Options?]|[Options]|[], MdastRoot>)} */\n  (\n    function (destination, options) {\n      return destination && 'run' in destination\n        ? bridge(destination, options)\n        : mutate(destination || options)\n    }\n  )\n\nexport default remarkRehype\n\n/**\n * Bridge-mode.\n * Runs the destination with the new hast tree.\n *\n * @type {import('unified').Plugin<[Processor, Options?], MdastRoot>}\n */\nfunction bridge(destination, options) {\n  return (node, file, next) => {\n    destination.run(toHast(node, options), file, (error) => {\n      next(error)\n    })\n  }\n}\n\n/**\n * Mutate-mode.\n * Further plugins run on the hast tree.\n *\n * @type {import('unified').Plugin<[Options?]|void[], MdastRoot, HastRoot>}\n */\nfunction mutate(options) {\n  // @ts-expect-error: assume a corresponding node is returned by `toHast`.\n  return (node) => toHast(node, options)\n}\n","/**\n * @typedef {import('./info.js').Info} Info\n * @typedef {Record<string, Info>} Properties\n * @typedef {Record<string, string>} Normal\n */\n\nexport class Schema {\n  /**\n   * @constructor\n   * @param {Properties} property\n   * @param {Normal} normal\n   * @param {string} [space]\n   */\n  constructor(property, normal, space) {\n    this.property = property\n    this.normal = normal\n    if (space) {\n      this.space = space\n    }\n  }\n}\n\n/** @type {Properties} */\nSchema.prototype.property = {}\n/** @type {Normal} */\nSchema.prototype.normal = {}\n/** @type {string|null} */\nSchema.prototype.space = null\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n */\n\nimport {Schema} from './schema.js'\n\n/**\n * @param {Schema[]} definitions\n * @param {string} [space]\n * @returns {Schema}\n */\nexport function merge(definitions, space) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  let index = -1\n\n  while (++index < definitions.length) {\n    Object.assign(property, definitions[index].property)\n    Object.assign(normal, definitions[index].normal)\n  }\n\n  return new Schema(property, normal, space)\n}\n","/**\n * @param {string} value\n * @returns {string}\n */\nexport function normalize(value) {\n  return value.toLowerCase()\n}\n","export class Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   */\n  constructor(property, attribute) {\n    /** @type {string} */\n    this.property = property\n    /** @type {string} */\n    this.attribute = attribute\n  }\n}\n\n/** @type {string|null} */\nInfo.prototype.space = null\nInfo.prototype.boolean = false\nInfo.prototype.booleanish = false\nInfo.prototype.overloadedBoolean = false\nInfo.prototype.number = false\nInfo.prototype.commaSeparated = false\nInfo.prototype.spaceSeparated = false\nInfo.prototype.commaOrSpaceSeparated = false\nInfo.prototype.mustUseProperty = false\nInfo.prototype.defined = false\n","let powers = 0\n\nexport const boolean = increment()\nexport const booleanish = increment()\nexport const overloadedBoolean = increment()\nexport const number = increment()\nexport const spaceSeparated = increment()\nexport const commaSeparated = increment()\nexport const commaOrSpaceSeparated = increment()\n\nfunction increment() {\n  return 2 ** ++powers\n}\n","import {Info} from './info.js'\nimport * as types from './types.js'\n\n/** @type {Array<keyof types>} */\n// @ts-expect-error: hush.\nconst checks = Object.keys(types)\n\nexport class DefinedInfo extends Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   * @param {number|null} [mask]\n   * @param {string} [space]\n   */\n  constructor(property, attribute, mask, space) {\n    let index = -1\n\n    super(property, attribute)\n\n    mark(this, 'space', space)\n\n    if (typeof mask === 'number') {\n      while (++index < checks.length) {\n        const check = checks[index]\n        mark(this, checks[index], (mask & types[check]) === types[check])\n      }\n    }\n  }\n}\n\nDefinedInfo.prototype.defined = true\n\n/**\n * @param {DefinedInfo} values\n * @param {string} key\n * @param {unknown} value\n */\nfunction mark(values, key, value) {\n  if (value) {\n    // @ts-expect-error: assume `value` matches the expected value of `key`.\n    values[key] = value\n  }\n}\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n *\n * @typedef {Record<string, string>} Attributes\n *\n * @typedef {Object} Definition\n * @property {Record<string, number|null>} properties\n * @property {(attributes: Attributes, property: string) => string} transform\n * @property {string} [space]\n * @property {Attributes} [attributes]\n * @property {Array<string>} [mustUseProperty]\n */\n\nimport {normalize} from '../normalize.js'\nimport {Schema} from './schema.js'\nimport {DefinedInfo} from './defined-info.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param {Definition} definition\n * @returns {Schema}\n */\nexport function create(definition) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  /** @type {string} */\n  let prop\n\n  for (prop in definition.properties) {\n    if (own.call(definition.properties, prop)) {\n      const value = definition.properties[prop]\n      const info = new DefinedInfo(\n        prop,\n        definition.transform(definition.attributes || {}, prop),\n        value,\n        definition.space\n      )\n\n      if (\n        definition.mustUseProperty &&\n        definition.mustUseProperty.includes(prop)\n      ) {\n        info.mustUseProperty = true\n      }\n\n      property[prop] = info\n\n      normal[normalize(prop)] = prop\n      normal[normalize(info.attribute)] = prop\n    }\n  }\n\n  return new Schema(property, normal, definition.space)\n}\n","import {create} from './util/create.js'\n\nexport const xlink = create({\n  space: 'xlink',\n  transform(_, prop) {\n    return 'xlink:' + prop.slice(5).toLowerCase()\n  },\n  properties: {\n    xLinkActuate: null,\n    xLinkArcRole: null,\n    xLinkHref: null,\n    xLinkRole: null,\n    xLinkShow: null,\n    xLinkTitle: null,\n    xLinkType: null\n  }\n})\n","import {create} from './util/create.js'\n\nexport const xml = create({\n  space: 'xml',\n  transform(_, prop) {\n    return 'xml:' + prop.slice(3).toLowerCase()\n  },\n  properties: {xmlLang: null, xmlBase: null, xmlSpace: null}\n})\n","/**\n * @param {Record<string, string>} attributes\n * @param {string} attribute\n * @returns {string}\n */\nexport function caseSensitiveTransform(attributes, attribute) {\n  return attribute in attributes ? attributes[attribute] : attribute\n}\n","import {caseSensitiveTransform} from './case-sensitive-transform.js'\n\n/**\n * @param {Record<string, string>} attributes\n * @param {string} property\n * @returns {string}\n */\nexport function caseInsensitiveTransform(attributes, property) {\n  return caseSensitiveTransform(attributes, property.toLowerCase())\n}\n","import {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const xmlns = create({\n  space: 'xmlns',\n  attributes: {xmlnsxlink: 'xmlns:xlink'},\n  transform: caseInsensitiveTransform,\n  properties: {xmlns: null, xmlnsXLink: null}\n})\n","import {booleanish, number, spaceSeparated} from './util/types.js'\nimport {create} from './util/create.js'\n\nexport const aria = create({\n  transform(_, prop) {\n    return prop === 'role' ? prop : 'aria-' + prop.slice(4).toLowerCase()\n  },\n  properties: {\n    ariaActiveDescendant: null,\n    ariaAtomic: booleanish,\n    ariaAutoComplete: null,\n    ariaBusy: booleanish,\n    ariaChecked: booleanish,\n    ariaColCount: number,\n    ariaColIndex: number,\n    ariaColSpan: number,\n    ariaControls: spaceSeparated,\n    ariaCurrent: null,\n    ariaDescribedBy: spaceSeparated,\n    ariaDetails: null,\n    ariaDisabled: booleanish,\n    ariaDropEffect: spaceSeparated,\n    ariaErrorMessage: null,\n    ariaExpanded: booleanish,\n    ariaFlowTo: spaceSeparated,\n    ariaGrabbed: booleanish,\n    ariaHasPopup: null,\n    ariaHidden: booleanish,\n    ariaInvalid: null,\n    ariaKeyShortcuts: null,\n    ariaLabel: null,\n    ariaLabelledBy: spaceSeparated,\n    ariaLevel: number,\n    ariaLive: null,\n    ariaModal: booleanish,\n    ariaMultiLine: booleanish,\n    ariaMultiSelectable: booleanish,\n    ariaOrientation: null,\n    ariaOwns: spaceSeparated,\n    ariaPlaceholder: null,\n    ariaPosInSet: number,\n    ariaPressed: booleanish,\n    ariaReadOnly: booleanish,\n    ariaRelevant: null,\n    ariaRequired: booleanish,\n    ariaRoleDescription: spaceSeparated,\n    ariaRowCount: number,\n    ariaRowIndex: number,\n    ariaRowSpan: number,\n    ariaSelected: booleanish,\n    ariaSetSize: number,\n    ariaSort: null,\n    ariaValueMax: number,\n    ariaValueMin: number,\n    ariaValueNow: number,\n    ariaValueText: null,\n    role: null\n  }\n})\n","import {\n  boolean,\n  overloadedBoolean,\n  booleanish,\n  number,\n  spaceSeparated,\n  commaSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const html = create({\n  space: 'html',\n  attributes: {\n    acceptcharset: 'accept-charset',\n    classname: 'class',\n    htmlfor: 'for',\n    httpequiv: 'http-equiv'\n  },\n  transform: caseInsensitiveTransform,\n  mustUseProperty: ['checked', 'multiple', 'muted', 'selected'],\n  properties: {\n    // Standard Properties.\n    abbr: null,\n    accept: commaSeparated,\n    acceptCharset: spaceSeparated,\n    accessKey: spaceSeparated,\n    action: null,\n    allow: null,\n    allowFullScreen: boolean,\n    allowPaymentRequest: boolean,\n    allowUserMedia: boolean,\n    alt: null,\n    as: null,\n    async: boolean,\n    autoCapitalize: null,\n    autoComplete: spaceSeparated,\n    autoFocus: boolean,\n    autoPlay: boolean,\n    capture: boolean,\n    charSet: null,\n    checked: boolean,\n    cite: null,\n    className: spaceSeparated,\n    cols: number,\n    colSpan: null,\n    content: null,\n    contentEditable: booleanish,\n    controls: boolean,\n    controlsList: spaceSeparated,\n    coords: number | commaSeparated,\n    crossOrigin: null,\n    data: null,\n    dateTime: null,\n    decoding: null,\n    default: boolean,\n    defer: boolean,\n    dir: null,\n    dirName: null,\n    disabled: boolean,\n    download: overloadedBoolean,\n    draggable: booleanish,\n    encType: null,\n    enterKeyHint: null,\n    form: null,\n    formAction: null,\n    formEncType: null,\n    formMethod: null,\n    formNoValidate: boolean,\n    formTarget: null,\n    headers: spaceSeparated,\n    height: number,\n    hidden: boolean,\n    high: number,\n    href: null,\n    hrefLang: null,\n    htmlFor: spaceSeparated,\n    httpEquiv: spaceSeparated,\n    id: null,\n    imageSizes: null,\n    imageSrcSet: null,\n    inputMode: null,\n    integrity: null,\n    is: null,\n    isMap: boolean,\n    itemId: null,\n    itemProp: spaceSeparated,\n    itemRef: spaceSeparated,\n    itemScope: boolean,\n    itemType: spaceSeparated,\n    kind: null,\n    label: null,\n    lang: null,\n    language: null,\n    list: null,\n    loading: null,\n    loop: boolean,\n    low: number,\n    manifest: null,\n    max: null,\n    maxLength: number,\n    media: null,\n    method: null,\n    min: null,\n    minLength: number,\n    multiple: boolean,\n    muted: boolean,\n    name: null,\n    nonce: null,\n    noModule: boolean,\n    noValidate: boolean,\n    onAbort: null,\n    onAfterPrint: null,\n    onAuxClick: null,\n    onBeforePrint: null,\n    onBeforeUnload: null,\n    onBlur: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onContextLost: null,\n    onContextMenu: null,\n    onContextRestored: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFormData: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLanguageChange: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadEnd: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMessageError: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRejectionHandled: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onSecurityPolicyViolation: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onSlotChange: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnhandledRejection: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onWheel: null,\n    open: boolean,\n    optimum: number,\n    pattern: null,\n    ping: spaceSeparated,\n    placeholder: null,\n    playsInline: boolean,\n    poster: null,\n    preload: null,\n    readOnly: boolean,\n    referrerPolicy: null,\n    rel: spaceSeparated,\n    required: boolean,\n    reversed: boolean,\n    rows: number,\n    rowSpan: number,\n    sandbox: spaceSeparated,\n    scope: null,\n    scoped: boolean,\n    seamless: boolean,\n    selected: boolean,\n    shape: null,\n    size: number,\n    sizes: null,\n    slot: null,\n    span: number,\n    spellCheck: booleanish,\n    src: null,\n    srcDoc: null,\n    srcLang: null,\n    srcSet: null,\n    start: number,\n    step: null,\n    style: null,\n    tabIndex: number,\n    target: null,\n    title: null,\n    translate: null,\n    type: null,\n    typeMustMatch: boolean,\n    useMap: null,\n    value: booleanish,\n    width: number,\n    wrap: null,\n\n    // Legacy.\n    // See: https://html.spec.whatwg.org/#other-elements,-attributes-and-apis\n    align: null, // Several. Use CSS `text-align` instead,\n    aLink: null, // `<body>`. Use CSS `a:active {color}` instead\n    archive: spaceSeparated, // `<object>`. List of URIs to archives\n    axis: null, // `<td>` and `<th>`. Use `scope` on `<th>`\n    background: null, // `<body>`. Use CSS `background-image` instead\n    bgColor: null, // `<body>` and table elements. Use CSS `background-color` instead\n    border: number, // `<table>`. Use CSS `border-width` instead,\n    borderColor: null, // `<table>`. Use CSS `border-color` instead,\n    bottomMargin: number, // `<body>`\n    cellPadding: null, // `<table>`\n    cellSpacing: null, // `<table>`\n    char: null, // Several table elements. When `align=char`, sets the character to align on\n    charOff: null, // Several table elements. When `char`, offsets the alignment\n    classId: null, // `<object>`\n    clear: null, // `<br>`. Use CSS `clear` instead\n    code: null, // `<object>`\n    codeBase: null, // `<object>`\n    codeType: null, // `<object>`\n    color: null, // `<font>` and `<hr>`. Use CSS instead\n    compact: boolean, // Lists. Use CSS to reduce space between items instead\n    declare: boolean, // `<object>`\n    event: null, // `<script>`\n    face: null, // `<font>`. Use CSS instead\n    frame: null, // `<table>`\n    frameBorder: null, // `<iframe>`. Use CSS `border` instead\n    hSpace: number, // `<img>` and `<object>`\n    leftMargin: number, // `<body>`\n    link: null, // `<body>`. Use CSS `a:link {color: *}` instead\n    longDesc: null, // `<frame>`, `<iframe>`, and `<img>`. Use an `<a>`\n    lowSrc: null, // `<img>`. Use a `<picture>`\n    marginHeight: number, // `<body>`\n    marginWidth: number, // `<body>`\n    noResize: boolean, // `<frame>`\n    noHref: boolean, // `<area>`. Use no href instead of an explicit `nohref`\n    noShade: boolean, // `<hr>`. Use background-color and height instead of borders\n    noWrap: boolean, // `<td>` and `<th>`\n    object: null, // `<applet>`\n    profile: null, // `<head>`\n    prompt: null, // `<isindex>`\n    rev: null, // `<link>`\n    rightMargin: number, // `<body>`\n    rules: null, // `<table>`\n    scheme: null, // `<meta>`\n    scrolling: booleanish, // `<frame>`. Use overflow in the child context\n    standby: null, // `<object>`\n    summary: null, // `<table>`\n    text: null, // `<body>`. Use CSS `color` instead\n    topMargin: number, // `<body>`\n    valueType: null, // `<param>`\n    version: null, // `<html>`. Use a doctype.\n    vAlign: null, // Several. Use CSS `vertical-align` instead\n    vLink: null, // `<body>`. Use CSS `a:visited {color}` instead\n    vSpace: number, // `<img>` and `<object>`\n\n    // Non-standard Properties.\n    allowTransparency: null,\n    autoCorrect: null,\n    autoSave: null,\n    disablePictureInPicture: boolean,\n    disableRemotePlayback: boolean,\n    prefix: null,\n    property: null,\n    results: number,\n    security: null,\n    unselectable: null\n  }\n})\n","import {\n  boolean,\n  number,\n  spaceSeparated,\n  commaSeparated,\n  commaOrSpaceSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseSensitiveTransform} from './util/case-sensitive-transform.js'\n\nexport const svg = create({\n  space: 'svg',\n  attributes: {\n    accentHeight: 'accent-height',\n    alignmentBaseline: 'alignment-baseline',\n    arabicForm: 'arabic-form',\n    baselineShift: 'baseline-shift',\n    capHeight: 'cap-height',\n    className: 'class',\n    clipPath: 'clip-path',\n    clipRule: 'clip-rule',\n    colorInterpolation: 'color-interpolation',\n    colorInterpolationFilters: 'color-interpolation-filters',\n    colorProfile: 'color-profile',\n    colorRendering: 'color-rendering',\n    crossOrigin: 'crossorigin',\n    dataType: 'datatype',\n    dominantBaseline: 'dominant-baseline',\n    enableBackground: 'enable-background',\n    fillOpacity: 'fill-opacity',\n    fillRule: 'fill-rule',\n    floodColor: 'flood-color',\n    floodOpacity: 'flood-opacity',\n    fontFamily: 'font-family',\n    fontSize: 'font-size',\n    fontSizeAdjust: 'font-size-adjust',\n    fontStretch: 'font-stretch',\n    fontStyle: 'font-style',\n    fontVariant: 'font-variant',\n    fontWeight: 'font-weight',\n    glyphName: 'glyph-name',\n    glyphOrientationHorizontal: 'glyph-orientation-horizontal',\n    glyphOrientationVertical: 'glyph-orientation-vertical',\n    hrefLang: 'hreflang',\n    horizAdvX: 'horiz-adv-x',\n    horizOriginX: 'horiz-origin-x',\n    horizOriginY: 'horiz-origin-y',\n    imageRendering: 'image-rendering',\n    letterSpacing: 'letter-spacing',\n    lightingColor: 'lighting-color',\n    markerEnd: 'marker-end',\n    markerMid: 'marker-mid',\n    markerStart: 'marker-start',\n    navDown: 'nav-down',\n    navDownLeft: 'nav-down-left',\n    navDownRight: 'nav-down-right',\n    navLeft: 'nav-left',\n    navNext: 'nav-next',\n    navPrev: 'nav-prev',\n    navRight: 'nav-right',\n    navUp: 'nav-up',\n    navUpLeft: 'nav-up-left',\n    navUpRight: 'nav-up-right',\n    onAbort: 'onabort',\n    onActivate: 'onactivate',\n    onAfterPrint: 'onafterprint',\n    onBeforePrint: 'onbeforeprint',\n    onBegin: 'onbegin',\n    onCancel: 'oncancel',\n    onCanPlay: 'oncanplay',\n    onCanPlayThrough: 'oncanplaythrough',\n    onChange: 'onchange',\n    onClick: 'onclick',\n    onClose: 'onclose',\n    onCopy: 'oncopy',\n    onCueChange: 'oncuechange',\n    onCut: 'oncut',\n    onDblClick: 'ondblclick',\n    onDrag: 'ondrag',\n    onDragEnd: 'ondragend',\n    onDragEnter: 'ondragenter',\n    onDragExit: 'ondragexit',\n    onDragLeave: 'ondragleave',\n    onDragOver: 'ondragover',\n    onDragStart: 'ondragstart',\n    onDrop: 'ondrop',\n    onDurationChange: 'ondurationchange',\n    onEmptied: 'onemptied',\n    onEnd: 'onend',\n    onEnded: 'onended',\n    onError: 'onerror',\n    onFocus: 'onfocus',\n    onFocusIn: 'onfocusin',\n    onFocusOut: 'onfocusout',\n    onHashChange: 'onhashchange',\n    onInput: 'oninput',\n    onInvalid: 'oninvalid',\n    onKeyDown: 'onkeydown',\n    onKeyPress: 'onkeypress',\n    onKeyUp: 'onkeyup',\n    onLoad: 'onload',\n    onLoadedData: 'onloadeddata',\n    onLoadedMetadata: 'onloadedmetadata',\n    onLoadStart: 'onloadstart',\n    onMessage: 'onmessage',\n    onMouseDown: 'onmousedown',\n    onMouseEnter: 'onmouseenter',\n    onMouseLeave: 'onmouseleave',\n    onMouseMove: 'onmousemove',\n    onMouseOut: 'onmouseout',\n    onMouseOver: 'onmouseover',\n    onMouseUp: 'onmouseup',\n    onMouseWheel: 'onmousewheel',\n    onOffline: 'onoffline',\n    onOnline: 'ononline',\n    onPageHide: 'onpagehide',\n    onPageShow: 'onpageshow',\n    onPaste: 'onpaste',\n    onPause: 'onpause',\n    onPlay: 'onplay',\n    onPlaying: 'onplaying',\n    onPopState: 'onpopstate',\n    onProgress: 'onprogress',\n    onRateChange: 'onratechange',\n    onRepeat: 'onrepeat',\n    onReset: 'onreset',\n    onResize: 'onresize',\n    onScroll: 'onscroll',\n    onSeeked: 'onseeked',\n    onSeeking: 'onseeking',\n    onSelect: 'onselect',\n    onShow: 'onshow',\n    onStalled: 'onstalled',\n    onStorage: 'onstorage',\n    onSubmit: 'onsubmit',\n    onSuspend: 'onsuspend',\n    onTimeUpdate: 'ontimeupdate',\n    onToggle: 'ontoggle',\n    onUnload: 'onunload',\n    onVolumeChange: 'onvolumechange',\n    onWaiting: 'onwaiting',\n    onZoom: 'onzoom',\n    overlinePosition: 'overline-position',\n    overlineThickness: 'overline-thickness',\n    paintOrder: 'paint-order',\n    panose1: 'panose-1',\n    pointerEvents: 'pointer-events',\n    referrerPolicy: 'referrerpolicy',\n    renderingIntent: 'rendering-intent',\n    shapeRendering: 'shape-rendering',\n    stopColor: 'stop-color',\n    stopOpacity: 'stop-opacity',\n    strikethroughPosition: 'strikethrough-position',\n    strikethroughThickness: 'strikethrough-thickness',\n    strokeDashArray: 'stroke-dasharray',\n    strokeDashOffset: 'stroke-dashoffset',\n    strokeLineCap: 'stroke-linecap',\n    strokeLineJoin: 'stroke-linejoin',\n    strokeMiterLimit: 'stroke-miterlimit',\n    strokeOpacity: 'stroke-opacity',\n    strokeWidth: 'stroke-width',\n    tabIndex: 'tabindex',\n    textAnchor: 'text-anchor',\n    textDecoration: 'text-decoration',\n    textRendering: 'text-rendering',\n    typeOf: 'typeof',\n    underlinePosition: 'underline-position',\n    underlineThickness: 'underline-thickness',\n    unicodeBidi: 'unicode-bidi',\n    unicodeRange: 'unicode-range',\n    unitsPerEm: 'units-per-em',\n    vAlphabetic: 'v-alphabetic',\n    vHanging: 'v-hanging',\n    vIdeographic: 'v-ideographic',\n    vMathematical: 'v-mathematical',\n    vectorEffect: 'vector-effect',\n    vertAdvY: 'vert-adv-y',\n    vertOriginX: 'vert-origin-x',\n    vertOriginY: 'vert-origin-y',\n    wordSpacing: 'word-spacing',\n    writingMode: 'writing-mode',\n    xHeight: 'x-height',\n    // These were camelcased in Tiny. Now lowercased in SVG 2\n    playbackOrder: 'playbackorder',\n    timelineBegin: 'timelinebegin'\n  },\n  transform: caseSensitiveTransform,\n  properties: {\n    about: commaOrSpaceSeparated,\n    accentHeight: number,\n    accumulate: null,\n    additive: null,\n    alignmentBaseline: null,\n    alphabetic: number,\n    amplitude: number,\n    arabicForm: null,\n    ascent: number,\n    attributeName: null,\n    attributeType: null,\n    azimuth: number,\n    bandwidth: null,\n    baselineShift: null,\n    baseFrequency: null,\n    baseProfile: null,\n    bbox: null,\n    begin: null,\n    bias: number,\n    by: null,\n    calcMode: null,\n    capHeight: number,\n    className: spaceSeparated,\n    clip: null,\n    clipPath: null,\n    clipPathUnits: null,\n    clipRule: null,\n    color: null,\n    colorInterpolation: null,\n    colorInterpolationFilters: null,\n    colorProfile: null,\n    colorRendering: null,\n    content: null,\n    contentScriptType: null,\n    contentStyleType: null,\n    crossOrigin: null,\n    cursor: null,\n    cx: null,\n    cy: null,\n    d: null,\n    dataType: null,\n    defaultAction: null,\n    descent: number,\n    diffuseConstant: number,\n    direction: null,\n    display: null,\n    dur: null,\n    divisor: number,\n    dominantBaseline: null,\n    download: boolean,\n    dx: null,\n    dy: null,\n    edgeMode: null,\n    editable: null,\n    elevation: number,\n    enableBackground: null,\n    end: null,\n    event: null,\n    exponent: number,\n    externalResourcesRequired: null,\n    fill: null,\n    fillOpacity: number,\n    fillRule: null,\n    filter: null,\n    filterRes: null,\n    filterUnits: null,\n    floodColor: null,\n    floodOpacity: null,\n    focusable: null,\n    focusHighlight: null,\n    fontFamily: null,\n    fontSize: null,\n    fontSizeAdjust: null,\n    fontStretch: null,\n    fontStyle: null,\n    fontVariant: null,\n    fontWeight: null,\n    format: null,\n    fr: null,\n    from: null,\n    fx: null,\n    fy: null,\n    g1: commaSeparated,\n    g2: commaSeparated,\n    glyphName: commaSeparated,\n    glyphOrientationHorizontal: null,\n    glyphOrientationVertical: null,\n    glyphRef: null,\n    gradientTransform: null,\n    gradientUnits: null,\n    handler: null,\n    hanging: number,\n    hatchContentUnits: null,\n    hatchUnits: null,\n    height: null,\n    href: null,\n    hrefLang: null,\n    horizAdvX: number,\n    horizOriginX: number,\n    horizOriginY: number,\n    id: null,\n    ideographic: number,\n    imageRendering: null,\n    initialVisibility: null,\n    in: null,\n    in2: null,\n    intercept: number,\n    k: number,\n    k1: number,\n    k2: number,\n    k3: number,\n    k4: number,\n    kernelMatrix: commaOrSpaceSeparated,\n    kernelUnitLength: null,\n    keyPoints: null, // SEMI_COLON_SEPARATED\n    keySplines: null, // SEMI_COLON_SEPARATED\n    keyTimes: null, // SEMI_COLON_SEPARATED\n    kerning: null,\n    lang: null,\n    lengthAdjust: null,\n    letterSpacing: null,\n    lightingColor: null,\n    limitingConeAngle: number,\n    local: null,\n    markerEnd: null,\n    markerMid: null,\n    markerStart: null,\n    markerHeight: null,\n    markerUnits: null,\n    markerWidth: null,\n    mask: null,\n    maskContentUnits: null,\n    maskUnits: null,\n    mathematical: null,\n    max: null,\n    media: null,\n    mediaCharacterEncoding: null,\n    mediaContentEncodings: null,\n    mediaSize: number,\n    mediaTime: null,\n    method: null,\n    min: null,\n    mode: null,\n    name: null,\n    navDown: null,\n    navDownLeft: null,\n    navDownRight: null,\n    navLeft: null,\n    navNext: null,\n    navPrev: null,\n    navRight: null,\n    navUp: null,\n    navUpLeft: null,\n    navUpRight: null,\n    numOctaves: null,\n    observer: null,\n    offset: null,\n    onAbort: null,\n    onActivate: null,\n    onAfterPrint: null,\n    onBeforePrint: null,\n    onBegin: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnd: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFocusIn: null,\n    onFocusOut: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onMouseWheel: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRepeat: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onShow: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onZoom: null,\n    opacity: null,\n    operator: null,\n    order: null,\n    orient: null,\n    orientation: null,\n    origin: null,\n    overflow: null,\n    overlay: null,\n    overlinePosition: number,\n    overlineThickness: number,\n    paintOrder: null,\n    panose1: null,\n    path: null,\n    pathLength: number,\n    patternContentUnits: null,\n    patternTransform: null,\n    patternUnits: null,\n    phase: null,\n    ping: spaceSeparated,\n    pitch: null,\n    playbackOrder: null,\n    pointerEvents: null,\n    points: null,\n    pointsAtX: number,\n    pointsAtY: number,\n    pointsAtZ: number,\n    preserveAlpha: null,\n    preserveAspectRatio: null,\n    primitiveUnits: null,\n    propagate: null,\n    property: commaOrSpaceSeparated,\n    r: null,\n    radius: null,\n    referrerPolicy: null,\n    refX: null,\n    refY: null,\n    rel: commaOrSpaceSeparated,\n    rev: commaOrSpaceSeparated,\n    renderingIntent: null,\n    repeatCount: null,\n    repeatDur: null,\n    requiredExtensions: commaOrSpaceSeparated,\n    requiredFeatures: commaOrSpaceSeparated,\n    requiredFonts: commaOrSpaceSeparated,\n    requiredFormats: commaOrSpaceSeparated,\n    resource: null,\n    restart: null,\n    result: null,\n    rotate: null,\n    rx: null,\n    ry: null,\n    scale: null,\n    seed: null,\n    shapeRendering: null,\n    side: null,\n    slope: null,\n    snapshotTime: null,\n    specularConstant: number,\n    specularExponent: number,\n    spreadMethod: null,\n    spacing: null,\n    startOffset: null,\n    stdDeviation: null,\n    stemh: null,\n    stemv: null,\n    stitchTiles: null,\n    stopColor: null,\n    stopOpacity: null,\n    strikethroughPosition: number,\n    strikethroughThickness: number,\n    string: null,\n    stroke: null,\n    strokeDashArray: commaOrSpaceSeparated,\n    strokeDashOffset: null,\n    strokeLineCap: null,\n    strokeLineJoin: null,\n    strokeMiterLimit: number,\n    strokeOpacity: number,\n    strokeWidth: null,\n    style: null,\n    surfaceScale: number,\n    syncBehavior: null,\n    syncBehaviorDefault: null,\n    syncMaster: null,\n    syncTolerance: null,\n    syncToleranceDefault: null,\n    systemLanguage: commaOrSpaceSeparated,\n    tabIndex: number,\n    tableValues: null,\n    target: null,\n    targetX: number,\n    targetY: number,\n    textAnchor: null,\n    textDecoration: null,\n    textRendering: null,\n    textLength: null,\n    timelineBegin: null,\n    title: null,\n    transformBehavior: null,\n    type: null,\n    typeOf: commaOrSpaceSeparated,\n    to: null,\n    transform: null,\n    u1: null,\n    u2: null,\n    underlinePosition: number,\n    underlineThickness: number,\n    unicode: null,\n    unicodeBidi: null,\n    unicodeRange: null,\n    unitsPerEm: number,\n    values: null,\n    vAlphabetic: number,\n    vMathematical: number,\n    vectorEffect: null,\n    vHanging: number,\n    vIdeographic: number,\n    version: null,\n    vertAdvY: number,\n    vertOriginX: number,\n    vertOriginY: number,\n    viewBox: null,\n    viewTarget: null,\n    visibility: null,\n    width: null,\n    widths: null,\n    wordSpacing: null,\n    writingMode: null,\n    x: null,\n    x1: null,\n    x2: null,\n    xChannelSelector: null,\n    xHeight: number,\n    y: null,\n    y1: null,\n    y2: null,\n    yChannelSelector: null,\n    z: null,\n    zoomAndPan: null\n  }\n})\n","/**\n * @typedef {import('./lib/util/info.js').Info} Info\n * @typedef {import('./lib/util/schema.js').Schema} Schema\n */\n\nimport {merge} from './lib/util/merge.js'\nimport {xlink} from './lib/xlink.js'\nimport {xml} from './lib/xml.js'\nimport {xmlns} from './lib/xmlns.js'\nimport {aria} from './lib/aria.js'\nimport {html as htmlBase} from './lib/html.js'\nimport {svg as svgBase} from './lib/svg.js'\n\nexport {find} from './lib/find.js'\nexport {hastToReact} from './lib/hast-to-react.js'\nexport {normalize} from './lib/normalize.js'\nexport const html = merge([xml, xlink, xmlns, aria, htmlBase], 'html')\nexport const svg = merge([xml, xlink, xmlns, aria, svgBase], 'svg')\n","import {visit} from 'unist-util-visit'\n\n/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Element} Element\n *\n * @callback AllowElement\n * @param {Element} element\n * @param {number} index\n * @param {Element|Root} parent\n * @returns {boolean|undefined}\n *\n * @typedef Options\n * @property {Array<string>} [allowedElements]\n * @property {Array<string>} [disallowedElements=[]]\n * @property {AllowElement} [allowElement]\n * @property {boolean} [unwrapDisallowed=false]\n */\n\n/**\n * @type {import('unified').Plugin<[Options], Root>}\n */\nexport default function rehypeFilter(options) {\n  if (options.allowedElements && options.disallowedElements) {\n    throw new TypeError(\n      'Only one of `allowedElements` and `disallowedElements` should be defined'\n    )\n  }\n\n  if (\n    options.allowedElements ||\n    options.disallowedElements ||\n    options.allowElement\n  ) {\n    return (tree) => {\n      visit(tree, 'element', (node, index, parent_) => {\n        const parent = /** @type {Element|Root} */ (parent_)\n        /** @type {boolean|undefined} */\n        let remove\n\n        if (options.allowedElements) {\n          remove = !options.allowedElements.includes(node.tagName)\n        } else if (options.disallowedElements) {\n          remove = options.disallowedElements.includes(node.tagName)\n        }\n\n        if (!remove && options.allowElement && typeof index === 'number') {\n          remove = !options.allowElement(node, index, parent)\n        }\n\n        if (remove && typeof index === 'number') {\n          if (options.unwrapDisallowed && node.children) {\n            parent.children.splice(index, 1, ...node.children)\n          } else {\n            parent.children.splice(index, 1)\n          }\n\n          return index\n        }\n\n        return undefined\n      })\n    }\n  }\n}\n","const protocols = ['http', 'https', 'mailto', 'tel']\n\n/**\n * @param {string} uri\n * @returns {string}\n */\nexport function uriTransformer(uri) {\n  const url = (uri || '').trim()\n  const first = url.charAt(0)\n\n  if (first === '#' || first === '/') {\n    return url\n  }\n\n  const colon = url.indexOf(':')\n  if (colon === -1) {\n    return url\n  }\n\n  let index = -1\n\n  while (++index < protocols.length) {\n    const protocol = protocols[index]\n\n    if (\n      colon === protocol.length &&\n      url.slice(0, protocol.length).toLowerCase() === protocol\n    ) {\n      return url\n    }\n  }\n\n  index = url.indexOf('?')\n  if (index !== -1 && colon > index) {\n    return url\n  }\n\n  index = url.indexOf('#')\n  if (index !== -1 && colon > index) {\n    return url\n  }\n\n  // eslint-disable-next-line no-script-url\n  return 'javascript:void(0)'\n}\n","/**\n * @param {unknown} thing\n * @returns {boolean}\n */\nexport function whitespace(thing) {\n  /** @type {string} */\n  var value =\n    // @ts-ignore looks like a node.\n    thing && typeof thing === 'object' && thing.type === 'text'\n      ? // @ts-ignore looks like a text.\n        thing.value || ''\n      : thing\n\n  // HTML whitespace expression.\n  // See <https://html.spec.whatwg.org/#space-character>.\n  return typeof value === 'string' && value.replace(/[ \\t\\n\\f\\r]/g, '') === ''\n}\n","/**\n * @typedef {import('./util/schema.js').Schema} Schema\n */\n\nimport {normalize} from './normalize.js'\nimport {DefinedInfo} from './util/defined-info.js'\nimport {Info} from './util/info.js'\n\nconst valid = /^data[-\\w.:]+$/i\nconst dash = /-[a-z]/g\nconst cap = /[A-Z]/g\n\n/**\n * @param {Schema} schema\n * @param {string} value\n * @returns {Info}\n */\nexport function find(schema, value) {\n  const normal = normalize(value)\n  let prop = value\n  let Type = Info\n\n  if (normal in schema.normal) {\n    return schema.property[schema.normal[normal]]\n  }\n\n  if (normal.length > 4 && normal.slice(0, 4) === 'data' && valid.test(value)) {\n    // Attribute or property.\n    if (value.charAt(4) === '-') {\n      // Turn it into a property.\n      const rest = value.slice(5).replace(dash, camelcase)\n      prop = 'data' + rest.charAt(0).toUpperCase() + rest.slice(1)\n    } else {\n      // Turn it into an attribute.\n      const rest = value.slice(4)\n\n      if (!dash.test(rest)) {\n        let dashes = rest.replace(cap, kebab)\n\n        if (dashes.charAt(0) !== '-') {\n          dashes = '-' + dashes\n        }\n\n        value = 'data' + dashes\n      }\n    }\n\n    Type = DefinedInfo\n  }\n\n  return new Type(prop, value)\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction kebab($0) {\n  return '-' + $0.toLowerCase()\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction camelcase($0) {\n  return $0.charAt(1).toUpperCase()\n}\n","export const hastToReact = {\n  classId: 'classID',\n  dataType: 'datatype',\n  itemId: 'itemID',\n  strokeDashArray: 'strokeDasharray',\n  strokeDashOffset: 'strokeDashoffset',\n  strokeLineCap: 'strokeLinecap',\n  strokeLineJoin: 'strokeLinejoin',\n  strokeMiterLimit: 'strokeMiterlimit',\n  typeOf: 'typeof',\n  xLinkActuate: 'xlinkActuate',\n  xLinkArcRole: 'xlinkArcrole',\n  xLinkHref: 'xlinkHref',\n  xLinkRole: 'xlinkRole',\n  xLinkShow: 'xlinkShow',\n  xLinkTitle: 'xlinkTitle',\n  xLinkType: 'xlinkType',\n  xmlnsXLink: 'xmlnsXlink'\n}\n","/**\n * @template T\n * @typedef {import('react').ComponentType<T>} ComponentType<T>\n */\n\n/**\n * @template T\n * @typedef {import('react').ComponentPropsWithoutRef<T>} ComponentPropsWithoutRef<T>\n */\n\n/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('unist').Position} Position\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Text} Text\n * @typedef {import('hast').Comment} Comment\n * @typedef {import('hast').DocType} Doctype\n * @typedef {import('property-information').Info} Info\n * @typedef {import('property-information').Schema} Schema\n * @typedef {import('./complex-types').ReactMarkdownProps} ReactMarkdownProps\n *\n * @typedef Raw\n * @property {'raw'} type\n * @property {string} value\n *\n * @typedef Context\n * @property {Options} options\n * @property {Schema} schema\n * @property {number} listDepth\n *\n * @callback TransformLink\n * @param {string} href\n * @param {Array<ElementContent>} children\n * @param {string?} title\n * @returns {string}\n *\n * @callback TransformImage\n * @param {string} src\n * @param {string} alt\n * @param {string?} title\n * @returns {string}\n *\n * @typedef {import('react').HTMLAttributeAnchorTarget} TransformLinkTargetType\n *\n * @callback TransformLinkTarget\n * @param {string} href\n * @param {Array<ElementContent>} children\n * @param {string?} title\n * @returns {TransformLinkTargetType|undefined}\n *\n * @typedef {keyof JSX.IntrinsicElements} ReactMarkdownNames\n *\n * To do: is `data-sourcepos` typeable?\n *\n * @typedef {ComponentPropsWithoutRef<'code'> & ReactMarkdownProps & {inline?: boolean}} CodeProps\n * @typedef {ComponentPropsWithoutRef<'h1'> & ReactMarkdownProps & {level: number}} HeadingProps\n * @typedef {ComponentPropsWithoutRef<'li'> & ReactMarkdownProps & {checked: boolean|null, index: number, ordered: boolean}} LiProps\n * @typedef {ComponentPropsWithoutRef<'ol'> & ReactMarkdownProps & {depth: number, ordered: true}} OrderedListProps\n * @typedef {ComponentPropsWithoutRef<'table'> & ReactMarkdownProps & {style?: Record<string, unknown>, isHeader: boolean}} TableCellProps\n * @typedef {ComponentPropsWithoutRef<'tr'> & ReactMarkdownProps & {isHeader: boolean}} TableRowProps\n * @typedef {ComponentPropsWithoutRef<'ul'> & ReactMarkdownProps & {depth: number, ordered: false}} UnorderedListProps\n *\n * @typedef {ComponentType<CodeProps>} CodeComponent\n * @typedef {ComponentType<HeadingProps>} HeadingComponent\n * @typedef {ComponentType<LiProps>} LiComponent\n * @typedef {ComponentType<OrderedListProps>} OrderedListComponent\n * @typedef {ComponentType<TableCellProps>} TableCellComponent\n * @typedef {ComponentType<TableRowProps>} TableRowComponent\n * @typedef {ComponentType<UnorderedListProps>} UnorderedListComponent\n *\n * @typedef SpecialComponents\n * @property {CodeComponent|ReactMarkdownNames} code\n * @property {HeadingComponent|ReactMarkdownNames} h1\n * @property {HeadingComponent|ReactMarkdownNames} h2\n * @property {HeadingComponent|ReactMarkdownNames} h3\n * @property {HeadingComponent|ReactMarkdownNames} h4\n * @property {HeadingComponent|ReactMarkdownNames} h5\n * @property {HeadingComponent|ReactMarkdownNames} h6\n * @property {LiComponent|ReactMarkdownNames} li\n * @property {OrderedListComponent|ReactMarkdownNames} ol\n * @property {TableCellComponent|ReactMarkdownNames} td\n * @property {TableCellComponent|ReactMarkdownNames} th\n * @property {TableRowComponent|ReactMarkdownNames} tr\n * @property {UnorderedListComponent|ReactMarkdownNames} ul\n *\n * @typedef {Partial<Omit<import('./complex-types').NormalComponents, keyof SpecialComponents> & SpecialComponents>} Components\n *\n * @typedef Options\n * @property {boolean} [sourcePos=false]\n * @property {boolean} [rawSourcePos=false]\n * @property {boolean} [skipHtml=false]\n * @property {boolean} [includeElementIndex=false]\n * @property {null|false|TransformLink} [transformLinkUri]\n * @property {TransformImage} [transformImageUri]\n * @property {TransformLinkTargetType|TransformLinkTarget} [linkTarget]\n * @property {Components} [components]\n */\n\nimport React from 'react'\nimport ReactIs from 'react-is'\nimport {whitespace} from 'hast-util-whitespace'\nimport {svg, find, hastToReact} from 'property-information'\nimport {stringify as spaces} from 'space-separated-tokens'\nimport {stringify as commas} from 'comma-separated-tokens'\nimport style from 'style-to-object'\n\nconst own = {}.hasOwnProperty\n\n// The table-related elements that must not contain whitespace text according\n// to React.\nconst tableElements = new Set(['table', 'thead', 'tbody', 'tfoot', 'tr'])\n\n/**\n * @param {Context} context\n * @param {Element|Root} node\n */\nexport function childrenToReact(context, node) {\n  /** @type {Array<ReactNode>} */\n  const children = []\n  let childIndex = -1\n  /** @type {Comment|Doctype|Element|Raw|Text} */\n  let child\n\n  while (++childIndex < node.children.length) {\n    child = node.children[childIndex]\n\n    if (child.type === 'element') {\n      children.push(toReact(context, child, childIndex, node))\n    } else if (child.type === 'text') {\n      // Currently, a warning is triggered by react for *any* white space in\n      // tables.\n      // So we drop it.\n      // See: <https://github.com/facebook/react/pull/7081>.\n      // See: <https://github.com/facebook/react/pull/7515>.\n      // See: <https://github.com/remarkjs/remark-react/issues/64>.\n      // See: <https://github.com/remarkjs/react-markdown/issues/576>.\n      if (\n        node.type !== 'element' ||\n        !tableElements.has(node.tagName) ||\n        !whitespace(child)\n      ) {\n        children.push(child.value)\n      }\n    } else if (child.type === 'raw' && !context.options.skipHtml) {\n      // Default behavior is to show (encoded) HTML.\n      children.push(child.value)\n    }\n  }\n\n  return children\n}\n\n/**\n * @param {Context} context\n * @param {Element} node\n * @param {number} index\n * @param {Element|Root} parent\n */\nfunction toReact(context, node, index, parent) {\n  const options = context.options\n  const parentSchema = context.schema\n  /** @type {ReactMarkdownNames} */\n  // @ts-expect-error assume a known HTML/SVG element.\n  const name = node.tagName\n  /** @type {Record<string, unknown>} */\n  const properties = {}\n  let schema = parentSchema\n  /** @type {string} */\n  let property\n\n  if (parentSchema.space === 'html' && name === 'svg') {\n    schema = svg\n    context.schema = schema\n  }\n\n  if (node.properties) {\n    for (property in node.properties) {\n      if (own.call(node.properties, property)) {\n        addProperty(properties, property, node.properties[property], context)\n      }\n    }\n  }\n\n  if (name === 'ol' || name === 'ul') {\n    context.listDepth++\n  }\n\n  const children = childrenToReact(context, node)\n\n  if (name === 'ol' || name === 'ul') {\n    context.listDepth--\n  }\n\n  // Restore parent schema.\n  context.schema = parentSchema\n\n  // Nodes created by plugins do not have positional info, in which case we use\n  // an object that matches the position interface.\n  const position = node.position || {\n    start: {line: null, column: null, offset: null},\n    end: {line: null, column: null, offset: null}\n  }\n  const component =\n    options.components && own.call(options.components, name)\n      ? options.components[name]\n      : name\n  const basic = typeof component === 'string' || component === React.Fragment\n\n  if (!ReactIs.isValidElementType(component)) {\n    throw new TypeError(\n      `Component for name \\`${name}\\` not defined or is not renderable`\n    )\n  }\n\n  properties.key = [\n    name,\n    position.start.line,\n    position.start.column,\n    index\n  ].join('-')\n\n  if (name === 'a' && options.linkTarget) {\n    properties.target =\n      typeof options.linkTarget === 'function'\n        ? options.linkTarget(\n            String(properties.href || ''),\n            node.children,\n            typeof properties.title === 'string' ? properties.title : null\n          )\n        : options.linkTarget\n  }\n\n  if (name === 'a' && options.transformLinkUri) {\n    properties.href = options.transformLinkUri(\n      String(properties.href || ''),\n      node.children,\n      typeof properties.title === 'string' ? properties.title : null\n    )\n  }\n\n  if (\n    !basic &&\n    name === 'code' &&\n    parent.type === 'element' &&\n    parent.tagName !== 'pre'\n  ) {\n    properties.inline = true\n  }\n\n  if (\n    !basic &&\n    (name === 'h1' ||\n      name === 'h2' ||\n      name === 'h3' ||\n      name === 'h4' ||\n      name === 'h5' ||\n      name === 'h6')\n  ) {\n    properties.level = Number.parseInt(name.charAt(1), 10)\n  }\n\n  if (name === 'img' && options.transformImageUri) {\n    properties.src = options.transformImageUri(\n      String(properties.src || ''),\n      String(properties.alt || ''),\n      typeof properties.title === 'string' ? properties.title : null\n    )\n  }\n\n  if (!basic && name === 'li' && parent.type === 'element') {\n    const input = getInputElement(node)\n    properties.checked =\n      input && input.properties ? Boolean(input.properties.checked) : null\n    properties.index = getElementsBeforeCount(parent, node)\n    properties.ordered = parent.tagName === 'ol'\n  }\n\n  if (!basic && (name === 'ol' || name === 'ul')) {\n    properties.ordered = name === 'ol'\n    properties.depth = context.listDepth\n  }\n\n  if (name === 'td' || name === 'th') {\n    if (properties.align) {\n      if (!properties.style) properties.style = {}\n      // @ts-expect-error assume `style` is an object\n      properties.style.textAlign = properties.align\n      delete properties.align\n    }\n\n    if (!basic) {\n      properties.isHeader = name === 'th'\n    }\n  }\n\n  if (!basic && name === 'tr' && parent.type === 'element') {\n    properties.isHeader = Boolean(parent.tagName === 'thead')\n  }\n\n  // If `sourcePos` is given, pass source information (line/column info from markdown source).\n  if (options.sourcePos) {\n    properties['data-sourcepos'] = flattenPosition(position)\n  }\n\n  if (!basic && options.rawSourcePos) {\n    properties.sourcePosition = node.position\n  }\n\n  // If `includeElementIndex` is given, pass node index info to components.\n  if (!basic && options.includeElementIndex) {\n    properties.index = getElementsBeforeCount(parent, node)\n    properties.siblingCount = getElementsBeforeCount(parent)\n  }\n\n  if (!basic) {\n    properties.node = node\n  }\n\n  // Ensure no React warnings are emitted for void elements w/ children.\n  return children.length > 0\n    ? React.createElement(component, properties, children)\n    : React.createElement(component, properties)\n}\n\n/**\n * @param {Element|Root} node\n * @returns {Element?}\n */\nfunction getInputElement(node) {\n  let index = -1\n\n  while (++index < node.children.length) {\n    const child = node.children[index]\n\n    if (child.type === 'element' && child.tagName === 'input') {\n      return child\n    }\n  }\n\n  return null\n}\n\n/**\n * @param {Element|Root} parent\n * @param {Element} [node]\n * @returns {number}\n */\nfunction getElementsBeforeCount(parent, node) {\n  let index = -1\n  let count = 0\n\n  while (++index < parent.children.length) {\n    if (parent.children[index] === node) break\n    if (parent.children[index].type === 'element') count++\n  }\n\n  return count\n}\n\n/**\n * @param {Record<string, unknown>} props\n * @param {string} prop\n * @param {unknown} value\n * @param {Context} ctx\n */\nfunction addProperty(props, prop, value, ctx) {\n  const info = find(ctx.schema, prop)\n  let result = value\n\n  // Ignore nullish and `NaN` values.\n  // eslint-disable-next-line no-self-compare\n  if (result === null || result === undefined || result !== result) {\n    return\n  }\n\n  // Accept `array`.\n  // Most props are space-separated.\n  if (Array.isArray(result)) {\n    result = info.commaSeparated ? commas(result) : spaces(result)\n  }\n\n  if (info.property === 'style' && typeof result === 'string') {\n    result = parseStyle(result)\n  }\n\n  if (info.space && info.property) {\n    props[\n      own.call(hastToReact, info.property)\n        ? hastToReact[info.property]\n        : info.property\n    ] = result\n  } else if (info.attribute) {\n    props[info.attribute] = result\n  }\n}\n\n/**\n * @param {string} value\n * @returns {Record<string, string>}\n */\nfunction parseStyle(value) {\n  /** @type {Record<string, string>} */\n  const result = {}\n\n  try {\n    style(value, iterator)\n  } catch {\n    // Silent.\n  }\n\n  return result\n\n  /**\n   * @param {string} name\n   * @param {string} v\n   */\n  function iterator(name, v) {\n    const k = name.slice(0, 4) === '-ms-' ? `ms-${name.slice(4)}` : name\n    result[k.replace(/-([a-z])/g, styleReplacer)] = v\n  }\n}\n\n/**\n * @param {unknown} _\n * @param {string} $1\n */\nfunction styleReplacer(_, $1) {\n  return $1.toUpperCase()\n}\n\n/**\n * @param {Position|{start: {line: null, column: null, offset: null}, end: {line: null, column: null, offset: null}}} pos\n * @returns {string}\n */\nfunction flattenPosition(pos) {\n  return [\n    pos.start.line,\n    ':',\n    pos.start.column,\n    '-',\n    pos.end.line,\n    ':',\n    pos.end.column\n  ]\n    .map((d) => String(d))\n    .join('')\n}\n","/**\n * @typedef {Object} StringifyOptions\n * @property {boolean} [padLeft=true] Whether to pad a space before a token (`boolean`, default: `true`).\n * @property {boolean} [padRight=false] Whether to pad a space after a token (`boolean`, default: `false`).\n */\n\n/**\n * Parse comma separated tokens to an array.\n *\n * @param {string} value\n * @returns {Array.<string>}\n */\nexport function parse(value) {\n  /** @type {Array.<string>} */\n  var tokens = []\n  var input = String(value || '')\n  var index = input.indexOf(',')\n  var start = 0\n  /** @type {boolean} */\n  var end\n  /** @type {string} */\n  var token\n\n  while (!end) {\n    if (index === -1) {\n      index = input.length\n      end = true\n    }\n\n    token = input.slice(start, index).trim()\n\n    if (token || !end) {\n      tokens.push(token)\n    }\n\n    start = index + 1\n    index = input.indexOf(',', start)\n  }\n\n  return tokens\n}\n\n/**\n * Serialize an array of strings to comma separated tokens.\n *\n * @param {Array.<string|number>} values\n * @param {StringifyOptions} [options]\n * @returns {string}\n */\nexport function stringify(values, options) {\n  var settings = options || {}\n\n  // Ensure the last empty entry is seen.\n  if (values[values.length - 1] === '') {\n    values = values.concat('')\n  }\n\n  return values\n    .join(\n      (settings.padRight ? ' ' : '') +\n        ',' +\n        (settings.padLeft === false ? '' : ' ')\n    )\n    .trim()\n}\n","/**\n * Parse space separated tokens to an array of strings.\n *\n * @param {string} value Space separated tokens\n * @returns {Array.<string>} Tokens\n */\nexport function parse(value) {\n  const input = String(value || '').trim()\n  return input ? input.split(/[ \\t\\n\\r\\f]+/g) : []\n}\n\n/**\n * Serialize an array of strings as space separated tokens.\n *\n * @param {Array.<string|number>} values Tokens\n * @returns {string} Space separated tokens\n */\nexport function stringify(values) {\n  return values.join(' ').trim()\n}\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('react').ReactElement<{}>} ReactElement\n * @typedef {import('unified').PluggableList} PluggableList\n * @typedef {import('hast').Root} Root\n * @typedef {import('./rehype-filter.js').Options} FilterOptions\n * @typedef {import('./ast-to-react.js').Options} TransformOptions\n *\n * @typedef CoreOptions\n * @property {string} children\n *\n * @typedef PluginOptions\n * @property {PluggableList} [remarkPlugins=[]]\n * @property {PluggableList} [rehypePlugins=[]]\n * @property {import('remark-rehype').Options | undefined} [remarkRehypeOptions={}]\n *\n * @typedef LayoutOptions\n * @property {string} [className]\n *\n * @typedef {CoreOptions & PluginOptions & LayoutOptions & FilterOptions & TransformOptions} ReactMarkdownOptions\n *\n * @typedef Deprecation\n * @property {string} id\n * @property {string} [to]\n */\n\nimport React from 'react'\nimport {VFile} from 'vfile'\nimport {unified} from 'unified'\nimport remarkParse from 'remark-parse'\nimport remarkRehype from 'remark-rehype'\nimport PropTypes from 'prop-types'\nimport {html} from 'property-information'\nimport rehypeFilter from './rehype-filter.js'\nimport {uriTransformer} from './uri-transformer.js'\nimport {childrenToReact} from './ast-to-react.js'\n\nconst own = {}.hasOwnProperty\nconst changelog =\n  'https://github.com/remarkjs/react-markdown/blob/main/changelog.md'\n\n/** @type {Record<string, Deprecation>} */\nconst deprecated = {\n  plugins: {to: 'plugins', id: 'change-plugins-to-remarkplugins'},\n  renderers: {to: 'components', id: 'change-renderers-to-components'},\n  astPlugins: {id: 'remove-buggy-html-in-markdown-parser'},\n  allowDangerousHtml: {id: 'remove-buggy-html-in-markdown-parser'},\n  escapeHtml: {id: 'remove-buggy-html-in-markdown-parser'},\n  source: {to: 'children', id: 'change-source-to-children'},\n  allowNode: {\n    to: 'allowElement',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes'\n  },\n  allowedTypes: {\n    to: 'allowedElements',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes'\n  },\n  disallowedTypes: {\n    to: 'disallowedElements',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes'\n  },\n  includeNodeIndex: {\n    to: 'includeElementIndex',\n    id: 'change-includenodeindex-to-includeelementindex'\n  }\n}\n\n/**\n * React component to render markdown.\n *\n * @param {ReactMarkdownOptions} options\n * @returns {ReactElement}\n */\nexport function ReactMarkdown(options) {\n  for (const key in deprecated) {\n    if (own.call(deprecated, key) && own.call(options, key)) {\n      const deprecation = deprecated[key]\n      console.warn(\n        `[react-markdown] Warning: please ${\n          deprecation.to ? `use \\`${deprecation.to}\\` instead of` : 'remove'\n        } \\`${key}\\` (see <${changelog}#${deprecation.id}> for more info)`\n      )\n      delete deprecated[key]\n    }\n  }\n\n  const processor = unified()\n    .use(remarkParse)\n    .use(options.remarkPlugins || [])\n    .use(remarkRehype, {\n      ...options.remarkRehypeOptions,\n      allowDangerousHtml: true\n    })\n    .use(options.rehypePlugins || [])\n    .use(rehypeFilter, options)\n\n  const file = new VFile()\n\n  if (typeof options.children === 'string') {\n    file.value = options.children\n  } else if (options.children !== undefined && options.children !== null) {\n    console.warn(\n      `[react-markdown] Warning: please pass a string as \\`children\\` (not: \\`${options.children}\\`)`\n    )\n  }\n\n  const hastNode = processor.runSync(processor.parse(file), file)\n\n  if (hastNode.type !== 'root') {\n    throw new TypeError('Expected a `root` node')\n  }\n\n  /** @type {ReactElement} */\n  let result = React.createElement(\n    React.Fragment,\n    {},\n    childrenToReact({options, schema: html, listDepth: 0}, hastNode)\n  )\n\n  if (options.className) {\n    result = React.createElement('div', {className: options.className}, result)\n  }\n\n  return result\n}\n\nReactMarkdown.defaultProps = {transformLinkUri: uriTransformer}\n\nReactMarkdown.propTypes = {\n  // Core options:\n  children: PropTypes.string,\n  // Layout options:\n  className: PropTypes.string,\n  // Filter options:\n  allowElement: PropTypes.func,\n  allowedElements: PropTypes.arrayOf(PropTypes.string),\n  disallowedElements: PropTypes.arrayOf(PropTypes.string),\n  unwrapDisallowed: PropTypes.bool,\n  // Plugin options:\n  remarkPlugins: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.object,\n      PropTypes.func,\n      PropTypes.arrayOf(\n        PropTypes.oneOfType([\n          PropTypes.bool,\n          PropTypes.string,\n          PropTypes.object,\n          PropTypes.func,\n          PropTypes.arrayOf(\n            // prettier-ignore\n            // type-coverage:ignore-next-line\n            PropTypes.any\n          )\n        ])\n      )\n    ])\n  ),\n  rehypePlugins: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.object,\n      PropTypes.func,\n      PropTypes.arrayOf(\n        PropTypes.oneOfType([\n          PropTypes.bool,\n          PropTypes.string,\n          PropTypes.object,\n          PropTypes.func,\n          PropTypes.arrayOf(\n            // prettier-ignore\n            // type-coverage:ignore-next-line\n            PropTypes.any\n          )\n        ])\n      )\n    ])\n  ),\n  // Transform options:\n  sourcePos: PropTypes.bool,\n  rawSourcePos: PropTypes.bool,\n  skipHtml: PropTypes.bool,\n  includeElementIndex: PropTypes.bool,\n  transformLinkUri: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]),\n  linkTarget: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n  transformImageUri: PropTypes.func,\n  components: PropTypes.object\n}\n"],"names":["_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d","_excluded","Box","options","defaultTheme","defaultClassName","generateClassName","styleFunctionSx","defaultStyleFunctionSx","BoxRoot","styled","React","inProps","ref","theme","useTheme","_extendSxProp","extendSxProp","className","component","other","_objectWithoutPropertiesLoose","_jsx","_extends","as","clsx","createBox","createTheme","ClassNameGenerator","getCardContentUtilityClass","slot","generateUtilityClass","generateUtilityClasses","CardContentRoot","name","overridesResolver","props","styles","root","padding","paddingBottom","useThemeProps","ownerState","classes","composeClasses","useUtilityClasses","getCardHeaderUtilityClass","CardHeaderRoot","cardHeaderClasses","title","subheader","display","alignItems","CardHeaderAvatar","avatar","flex","marginRight","CardHeaderAction","action","alignSelf","marginTop","marginBottom","CardHeaderContent","content","disableTypography","subheaderProp","subheaderTypographyProps","titleProp","titleTypographyProps","type","Typography","variant","children","color","_jsxs","getCardMediaUtilityClass","CardMediaRoot","isMediaComponent","isImageComponent","media","img","backgroundSize","backgroundRepeat","backgroundPosition","width","objectFit","MEDIA_COMPONENTS","IMAGE_COMPONENTS","image","src","style","indexOf","composedStyle","backgroundImage","slots","role","undefined","getCardUtilityClass","CardRoot","Paper","overflow","raised","elevation","DividerRoot","absolute","light","orientation","vertical","flexItem","withChildren","withChildrenVertical","textAlign","textAlignRight","textAlignLeft","margin","flexShrink","borderWidth","borderStyle","borderColor","vars","palette","divider","borderBottomWidth","position","bottom","left","dividerChannel","alpha","marginLeft","spacing","height","borderRightWidth","whiteSpace","border","borderTop","top","transform","flexDirection","borderLeft","DividerWrapper","wrapper","wrapperVertical","paddingLeft","paddingRight","paddingTop","Divider","getDividerUtilityClass","getListItemAvatarUtilityClass","ListItemAvatarRoot","alignItemsFlexStart","minWidth","context","ListContext","ListItemTextRoot","listItemTextClasses","primary","secondary","inset","multiline","dense","ListItemText","primaryProp","primaryTypographyProps","secondaryProp","secondaryTypographyProps","getListItemTextUtilityClass","getListItemUtilityClass","getListItemSecondaryActionClassesUtilityClass","ListItemSecondaryActionRoot","disableGutters","right","ListItemSecondaryAction","muiName","_excluded2","ListItemRoot","gutters","disablePadding","button","hasSecondaryAction","secondaryAction","justifyContent","textDecoration","boxSizing","listItemButtonClasses","listItemClasses","backgroundColor","focus","mainChannel","selectedOpacity","main","focusOpacity","opacity","disabledOpacity","borderBottom","backgroundClip","transition","transitions","create","duration","shortest","hover","hoverOpacity","ListItemContainer","container","autoFocus","childrenProp","componentProp","components","componentsProps","ContainerComponent","ContainerProps","ContainerClassName","disabled","focusVisibleClassName","selected","childContext","listItemRef","useEnhancedEffect","current","length","isMuiElement","handleRef","useForkRef","Root","rootProps","componentProps","Component","ButtonBase","value","isHostComponent","pop","getUnit","input","String","match","toUnitless","parseFloat","getSkeletonUtilityClass","_t","_t2","_t3","_t4","pulseKeyframe","keyframes","waveKeyframe","SkeletonRoot","animation","hasChildren","fitContent","heightAuto","radiusUnit","shape","borderRadius","radiusValue","Skeleton","bg","text","mode","transformOrigin","Math","round","visibility","maxWidth","css","Boolean","hasOwn","Object","prototype","hasOwnProperty","toStr","toString","defineProperty","gOPD","getOwnPropertyDescriptor","isArray","arr","Array","call","isPlainObject","obj","key","hasOwnConstructor","hasIsPrototypeOf","constructor","setProperty","target","enumerable","configurable","newValue","writable","getProperty","module","extend","copy","copyIsArray","clone","arguments","i","deep","COMMENT_REGEX","NEWLINE_REGEX","WHITESPACE_REGEX","PROPERTY_REGEX","COLON_REGEX","VALUE_REGEX","SEMICOLON_REGEX","TRIM_REGEX","EMPTY_STRING","trim","str","replace","TypeError","lineno","column","updatePosition","lines","lastIndexOf","start","line","node","Position","whitespace","this","end","source","errorsList","error","msg","err","Error","reason","filename","silent","push","re","m","exec","slice","comments","rules","c","comment","pos","charAt","declaration","prop","val","ret","property","decl","decls","declarations","isBuffer","encodeCache","encode","string","exclude","keepEscaped","l","code","nextCode","cache","result","defaultChars","ch","fromCharCode","test","toUpperCase","charCodeAt","getEncodeCache","encodeURIComponent","componentChars","ReactPropTypesSecret","emptyFunction","emptyFunctionWithReset","resetWarningCache","shim","propName","componentName","location","propFullName","secret","getShim","isRequired","ReactPropTypes","array","bigint","bool","func","number","object","symbol","any","arrayOf","element","elementType","instanceOf","objectOf","oneOf","oneOfType","exact","checkPropTypes","PropTypes","u","b","Symbol","for","e","f","g","h","k","n","p","q","t","v","a","r","$$typeof","ContextConsumer","ContextProvider","Element","ForwardRef","Fragment","Lazy","Memo","Portal","Profiler","StrictMode","Suspense","SuspenseList","isAsyncMode","isConcurrentMode","isContextConsumer","isContextProvider","isElement","isForwardRef","isFragment","isLazy","isMemo","isPortal","isProfiler","isStrictMode","isSuspense","isSuspenseList","isValidElementType","getModuleId","typeOf","parse","iterator","output","hasIterator","len","stringifyPosition","point","index","VFileMessage","place","origin","parts","message","stack","fatal","ruleId","actual","expected","file","url","note","path","basename","ext","assertPath","seenNonSlash","firstNonSlashEnd","extIndex","dirname","unmatchedSlash","extname","startPart","startDot","preDotState","join","joined","segments","normalize","sep","allowAboveRoot","lastSlashIndex","lastSegmentLength","lastSlash","dots","normalizeString","JSON","stringify","proc","cwd","isUrl","fileURLOrPath","href","urlToPath","URL","protocol","hostname","pathname","third","decodeURIComponent","getPathFromURLPosix","order","VFile","buffer","data","messages","history","stored","map","includes","assertNonEmpty","assertPart","stem","encoding","part","_toArray","arrayWithHoles","iterableToArray","unsupportedIterableToArray","nonIterableRest","bail","getPrototypeOf","toStringTag","wrap","middleware","callback","called","parameters","fnExpectsCallback","done","apply","exception","Promise","then","unified","base","frozen","transformers","fns","pipeline","run","values","middlewareIndex","next","fn","use","middelware","trough","attachers","namespace","freezeIndex","processor","assertUnfrozen","own","Parser","Compiler","freeze","attacher","transformer","Number","POSITIVE_INFINITY","settings","addPlugin","addList","addPreset","assign","add","plugin","plugins","entry","isPlainObj","doc","vfile","assertParser","newable","assertCompiler","assertNode","compile","executor","resolve","reject","tree","runSync","complete","assertDone","process","processSync","destination","keys","asyncName","looksLikeAVFile","includeImageAlt","one","alt","all","splice","list","remove","items","chunkStart","from","unshift","combineExtensions","extensions","syntaxExtension","extension","hook","constructs","existing","before","asciiAlpha","regexCheck","asciiDigit","asciiHexDigit","asciiAlphanumeric","asciiPunctuation","asciiAtext","asciiControl","markdownLineEndingOrSpace","markdownLineEnding","markdownSpace","unicodeWhitespace","unicodePunctuation","regex","factorySpace","effects","ok","max","limit","size","enter","prefix","consume","exit","tokenize","previous","contentStart","attempt","parser","contentInitial","lineStart","token","contentType","document","childFlow","childToken","lineStartOffset","self","continued","item","containerState","continuation","documentContinue","checkNewContainers","_closeFlow","closeFlow","indexBeforeExits","events","indexBeforeFlow","exitContainers","documentContinued","currentConstruct","concrete","flowStart","interrupt","_gfmTableDynamicInterruptHack","check","containerConstruct","thereIsANewContainer","thereIsNoNewContainer","lazy","now","offset","containerContinue","flow","_tokenizer","flowContinue","writeToChild","eof","stream","sliceStream","defineSkip","write","seen","nok","disable","null","blankLine","partial","subtokenize","event","lineIndex","otherIndex","otherEvent","subevents","more","jumps","_isInFirstContentOfListItem","subcontent","_container","eventIndex","startPosition","startPositions","tokenizer","childEvents","gaps","adjust","breaks","_gfmTasklistFirstContentOfListItem","contentEnd","continuationConstruct","contentContinue","prefixed","tail","sliceSerialize","initial","flowInitial","afterConstruct","resolver","resolveAll","createResolver","initializeFactory","field","notText","atBreak","resolveAllLineSuffixes","extraResolver","chunks","bufferIndex","tabs","chunk","_index","_bufferIndex","createTokenizer","initialize","columnStart","resolveAllConstructs","accountForPotentialSkip","fields","constructFactory","construct","info","addResult","onsuccessfulcheck","expandTabs","atTab","serializeChunks","state","view","startIndex","startBufferIndex","endIndex","endBufferIndex","sliceChunks","chunkIndex","go","_","restore","onreturn","returnState","bogusState","listOfConstructs","constructIndex","handleListOfConstructs","def","handleMapOfConstructs","handleConstruct","startPoint","startPrevious","startCurrentConstruct","startEventsIndex","startStack","store","resolveTo","thematicBreak","marker","sequence","initialSize","kind","atMarker","inside","onBlank","listItemPrefixWhitespaceConstruct","endOfPrefix","otherPrefix","initialBlankLine","notBlank","furtherBlankLines","notInCurrentItem","indentConstruct","blockQuote","open","after","factoryDestination","literalType","literalMarkerType","rawType","stringType","balance","destinationEnclosedBefore","destinationRaw","destinationEnclosed","destinationEnclosedEscape","destinationRawEscape","factoryLabel","markerType","label","labelEscape","factoryTitle","atFirstTitleBreak","atTitleBreak","titleEscape","factoryWhitespace","normalizeIdentifier","toLowerCase","definition","identifier","labelAfter","titleConstruct","defined","codeIndented","afterStartPrefix","afterPrefix","indentedContent","headingAtx","fenceOpenInside","headingBreak","setextUnderline","paragraph","closingSequence","closingSequenceEnd","heading","htmlBlockNames","htmlRawNames","htmlFlow","startTag","declarationStart","tagCloseStart","continuationDeclarationInside","tagName","commentOpenInside","cdataOpenInside","basicSelfClosing","completeAttributeNameBefore","completeClosingTagAfter","completeEnd","completeAttributeName","completeAttributeNameAfter","completeAttributeValueBefore","completeAttributeValueQuoted","completeAttributeValueUnquoted","completeAttributeValueQuotedAfter","completeAfter","continuationCommentInside","continuationRawTagOpen","continuationClose","continuationCharacterDataInside","continuationAtLineEnding","nextBlankConstruct","htmlContinueStart","htmlLineEnd","continuationRawEndTag","codeFenced","closingFenceConstruct","closingSequenceStart","sizeOpen","nonLazyLine","initialPrefix","sequenceOpen","infoOpen","openAfter","infoAfter","meta","createElement","decodeNamedCharacterReference","characterReference","innerHTML","char","textContent","numeric","characterEscape","lineEnding","labelEnd","labelStart","_balanced","_inactive","balanced","afterLabelEnd","resourceConstruct","fullReferenceConstruct","collapsedReferenceConstruct","close","group","insideSpan","destinationAfter","between","afterLabel","labelStartImage","classifyCharacter","attention","attentionMarkers","_open","_close","openingSequence","nextEvents","movePoint","autolink","schemeOrEmailAtext","emailAtext","schemeInsideOrEmailAtext","urlInside","emailAtSignOrDot","emailLabel","emailValue","htmlText","declarationOpen","instruction","tagOpen","commentOpen","cdataOpen","commentStart","commentStartDash","commentClose","atLineEnding","cdata","cdataClose","cdataEnd","instructionClose","tagClose","tagCloseBetween","tagOpenBetween","tagOpenAttributeName","tagOpenAttributeNameAfter","tagOpenAttributeValueBefore","tagOpenAttributeValueQuoted","tagOpenAttributeValueUnquoted","tagOpenAttributeValueQuotedAfter","labelStartLink","hardBreakEscape","codeText","gap","tailExitIndex","headEnterIndex","resolveText","search","decodeNumericCharacterReference","parseInt","characterEscapeOrReference","decodeString","decode","$0","$1","$2","head","hex","fromMarkdown","config","configure","transforms","canContainEols","opener","link","autolinkProtocol","onenterdata","autolinkEmail","atxHeading","codeFlow","codeFencedFenceInfo","codeFencedFenceMeta","codeTextData","codeFlowValue","definitionDestinationString","definitionLabelString","definitionTitleString","emphasis","hardBreak","hardBreakTrailing","html","htmlFlowData","htmlTextData","listItem","listItemValue","onenterlistitemvalue","listOrdered","onenterlistordered","listUnordered","reference","onenterreference","referenceString","resourceDestinationString","resourceTitleString","setextHeading","strong","closer","atxHeadingSequence","onexitatxheadingsequence","onexitautolinkemail","onexitautolinkprotocol","characterEscapeValue","onexitdata","characterReferenceMarkerHexadecimal","onexitcharacterreferencemarker","characterReferenceMarkerNumeric","characterReferenceValue","onexitcharacterreferencevalue","onexitcodefenced","codeFencedFence","onexitcodefencedfence","onexitcodefencedfenceinfo","onexitcodefencedfencemeta","onexitcodeindented","onexitcodetext","onexitdefinitiondestinationstring","onexitdefinitionlabelstring","onexitdefinitiontitlestring","onexithardbreak","onexithtmlflow","onexithtmltext","onexitimage","onexitlabel","labelText","onexitlabeltext","onexitlineending","onexitlink","onexitreferencestring","onexitresourcedestinationstring","onexitresourcetitlestring","resource","onexitresource","onexitsetextheading","setextHeadingLineSequence","onexitsetextheadinglinesequence","setextHeadingText","onexitsetextheadingtext","mdastExtensions","tokenStack","listStack","resume","setData","getData","prepareList","handler","defaultOnError","firstBlankLineIndex","containerBalance","listSpread","tailIndex","tailEvent","_spread","and","errorHandler","onExitError","lang","depth","parent","referenceType","ancestor","fragment","ordered","spread","checked","compiler","postprocess","defaultConstructs","concat","atCarriageReturn","endPosition","lastIndex","ceil","preprocess","combined","convert","castFactory","typeFactory","anyFactory","propsFactory","tests","checks","visitParents","visitor","reverse","is","step","factory","parents","visit","subresult","grandparents","toResult","pointStart","pointEnd","clean","unknown","augment","handlers","passThrough","returnNode","unknownHandler","nodes","characterReferences","sanitizeUri","skip","normalizeUri","colon","questionMark","numberSign","slash","loose","footnoteReference","counter","id","safeId","footnoteOrder","footnoteCounts","reuseCounter","clobberPrefix","dataFootnoteRef","ariaDescribedBy","revert","subtype","suffix","contents","listItemLoose","trimLine","codePointAt","blockquote","break","delete","footnote","footnoteById","no","dangerous","imageReference","inlineCode","linkReference","listLoose","wrapped","child","properties","table","rows","align","row","out","cellIndex","cell","last","trimLines","toml","ignore","yaml","footnoteDefinition","allowDangerousHtml","footnoteLabel","footnoteLabelTagName","footnoteLabelProperties","footnoteBackLabel","definitions","hName","hProperties","hChildren","ctx","toHast","foot","listItems","referenceIndex","backReferences","backReference","dataFootnoteBackref","ariaLabel","tailTail","dataFootnotes","footer","bridge","mutate","Schema","normal","space","merge","Info","attribute","boolean","booleanish","overloadedBoolean","commaSeparated","spaceSeparated","commaOrSpaceSeparated","mustUseProperty","powers","increment","types","DefinedInfo","mask","mark","attributes","xlink","xLinkActuate","xLinkArcRole","xLinkHref","xLinkRole","xLinkShow","xLinkTitle","xLinkType","xml","xmlLang","xmlBase","xmlSpace","caseSensitiveTransform","caseInsensitiveTransform","xmlns","xmlnsxlink","xmlnsXLink","aria","ariaActiveDescendant","ariaAtomic","ariaAutoComplete","ariaBusy","ariaChecked","ariaColCount","ariaColIndex","ariaColSpan","ariaControls","ariaCurrent","ariaDetails","ariaDisabled","ariaDropEffect","ariaErrorMessage","ariaExpanded","ariaFlowTo","ariaGrabbed","ariaHasPopup","ariaHidden","ariaInvalid","ariaKeyShortcuts","ariaLabelledBy","ariaLevel","ariaLive","ariaModal","ariaMultiLine","ariaMultiSelectable","ariaOrientation","ariaOwns","ariaPlaceholder","ariaPosInSet","ariaPressed","ariaReadOnly","ariaRelevant","ariaRequired","ariaRoleDescription","ariaRowCount","ariaRowIndex","ariaRowSpan","ariaSelected","ariaSetSize","ariaSort","ariaValueMax","ariaValueMin","ariaValueNow","ariaValueText","acceptcharset","classname","htmlfor","httpequiv","abbr","accept","acceptCharset","accessKey","allow","allowFullScreen","allowPaymentRequest","allowUserMedia","async","autoCapitalize","autoComplete","autoPlay","capture","charSet","cite","cols","colSpan","contentEditable","controls","controlsList","coords","crossOrigin","dateTime","decoding","defer","dir","dirName","download","draggable","encType","enterKeyHint","form","formAction","formEncType","formMethod","formNoValidate","formTarget","headers","hidden","high","hrefLang","htmlFor","httpEquiv","imageSizes","imageSrcSet","inputMode","integrity","isMap","itemId","itemProp","itemRef","itemScope","itemType","language","loading","loop","low","manifest","maxLength","method","min","minLength","multiple","muted","nonce","noModule","noValidate","onAbort","onAfterPrint","onAuxClick","onBeforePrint","onBeforeUnload","onBlur","onCancel","onCanPlay","onCanPlayThrough","onChange","onClick","onClose","onContextLost","onContextMenu","onContextRestored","onCopy","onCueChange","onCut","onDblClick","onDrag","onDragEnd","onDragEnter","onDragExit","onDragLeave","onDragOver","onDragStart","onDrop","onDurationChange","onEmptied","onEnded","onError","onFocus","onFormData","onHashChange","onInput","onInvalid","onKeyDown","onKeyPress","onKeyUp","onLanguageChange","onLoad","onLoadedData","onLoadedMetadata","onLoadEnd","onLoadStart","onMessage","onMessageError","onMouseDown","onMouseEnter","onMouseLeave","onMouseMove","onMouseOut","onMouseOver","onMouseUp","onOffline","onOnline","onPageHide","onPageShow","onPaste","onPause","onPlay","onPlaying","onPopState","onProgress","onRateChange","onRejectionHandled","onReset","onResize","onScroll","onSecurityPolicyViolation","onSeeked","onSeeking","onSelect","onSlotChange","onStalled","onStorage","onSubmit","onSuspend","onTimeUpdate","onToggle","onUnhandledRejection","onUnload","onVolumeChange","onWaiting","onWheel","optimum","pattern","ping","placeholder","playsInline","poster","preload","readOnly","referrerPolicy","rel","required","reversed","rowSpan","sandbox","scope","scoped","seamless","sizes","span","spellCheck","srcDoc","srcLang","srcSet","tabIndex","translate","typeMustMatch","useMap","aLink","archive","axis","background","bgColor","bottomMargin","cellPadding","cellSpacing","charOff","classId","clear","codeBase","codeType","compact","declare","face","frame","frameBorder","hSpace","leftMargin","longDesc","lowSrc","marginHeight","marginWidth","noResize","noHref","noShade","noWrap","profile","prompt","rev","rightMargin","scheme","scrolling","standby","summary","topMargin","valueType","version","vAlign","vLink","vSpace","allowTransparency","autoCorrect","autoSave","disablePictureInPicture","disableRemotePlayback","results","security","unselectable","svg","accentHeight","alignmentBaseline","arabicForm","baselineShift","capHeight","clipPath","clipRule","colorInterpolation","colorInterpolationFilters","colorProfile","colorRendering","dataType","dominantBaseline","enableBackground","fillOpacity","fillRule","floodColor","floodOpacity","fontFamily","fontSize","fontSizeAdjust","fontStretch","fontStyle","fontVariant","fontWeight","glyphName","glyphOrientationHorizontal","glyphOrientationVertical","horizAdvX","horizOriginX","horizOriginY","imageRendering","letterSpacing","lightingColor","markerEnd","markerMid","markerStart","navDown","navDownLeft","navDownRight","navLeft","navNext","navPrev","navRight","navUp","navUpLeft","navUpRight","onActivate","onBegin","onEnd","onFocusIn","onFocusOut","onMouseWheel","onRepeat","onShow","onZoom","overlinePosition","overlineThickness","paintOrder","panose1","pointerEvents","renderingIntent","shapeRendering","stopColor","stopOpacity","strikethroughPosition","strikethroughThickness","strokeDashArray","strokeDashOffset","strokeLineCap","strokeLineJoin","strokeMiterLimit","strokeOpacity","strokeWidth","textAnchor","textRendering","underlinePosition","underlineThickness","unicodeBidi","unicodeRange","unitsPerEm","vAlphabetic","vHanging","vIdeographic","vMathematical","vectorEffect","vertAdvY","vertOriginX","vertOriginY","wordSpacing","writingMode","xHeight","playbackOrder","timelineBegin","about","accumulate","additive","alphabetic","amplitude","ascent","attributeName","attributeType","azimuth","bandwidth","baseFrequency","baseProfile","bbox","begin","bias","by","calcMode","clip","clipPathUnits","contentScriptType","contentStyleType","cursor","cx","cy","defaultAction","descent","diffuseConstant","direction","dur","divisor","dx","dy","edgeMode","editable","exponent","externalResourcesRequired","fill","filter","filterRes","filterUnits","focusable","focusHighlight","format","fr","fx","fy","g1","g2","glyphRef","gradientTransform","gradientUnits","hanging","hatchContentUnits","hatchUnits","ideographic","initialVisibility","in","in2","intercept","k1","k2","k3","k4","kernelMatrix","kernelUnitLength","keyPoints","keySplines","keyTimes","kerning","lengthAdjust","limitingConeAngle","local","markerHeight","markerUnits","markerWidth","maskContentUnits","maskUnits","mathematical","mediaCharacterEncoding","mediaContentEncodings","mediaSize","mediaTime","numOctaves","observer","operator","orient","overlay","pathLength","patternContentUnits","patternTransform","patternUnits","phase","pitch","points","pointsAtX","pointsAtY","pointsAtZ","preserveAlpha","preserveAspectRatio","primitiveUnits","propagate","radius","refX","refY","repeatCount","repeatDur","requiredExtensions","requiredFeatures","requiredFonts","requiredFormats","restart","rotate","rx","ry","scale","seed","side","slope","snapshotTime","specularConstant","specularExponent","spreadMethod","startOffset","stdDeviation","stemh","stemv","stitchTiles","stroke","surfaceScale","syncBehavior","syncBehaviorDefault","syncMaster","syncTolerance","syncToleranceDefault","systemLanguage","tableValues","targetX","targetY","textLength","transformBehavior","to","u1","u2","unicode","viewBox","viewTarget","widths","x","x1","x2","xChannelSelector","y","y1","y2","yChannelSelector","z","zoomAndPan","htmlBase","svgBase","rehypeFilter","allowedElements","disallowedElements","allowElement","parent_","unwrapDisallowed","protocols","thing","valid","dash","cap","kebab","camelcase","hastToReact","tableElements","Set","childrenToReact","childIndex","toReact","has","skipHtml","parentSchema","schema","addProperty","listDepth","basic","ReactIs","linkTarget","transformLinkUri","inline","level","transformImageUri","getInputElement","getElementsBeforeCount","isHeader","sourcePos","rawSourcePos","sourcePosition","includeElementIndex","siblingCount","count","Type","rest","dashes","find","padRight","padLeft","commas","styleReplacer","parseStyle","deprecated","renderers","astPlugins","escapeHtml","allowNode","allowedTypes","disallowedTypes","includeNodeIndex","ReactMarkdown","deprecation","console","warn","remarkParse","remarkPlugins","remarkRehype","remarkRehypeOptions","rehypePlugins","hastNode","defaultProps","uri","first","propTypes"],"sourceRoot":""}